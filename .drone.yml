global-variables:
  environment: &default_environment
    REPO_USERNAME:
      from_secret: reposilite-user-01
    REPO_PASSWORD:
      from_secret: reposilite-secret-01

kind: pipeline
type: docker
name: default
platform:
  os: linux
  arch: amd64 

steps:

  #  we just take the dependencies-section from the pom-files to build our cache-key
  - name: build dependency-cache-checksum-file
    image: alpine/xml
    commands:
    - xq -r .project.dependencies < ./pom.xml > dependencies.json

  - name: restore-cache
    image: meltwater/drone-cache
    volumes:
    - name: cache
      path: /drone/cache
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: s3_cache_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3_cache_access_key_secret
    pull: true
    settings:
      cache_key: '{{ checksum "./dependencies.json" }}'
      restore: true
      bucket: drone-gh-01
      region: us-east-1
      endpoint: https://s3.witcom.cloud
      path_style: true
      mount:
        - '/drone/cache'

  - name: Fix permissions on build-cache directory
    image: alpine
    volumes:  
    - name: cache
      path: /drone/cache
    commands:
    - chown -R 1001:0 /drone/cache && chmod -R g+=wrx /drone/cache

  # - name: Generate Command OpenAPI-Specs from BGE-Definitions
  #   image: artifactory.witcom.services/witcom/command-bge2swagger
  #   environment:
  #     <<: *default_environment
  #     GENERATOR_OUTPUT: /tmp/command-swagger.json
  #   commands:
  #   - java -jar /app/bge2swagger.jar
  #   - java -jar /app/openapi-generator-cli.jar generate -g openapi -o /tmp/out -i $${GENERATOR_OUTPUT}
  #   - mv /tmp/out/openapi.json ./specs/command-openapi.json

  # - name: Compile & package
  #   image: maven:3-eclipse-temurin-17
  #   environment:
  #     <<: *default_environment
  #   volumes:
  #   - name: cache
  #     path: /drone/cache
  #   commands:
  #   - mvn package -B -V -Dmaven.repo.local=/drone/cache

  - name: create settings.xml for maven deployments
    image: alpine:latest
    environment:
      REPO_USERNAME:
        from_secret: reposilite-user-01
      REPO_PASSWORD:
        from_secret: reposilite-secret-01
    commands:
      - echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"><servers><server><id>maven-snapshots</id><username>'$REPO_USERNAME'</username><password>'$REPO_PASSWORD'</password></server><server><id>maven-releases</id><username>'$REPO_USERNAME'</username><password>'$REPO_PASSWORD'</password></server></servers></settings>' > settings.xml
    # when:
    #   event:
    #   - tag
    #   ref:
    #   - refs/tags/v*

  - name: Deploy maven release
    image: maven:3-eclipse-temurin-17
    environment:
      <<: *default_environment
    volumes:
    - name: cache
      path: /drone/cache
    commands:
    - mvn -Pgenerate-client deploy -DskipTests=true -B -Dmaven.repo.local=/drone/cache -gs settings.xml
    when:
      event:
      - tag
      ref:
      - refs/tags/v*

  - name: Deploy maven snapshot
    image: maven:3-eclipse-temurin-17
    environment:
      <<: *default_environment
    volumes:
    - name: cache
      path: /drone/cache
    commands:
    - mvn -Pgenerate-client deploy -DskipTests=true -B -Dmaven.repo.local=/drone/cache -gs settings.xml
    when:
      event:
        exclude:
        - tag
        include:
        - push
      branch:
      - main

  - name: rebuild-cache
    image: meltwater/drone-cache
    volumes:
    - name: cache
      path: /drone/cache
    pull: true
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: s3_cache_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3_cache_access_key_secret
    settings:
      rebuild: true
      cache_key: '{{ checksum "./dependencies.json" }}'
      bucket: drone-gh-01
      region: us-east-1
      endpoint: https://s3.witcom.cloud
      path_style: true
      mount:
        - '/drone/cache'

volumes:
- name: cache
  temp: {}

trigger:
  event:
  - tag
  - push
  - pull_request

image_pull_secrets:
- artifactory-dockerconfig-01  