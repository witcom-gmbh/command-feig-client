/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateHostnameCreateLinkAliasRequestData
 */
@JsonPropertyOrder({
  UpdateHostnameCreateLinkAliasRequestData.JSON_PROPERTY_ALIAS_NAME,
  UpdateHostnameCreateLinkAliasRequestData.JSON_PROPERTY_FUNCTION,
  UpdateHostnameCreateLinkAliasRequestData.JSON_PROPERTY_REMARK
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateHostnameCreateLinkAliasRequestData {
  public static final String JSON_PROPERTY_ALIAS_NAME = "aliasName";
  private String aliasName;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public UpdateHostnameCreateLinkAliasRequestData() {
  }

  public UpdateHostnameCreateLinkAliasRequestData aliasName(String aliasName) {
    
    this.aliasName = aliasName;
    return this;
  }

   /**
   * Get aliasName
   * @return aliasName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALIAS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAliasName() {
    return aliasName;
  }


  @JsonProperty(JSON_PROPERTY_ALIAS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAliasName(String aliasName) {
    this.aliasName = aliasName;
  }


  public UpdateHostnameCreateLinkAliasRequestData function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public UpdateHostnameCreateLinkAliasRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateHostnameCreateLinkAliasRequestData updateHostnameCreateLinkAliasRequestData = (UpdateHostnameCreateLinkAliasRequestData) o;
    return Objects.equals(this.aliasName, updateHostnameCreateLinkAliasRequestData.aliasName) &&
        Objects.equals(this.function, updateHostnameCreateLinkAliasRequestData.function) &&
        Objects.equals(this.remark, updateHostnameCreateLinkAliasRequestData.remark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aliasName, function, remark);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateHostnameCreateLinkAliasRequestData {\n");
    sb.append("    aliasName: ").append(toIndentedString(aliasName)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

