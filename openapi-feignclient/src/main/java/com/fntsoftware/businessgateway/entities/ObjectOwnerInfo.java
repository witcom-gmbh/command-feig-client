/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131102312
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ObjectOwnerInfo
 */
@JsonPropertyOrder({
  ObjectOwnerInfo.JSON_PROPERTY_MAIN_OWNER,
  ObjectOwnerInfo.JSON_PROPERTY_DESCRIPTION,
  ObjectOwnerInfo.JSON_PROPERTY_MANDANT_ID
})
@JsonTypeName("objectOwnerInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:00:24.721128812Z[Etc/UTC]")
public class ObjectOwnerInfo {
  public static final String JSON_PROPERTY_MAIN_OWNER = "mainOwner";
  private Boolean mainOwner;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_MANDANT_ID = "mandantId";
  private BigDecimal mandantId;

  public ObjectOwnerInfo() {
  }

  public ObjectOwnerInfo mainOwner(Boolean mainOwner) {
    
    this.mainOwner = mainOwner;
    return this;
  }

   /**
   * Get mainOwner
   * @return mainOwner
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMainOwner() {
    return mainOwner;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainOwner(Boolean mainOwner) {
    this.mainOwner = mainOwner;
  }


  public ObjectOwnerInfo description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ObjectOwnerInfo mandantId(BigDecimal mandantId) {
    
    this.mandantId = mandantId;
    return this;
  }

   /**
   * Get mandantId
   * @return mandantId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANDANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMandantId() {
    return mandantId;
  }


  @JsonProperty(JSON_PROPERTY_MANDANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandantId(BigDecimal mandantId) {
    this.mandantId = mandantId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectOwnerInfo objectOwnerInfo = (ObjectOwnerInfo) o;
    return Objects.equals(this.mainOwner, objectOwnerInfo.mainOwner) &&
        Objects.equals(this.description, objectOwnerInfo.description) &&
        Objects.equals(this.mandantId, objectOwnerInfo.mandantId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mainOwner, description, mandantId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectOwnerInfo {\n");
    sb.append("    mainOwner: ").append(toIndentedString(mainOwner)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mandantId: ").append(toIndentedString(mandantId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

