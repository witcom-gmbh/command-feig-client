/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.StartJobAsyncJobMasterAdditionalSettingsRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StartJobAsyncJobMasterRequestData
 */
@JsonPropertyOrder({
  StartJobAsyncJobMasterRequestData.JSON_PROPERTY_JOB_NAME,
  StartJobAsyncJobMasterRequestData.JSON_PROPERTY_MAN_ID,
  StartJobAsyncJobMasterRequestData.JSON_PROPERTY_TESTRUN,
  StartJobAsyncJobMasterRequestData.JSON_PROPERTY_ADDITIONAL_SETTINGS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class StartJobAsyncJobMasterRequestData {
  public static final String JSON_PROPERTY_JOB_NAME = "jobName";
  private String jobName;

  public static final String JSON_PROPERTY_MAN_ID = "manId";
  private BigDecimal manId;

  public static final String JSON_PROPERTY_TESTRUN = "testrun";
  private Boolean testrun;

  public static final String JSON_PROPERTY_ADDITIONAL_SETTINGS = "additionalSettings";
  private List<StartJobAsyncJobMasterAdditionalSettingsRequestData> additionalSettings;

  public StartJobAsyncJobMasterRequestData() {
  }

  public StartJobAsyncJobMasterRequestData jobName(String jobName) {
    
    this.jobName = jobName;
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobName() {
    return jobName;
  }


  @JsonProperty(JSON_PROPERTY_JOB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public StartJobAsyncJobMasterRequestData manId(BigDecimal manId) {
    
    this.manId = manId;
    return this;
  }

   /**
   * Get manId
   * @return manId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getManId() {
    return manId;
  }


  @JsonProperty(JSON_PROPERTY_MAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManId(BigDecimal manId) {
    this.manId = manId;
  }


  public StartJobAsyncJobMasterRequestData testrun(Boolean testrun) {
    
    this.testrun = testrun;
    return this;
  }

   /**
   * Get testrun
   * @return testrun
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TESTRUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTestrun() {
    return testrun;
  }


  @JsonProperty(JSON_PROPERTY_TESTRUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestrun(Boolean testrun) {
    this.testrun = testrun;
  }


  public StartJobAsyncJobMasterRequestData additionalSettings(List<StartJobAsyncJobMasterAdditionalSettingsRequestData> additionalSettings) {
    
    this.additionalSettings = additionalSettings;
    return this;
  }

  public StartJobAsyncJobMasterRequestData addAdditionalSettingsItem(StartJobAsyncJobMasterAdditionalSettingsRequestData additionalSettingsItem) {
    if (this.additionalSettings == null) {
      this.additionalSettings = new ArrayList<>();
    }
    this.additionalSettings.add(additionalSettingsItem);
    return this;
  }

   /**
   * Get additionalSettings
   * @return additionalSettings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StartJobAsyncJobMasterAdditionalSettingsRequestData> getAdditionalSettings() {
    return additionalSettings;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalSettings(List<StartJobAsyncJobMasterAdditionalSettingsRequestData> additionalSettings) {
    this.additionalSettings = additionalSettings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartJobAsyncJobMasterRequestData startJobAsyncJobMasterRequestData = (StartJobAsyncJobMasterRequestData) o;
    return Objects.equals(this.jobName, startJobAsyncJobMasterRequestData.jobName) &&
        Objects.equals(this.manId, startJobAsyncJobMasterRequestData.manId) &&
        Objects.equals(this.testrun, startJobAsyncJobMasterRequestData.testrun) &&
        Objects.equals(this.additionalSettings, startJobAsyncJobMasterRequestData.additionalSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobName, manId, testrun, additionalSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartJobAsyncJobMasterRequestData {\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    manId: ").append(toIndentedString(manId)).append("\n");
    sb.append("    testrun: ").append(toIndentedString(testrun)).append("\n");
    sb.append("    additionalSettings: ").append(toIndentedString(additionalSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

