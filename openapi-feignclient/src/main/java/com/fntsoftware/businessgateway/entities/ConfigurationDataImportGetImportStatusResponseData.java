/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConfigurationDataImportGetImportStatusResponseData
 */
@JsonPropertyOrder({
  ConfigurationDataImportGetImportStatusResponseData.JSON_PROPERTY_PERCENT_COMPLETED,
  ConfigurationDataImportGetImportStatusResponseData.JSON_PROPERTY_DATASETS_TOTAL,
  ConfigurationDataImportGetImportStatusResponseData.JSON_PROPERTY_IMPORT_SUCCESSFUL,
  ConfigurationDataImportGetImportStatusResponseData.JSON_PROPERTY_DATASETS_COMPLETED,
  ConfigurationDataImportGetImportStatusResponseData.JSON_PROPERTY_IMPORT_COMPLETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class ConfigurationDataImportGetImportStatusResponseData {
  public static final String JSON_PROPERTY_PERCENT_COMPLETED = "percentCompleted";
  private BigDecimal percentCompleted;

  public static final String JSON_PROPERTY_DATASETS_TOTAL = "datasetsTotal";
  private BigDecimal datasetsTotal;

  public static final String JSON_PROPERTY_IMPORT_SUCCESSFUL = "importSuccessful";
  private Boolean importSuccessful;

  public static final String JSON_PROPERTY_DATASETS_COMPLETED = "datasetsCompleted";
  private BigDecimal datasetsCompleted;

  public static final String JSON_PROPERTY_IMPORT_COMPLETED = "importCompleted";
  private Boolean importCompleted;

  public ConfigurationDataImportGetImportStatusResponseData() {
  }

  public ConfigurationDataImportGetImportStatusResponseData percentCompleted(BigDecimal percentCompleted) {
    
    this.percentCompleted = percentCompleted;
    return this;
  }

   /**
   * Get percentCompleted
   * @return percentCompleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERCENT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPercentCompleted() {
    return percentCompleted;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentCompleted(BigDecimal percentCompleted) {
    this.percentCompleted = percentCompleted;
  }


  public ConfigurationDataImportGetImportStatusResponseData datasetsTotal(BigDecimal datasetsTotal) {
    
    this.datasetsTotal = datasetsTotal;
    return this;
  }

   /**
   * Get datasetsTotal
   * @return datasetsTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASETS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDatasetsTotal() {
    return datasetsTotal;
  }


  @JsonProperty(JSON_PROPERTY_DATASETS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasetsTotal(BigDecimal datasetsTotal) {
    this.datasetsTotal = datasetsTotal;
  }


  public ConfigurationDataImportGetImportStatusResponseData importSuccessful(Boolean importSuccessful) {
    
    this.importSuccessful = importSuccessful;
    return this;
  }

   /**
   * Get importSuccessful
   * @return importSuccessful
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPORT_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getImportSuccessful() {
    return importSuccessful;
  }


  @JsonProperty(JSON_PROPERTY_IMPORT_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportSuccessful(Boolean importSuccessful) {
    this.importSuccessful = importSuccessful;
  }


  public ConfigurationDataImportGetImportStatusResponseData datasetsCompleted(BigDecimal datasetsCompleted) {
    
    this.datasetsCompleted = datasetsCompleted;
    return this;
  }

   /**
   * Get datasetsCompleted
   * @return datasetsCompleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASETS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDatasetsCompleted() {
    return datasetsCompleted;
  }


  @JsonProperty(JSON_PROPERTY_DATASETS_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasetsCompleted(BigDecimal datasetsCompleted) {
    this.datasetsCompleted = datasetsCompleted;
  }


  public ConfigurationDataImportGetImportStatusResponseData importCompleted(Boolean importCompleted) {
    
    this.importCompleted = importCompleted;
    return this;
  }

   /**
   * Get importCompleted
   * @return importCompleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPORT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getImportCompleted() {
    return importCompleted;
  }


  @JsonProperty(JSON_PROPERTY_IMPORT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportCompleted(Boolean importCompleted) {
    this.importCompleted = importCompleted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationDataImportGetImportStatusResponseData configurationDataImportGetImportStatusResponseData = (ConfigurationDataImportGetImportStatusResponseData) o;
    return Objects.equals(this.percentCompleted, configurationDataImportGetImportStatusResponseData.percentCompleted) &&
        Objects.equals(this.datasetsTotal, configurationDataImportGetImportStatusResponseData.datasetsTotal) &&
        Objects.equals(this.importSuccessful, configurationDataImportGetImportStatusResponseData.importSuccessful) &&
        Objects.equals(this.datasetsCompleted, configurationDataImportGetImportStatusResponseData.datasetsCompleted) &&
        Objects.equals(this.importCompleted, configurationDataImportGetImportStatusResponseData.importCompleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percentCompleted, datasetsTotal, importSuccessful, datasetsCompleted, importCompleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationDataImportGetImportStatusResponseData {\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    datasetsTotal: ").append(toIndentedString(datasetsTotal)).append("\n");
    sb.append("    importSuccessful: ").append(toIndentedString(importSuccessful)).append("\n");
    sb.append("    datasetsCompleted: ").append(toIndentedString(datasetsCompleted)).append("\n");
    sb.append("    importCompleted: ").append(toIndentedString(importCompleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

