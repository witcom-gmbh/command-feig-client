/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.Ci;
import com.fntsoftware.businessgateway.entities.LinkAttribute;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LinkedCi
 */
@JsonPropertyOrder({
  LinkedCi.JSON_PROPERTY_CI,
  LinkedCi.JSON_PROPERTY_LINK_ATTRIBUTES,
  LinkedCi.JSON_PROPERTY_LINK_ELID
})
@JsonTypeName("linkedCi")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class LinkedCi {
  public static final String JSON_PROPERTY_CI = "ci";
  private Ci ci;

  public static final String JSON_PROPERTY_LINK_ATTRIBUTES = "linkAttributes";
  private List<LinkAttribute> linkAttributes;

  public static final String JSON_PROPERTY_LINK_ELID = "linkElid";
  private String linkElid;

  public LinkedCi() {
  }

  public LinkedCi ci(Ci ci) {
    
    this.ci = ci;
    return this;
  }

   /**
   * Get ci
   * @return ci
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Ci getCi() {
    return ci;
  }


  @JsonProperty(JSON_PROPERTY_CI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCi(Ci ci) {
    this.ci = ci;
  }


  public LinkedCi linkAttributes(List<LinkAttribute> linkAttributes) {
    
    this.linkAttributes = linkAttributes;
    return this;
  }

  public LinkedCi addLinkAttributesItem(LinkAttribute linkAttributesItem) {
    if (this.linkAttributes == null) {
      this.linkAttributes = new ArrayList<>();
    }
    this.linkAttributes.add(linkAttributesItem);
    return this;
  }

   /**
   * Get linkAttributes
   * @return linkAttributes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkAttribute> getLinkAttributes() {
    return linkAttributes;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkAttributes(List<LinkAttribute> linkAttributes) {
    this.linkAttributes = linkAttributes;
  }


  public LinkedCi linkElid(String linkElid) {
    
    this.linkElid = linkElid;
    return this;
  }

   /**
   * Get linkElid
   * @return linkElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkElid() {
    return linkElid;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkElid(String linkElid) {
    this.linkElid = linkElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkedCi linkedCi = (LinkedCi) o;
    return Objects.equals(this.ci, linkedCi.ci) &&
        Objects.equals(this.linkAttributes, linkedCi.linkAttributes) &&
        Objects.equals(this.linkElid, linkedCi.linkElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ci, linkAttributes, linkElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkedCi {\n");
    sb.append("    ci: ").append(toIndentedString(ci)).append("\n");
    sb.append("    linkAttributes: ").append(toIndentedString(linkAttributes)).append("\n");
    sb.append("    linkElid: ").append(toIndentedString(linkElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

