/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.CreateDuctCreateLinkDuctRouteRequestData;
import com.fntsoftware.businessgateway.entities.CreateDuctCreateLinkDuctTypeRequestData;
import com.fntsoftware.businessgateway.entities.CreateDuctCreateLinkFromNodeRequestData;
import com.fntsoftware.businessgateway.entities.CreateDuctCreateLinkToNodeRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateDuctRequestData
 */
@JsonPropertyOrder({
  CreateDuctRequestData.JSON_PROPERTY_COLOR,
  CreateDuctRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  CreateDuctRequestData.JSON_PROPERTY_DESCRIPTION,
  CreateDuctRequestData.JSON_PROPERTY_CONTEXT_ID,
  CreateDuctRequestData.JSON_PROPERTY_VISIBLE_ID,
  CreateDuctRequestData.JSON_PROPERTY_ID,
  CreateDuctRequestData.JSON_PROPERTY_CREATE_LINK_DUCT_ROUTE,
  CreateDuctRequestData.JSON_PROPERTY_CREATE_LINK_DUCT_TYPE,
  CreateDuctRequestData.JSON_PROPERTY_CREATE_LINK_FROM_NODE,
  CreateDuctRequestData.JSON_PROPERTY_CREATE_LINK_TO_NODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class CreateDuctRequestData {
  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_DUCT_ROUTE = "createLinkDuctRoute";
  private List<CreateDuctCreateLinkDuctRouteRequestData> createLinkDuctRoute = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATE_LINK_DUCT_TYPE = "createLinkDuctType";
  private CreateDuctCreateLinkDuctTypeRequestData createLinkDuctType;

  public static final String JSON_PROPERTY_CREATE_LINK_FROM_NODE = "createLinkFromNode";
  private CreateDuctCreateLinkFromNodeRequestData createLinkFromNode;

  public static final String JSON_PROPERTY_CREATE_LINK_TO_NODE = "createLinkToNode";
  private CreateDuctCreateLinkToNodeRequestData createLinkToNode;

  public CreateDuctRequestData() {
  }

  public CreateDuctRequestData color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public CreateDuctRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public CreateDuctRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateDuctRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public CreateDuctRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public CreateDuctRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CreateDuctRequestData createLinkDuctRoute(List<CreateDuctCreateLinkDuctRouteRequestData> createLinkDuctRoute) {
    
    this.createLinkDuctRoute = createLinkDuctRoute;
    return this;
  }

  public CreateDuctRequestData addCreateLinkDuctRouteItem(CreateDuctCreateLinkDuctRouteRequestData createLinkDuctRouteItem) {
    if (this.createLinkDuctRoute == null) {
      this.createLinkDuctRoute = new ArrayList<>();
    }
    this.createLinkDuctRoute.add(createLinkDuctRouteItem);
    return this;
  }

   /**
   * Get createLinkDuctRoute
   * @return createLinkDuctRoute
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_ROUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CreateDuctCreateLinkDuctRouteRequestData> getCreateLinkDuctRoute() {
    return createLinkDuctRoute;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_ROUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkDuctRoute(List<CreateDuctCreateLinkDuctRouteRequestData> createLinkDuctRoute) {
    this.createLinkDuctRoute = createLinkDuctRoute;
  }


  public CreateDuctRequestData createLinkDuctType(CreateDuctCreateLinkDuctTypeRequestData createLinkDuctType) {
    
    this.createLinkDuctType = createLinkDuctType;
    return this;
  }

   /**
   * Get createLinkDuctType
   * @return createLinkDuctType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateDuctCreateLinkDuctTypeRequestData getCreateLinkDuctType() {
    return createLinkDuctType;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkDuctType(CreateDuctCreateLinkDuctTypeRequestData createLinkDuctType) {
    this.createLinkDuctType = createLinkDuctType;
  }


  public CreateDuctRequestData createLinkFromNode(CreateDuctCreateLinkFromNodeRequestData createLinkFromNode) {
    
    this.createLinkFromNode = createLinkFromNode;
    return this;
  }

   /**
   * Get createLinkFromNode
   * @return createLinkFromNode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_NODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateDuctCreateLinkFromNodeRequestData getCreateLinkFromNode() {
    return createLinkFromNode;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_NODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkFromNode(CreateDuctCreateLinkFromNodeRequestData createLinkFromNode) {
    this.createLinkFromNode = createLinkFromNode;
  }


  public CreateDuctRequestData createLinkToNode(CreateDuctCreateLinkToNodeRequestData createLinkToNode) {
    
    this.createLinkToNode = createLinkToNode;
    return this;
  }

   /**
   * Get createLinkToNode
   * @return createLinkToNode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_NODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateDuctCreateLinkToNodeRequestData getCreateLinkToNode() {
    return createLinkToNode;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_NODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkToNode(CreateDuctCreateLinkToNodeRequestData createLinkToNode) {
    this.createLinkToNode = createLinkToNode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDuctRequestData createDuctRequestData = (CreateDuctRequestData) o;
    return Objects.equals(this.color, createDuctRequestData.color) &&
        Objects.equals(this.sourceSystem, createDuctRequestData.sourceSystem) &&
        Objects.equals(this.description, createDuctRequestData.description) &&
        Objects.equals(this.contextId, createDuctRequestData.contextId) &&
        Objects.equals(this.visibleId, createDuctRequestData.visibleId) &&
        Objects.equals(this.id, createDuctRequestData.id) &&
        Objects.equals(this.createLinkDuctRoute, createDuctRequestData.createLinkDuctRoute) &&
        Objects.equals(this.createLinkDuctType, createDuctRequestData.createLinkDuctType) &&
        Objects.equals(this.createLinkFromNode, createDuctRequestData.createLinkFromNode) &&
        Objects.equals(this.createLinkToNode, createDuctRequestData.createLinkToNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, sourceSystem, description, contextId, visibleId, id, createLinkDuctRoute, createLinkDuctType, createLinkFromNode, createLinkToNode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDuctRequestData {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkDuctRoute: ").append(toIndentedString(createLinkDuctRoute)).append("\n");
    sb.append("    createLinkDuctType: ").append(toIndentedString(createLinkDuctType)).append("\n");
    sb.append("    createLinkFromNode: ").append(toIndentedString(createLinkFromNode)).append("\n");
    sb.append("    createLinkToNode: ").append(toIndentedString(createLinkToNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

