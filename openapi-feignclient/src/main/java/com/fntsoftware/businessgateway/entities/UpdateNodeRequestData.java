/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeCreateLinkZoneRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkTraySectionRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeDeleteLinkZoneRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeUpdateLinkPersonRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateNodeRequestData
 */
@JsonPropertyOrder({
  UpdateNodeRequestData.JSON_PROPERTY_COORD_X,
  UpdateNodeRequestData.JSON_PROPERTY_COORD_Y,
  UpdateNodeRequestData.JSON_PROPERTY_COORD_Z,
  UpdateNodeRequestData.JSON_PROPERTY_FUNCTION,
  UpdateNodeRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateNodeRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateNodeRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateNodeRequestData.JSON_PROPERTY_ID,
  UpdateNodeRequestData.JSON_PROPERTY_COORD_SYSTEM,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_DEVICE_ALL,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateNodeRequestData.JSON_PROPERTY_CREATE_LINK_ZONE,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_DEVICE_ALL,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_TRAY_SECTION,
  UpdateNodeRequestData.JSON_PROPERTY_DELETE_LINK_ZONE,
  UpdateNodeRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateNodeRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateNodeRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateNodeRequestData {
  public static final String JSON_PROPERTY_COORD_X = "coordX";
  private BigDecimal coordX;

  public static final String JSON_PROPERTY_COORD_Y = "coordY";
  private BigDecimal coordY;

  public static final String JSON_PROPERTY_COORD_Z = "coordZ";
  private BigDecimal coordZ;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_COORD_SYSTEM = "coordSystem";
  private String coordSystem;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateNodeCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_DEVICE_ALL = "createLinkDeviceAll";
  private List<UpdateNodeCreateLinkDeviceAllRequestData> createLinkDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateNodeCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateNodeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateNodeCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateNodeCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateNodeCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_ZONE = "createLinkZone";
  private UpdateNodeCreateLinkZoneRequestData createLinkZone;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateNodeDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_DEVICE_ALL = "deleteLinkDeviceAll";
  private List<UpdateNodeDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateNodeDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateNodeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateNodeDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateNodeDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateNodeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_TRAY_SECTION = "deleteLinkTraySection";
  private List<UpdateNodeDeleteLinkTraySectionRequestData> deleteLinkTraySection;

  public static final String JSON_PROPERTY_DELETE_LINK_ZONE = "deleteLinkZone";
  private UpdateNodeDeleteLinkZoneRequestData deleteLinkZone;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateNodeUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateNodeUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateNodeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateNodeRequestData() {
  }

  public UpdateNodeRequestData coordX(BigDecimal coordX) {
    
    this.coordX = coordX;
    return this;
  }

   /**
   * Get coordX
   * @return coordX
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCoordX() {
    return coordX;
  }


  @JsonProperty(JSON_PROPERTY_COORD_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordX(BigDecimal coordX) {
    this.coordX = coordX;
  }


  public UpdateNodeRequestData coordY(BigDecimal coordY) {
    
    this.coordY = coordY;
    return this;
  }

   /**
   * Get coordY
   * @return coordY
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCoordY() {
    return coordY;
  }


  @JsonProperty(JSON_PROPERTY_COORD_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordY(BigDecimal coordY) {
    this.coordY = coordY;
  }


  public UpdateNodeRequestData coordZ(BigDecimal coordZ) {
    
    this.coordZ = coordZ;
    return this;
  }

   /**
   * Get coordZ
   * @return coordZ
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCoordZ() {
    return coordZ;
  }


  @JsonProperty(JSON_PROPERTY_COORD_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordZ(BigDecimal coordZ) {
    this.coordZ = coordZ;
  }


  public UpdateNodeRequestData function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public UpdateNodeRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateNodeRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateNodeRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateNodeRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateNodeRequestData coordSystem(String coordSystem) {
    
    this.coordSystem = coordSystem;
    return this;
  }

   /**
   * Get coordSystem
   * @return coordSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordSystem() {
    return coordSystem;
  }


  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordSystem(String coordSystem) {
    this.coordSystem = coordSystem;
  }


  public UpdateNodeRequestData createLinkContract(List<UpdateNodeCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkContractItem(UpdateNodeCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateNodeCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateNodeRequestData createLinkDeviceAll(List<UpdateNodeCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    
    this.createLinkDeviceAll = createLinkDeviceAll;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkDeviceAllItem(UpdateNodeCreateLinkDeviceAllRequestData createLinkDeviceAllItem) {
    if (this.createLinkDeviceAll == null) {
      this.createLinkDeviceAll = new ArrayList<>();
    }
    this.createLinkDeviceAll.add(createLinkDeviceAllItem);
    return this;
  }

   /**
   * Get createLinkDeviceAll
   * @return createLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkDeviceAllRequestData> getCreateLinkDeviceAll() {
    return createLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDeviceAll(List<UpdateNodeCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    this.createLinkDeviceAll = createLinkDeviceAll;
  }


  public UpdateNodeRequestData createLinkFrameContract(List<UpdateNodeCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkFrameContractItem(UpdateNodeCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateNodeCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateNodeRequestData createLinkMaintenanceContract(List<UpdateNodeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkMaintenanceContractItem(UpdateNodeCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateNodeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateNodeRequestData createLinkOrganization(List<UpdateNodeCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkOrganizationItem(UpdateNodeCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateNodeCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateNodeRequestData createLinkPerson(List<UpdateNodeCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkPersonItem(UpdateNodeCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateNodeCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateNodeRequestData createLinkPersonGroup(List<UpdateNodeCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateNodeRequestData addCreateLinkPersonGroupItem(UpdateNodeCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateNodeCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateNodeRequestData createLinkZone(UpdateNodeCreateLinkZoneRequestData createLinkZone) {
    
    this.createLinkZone = createLinkZone;
    return this;
  }

   /**
   * Get createLinkZone
   * @return createLinkZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateNodeCreateLinkZoneRequestData getCreateLinkZone() {
    return createLinkZone;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkZone(UpdateNodeCreateLinkZoneRequestData createLinkZone) {
    this.createLinkZone = createLinkZone;
  }


  public UpdateNodeRequestData deleteLinkContract(List<UpdateNodeDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkContractItem(UpdateNodeDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateNodeDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateNodeRequestData deleteLinkDeviceAll(List<UpdateNodeDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll) {
    
    this.deleteLinkDeviceAll = deleteLinkDeviceAll;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkDeviceAllItem(UpdateNodeDeleteLinkDeviceAllRequestData deleteLinkDeviceAllItem) {
    if (this.deleteLinkDeviceAll == null) {
      this.deleteLinkDeviceAll = new ArrayList<>();
    }
    this.deleteLinkDeviceAll.add(deleteLinkDeviceAllItem);
    return this;
  }

   /**
   * Get deleteLinkDeviceAll
   * @return deleteLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkDeviceAllRequestData> getDeleteLinkDeviceAll() {
    return deleteLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDeviceAll(List<UpdateNodeDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll) {
    this.deleteLinkDeviceAll = deleteLinkDeviceAll;
  }


  public UpdateNodeRequestData deleteLinkFrameContract(List<UpdateNodeDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkFrameContractItem(UpdateNodeDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateNodeDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateNodeRequestData deleteLinkMaintenanceContract(List<UpdateNodeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkMaintenanceContractItem(UpdateNodeDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateNodeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateNodeRequestData deleteLinkOrganization(List<UpdateNodeDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkOrganizationItem(UpdateNodeDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateNodeDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateNodeRequestData deleteLinkPerson(List<UpdateNodeDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkPersonItem(UpdateNodeDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateNodeDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateNodeRequestData deleteLinkPersonGroup(List<UpdateNodeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkPersonGroupItem(UpdateNodeDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateNodeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateNodeRequestData deleteLinkTraySection(List<UpdateNodeDeleteLinkTraySectionRequestData> deleteLinkTraySection) {
    
    this.deleteLinkTraySection = deleteLinkTraySection;
    return this;
  }

  public UpdateNodeRequestData addDeleteLinkTraySectionItem(UpdateNodeDeleteLinkTraySectionRequestData deleteLinkTraySectionItem) {
    if (this.deleteLinkTraySection == null) {
      this.deleteLinkTraySection = new ArrayList<>();
    }
    this.deleteLinkTraySection.add(deleteLinkTraySectionItem);
    return this;
  }

   /**
   * Get deleteLinkTraySection
   * @return deleteLinkTraySection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_TRAY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeDeleteLinkTraySectionRequestData> getDeleteLinkTraySection() {
    return deleteLinkTraySection;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_TRAY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkTraySection(List<UpdateNodeDeleteLinkTraySectionRequestData> deleteLinkTraySection) {
    this.deleteLinkTraySection = deleteLinkTraySection;
  }


  public UpdateNodeRequestData deleteLinkZone(UpdateNodeDeleteLinkZoneRequestData deleteLinkZone) {
    
    this.deleteLinkZone = deleteLinkZone;
    return this;
  }

   /**
   * Get deleteLinkZone
   * @return deleteLinkZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateNodeDeleteLinkZoneRequestData getDeleteLinkZone() {
    return deleteLinkZone;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkZone(UpdateNodeDeleteLinkZoneRequestData deleteLinkZone) {
    this.deleteLinkZone = deleteLinkZone;
  }


  public UpdateNodeRequestData updateLinkOrganization(List<UpdateNodeUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateNodeRequestData addUpdateLinkOrganizationItem(UpdateNodeUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateNodeUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateNodeRequestData updateLinkPerson(List<UpdateNodeUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateNodeRequestData addUpdateLinkPersonItem(UpdateNodeUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateNodeUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateNodeRequestData updateLinkPersonGroup(List<UpdateNodeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateNodeRequestData addUpdateLinkPersonGroupItem(UpdateNodeUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateNodeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNodeRequestData updateNodeRequestData = (UpdateNodeRequestData) o;
    return Objects.equals(this.coordX, updateNodeRequestData.coordX) &&
        Objects.equals(this.coordY, updateNodeRequestData.coordY) &&
        Objects.equals(this.coordZ, updateNodeRequestData.coordZ) &&
        Objects.equals(this.function, updateNodeRequestData.function) &&
        Objects.equals(this.description, updateNodeRequestData.description) &&
        Objects.equals(this.contextId, updateNodeRequestData.contextId) &&
        Objects.equals(this.visibleId, updateNodeRequestData.visibleId) &&
        Objects.equals(this.id, updateNodeRequestData.id) &&
        Objects.equals(this.coordSystem, updateNodeRequestData.coordSystem) &&
        Objects.equals(this.createLinkContract, updateNodeRequestData.createLinkContract) &&
        Objects.equals(this.createLinkDeviceAll, updateNodeRequestData.createLinkDeviceAll) &&
        Objects.equals(this.createLinkFrameContract, updateNodeRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateNodeRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateNodeRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateNodeRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateNodeRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkZone, updateNodeRequestData.createLinkZone) &&
        Objects.equals(this.deleteLinkContract, updateNodeRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkDeviceAll, updateNodeRequestData.deleteLinkDeviceAll) &&
        Objects.equals(this.deleteLinkFrameContract, updateNodeRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateNodeRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateNodeRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateNodeRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateNodeRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkTraySection, updateNodeRequestData.deleteLinkTraySection) &&
        Objects.equals(this.deleteLinkZone, updateNodeRequestData.deleteLinkZone) &&
        Objects.equals(this.updateLinkOrganization, updateNodeRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateNodeRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateNodeRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordX, coordY, coordZ, function, description, contextId, visibleId, id, coordSystem, createLinkContract, createLinkDeviceAll, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkZone, deleteLinkContract, deleteLinkDeviceAll, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkTraySection, deleteLinkZone, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNodeRequestData {\n");
    sb.append("    coordX: ").append(toIndentedString(coordX)).append("\n");
    sb.append("    coordY: ").append(toIndentedString(coordY)).append("\n");
    sb.append("    coordZ: ").append(toIndentedString(coordZ)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    coordSystem: ").append(toIndentedString(coordSystem)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkDeviceAll: ").append(toIndentedString(createLinkDeviceAll)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkZone: ").append(toIndentedString(createLinkZone)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkDeviceAll: ").append(toIndentedString(deleteLinkDeviceAll)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkTraySection: ").append(toIndentedString(deleteLinkTraySection)).append("\n");
    sb.append("    deleteLinkZone: ").append(toIndentedString(deleteLinkZone)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

