/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoopInCableJunctionBoxRequestData
 */
@JsonPropertyOrder({
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_OUTGOING_GEO_DIRECTION,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_INCOMING_GEO_DIRECTION,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_LOOP_IN_MODE,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_OUTGOING_SIGNAL_DIRECTION,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_CABLE_ELID,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_OUTGOING_CABLE_LENGTH,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_INCOMING_CABLE_LENGTH,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_INCOMING_SIGNAL_DIRECTION,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_INCOMING_CABLE_ID,
  LoopInCableJunctionBoxRequestData.JSON_PROPERTY_INCOMING_CABLE_VISIBLE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class LoopInCableJunctionBoxRequestData {
  public static final String JSON_PROPERTY_OUTGOING_GEO_DIRECTION = "outgoingGeoDirection";
  private String outgoingGeoDirection;

  public static final String JSON_PROPERTY_INCOMING_GEO_DIRECTION = "incomingGeoDirection";
  private String incomingGeoDirection;

  public static final String JSON_PROPERTY_LOOP_IN_MODE = "loopInMode";
  private String loopInMode;

  public static final String JSON_PROPERTY_OUTGOING_SIGNAL_DIRECTION = "outgoingSignalDirection";
  private String outgoingSignalDirection;

  public static final String JSON_PROPERTY_CABLE_ELID = "cableElid";
  private String cableElid;

  public static final String JSON_PROPERTY_OUTGOING_CABLE_LENGTH = "outgoingCableLength";
  private BigDecimal outgoingCableLength;

  public static final String JSON_PROPERTY_INCOMING_CABLE_LENGTH = "incomingCableLength";
  private BigDecimal incomingCableLength;

  public static final String JSON_PROPERTY_INCOMING_SIGNAL_DIRECTION = "incomingSignalDirection";
  private String incomingSignalDirection;

  public static final String JSON_PROPERTY_INCOMING_CABLE_ID = "incomingCableId";
  private String incomingCableId;

  public static final String JSON_PROPERTY_INCOMING_CABLE_VISIBLE_ID = "incomingCableVisibleId";
  private String incomingCableVisibleId;

  public LoopInCableJunctionBoxRequestData() {
  }

  public LoopInCableJunctionBoxRequestData outgoingGeoDirection(String outgoingGeoDirection) {
    
    this.outgoingGeoDirection = outgoingGeoDirection;
    return this;
  }

   /**
   * Get outgoingGeoDirection
   * @return outgoingGeoDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTGOING_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutgoingGeoDirection() {
    return outgoingGeoDirection;
  }


  @JsonProperty(JSON_PROPERTY_OUTGOING_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutgoingGeoDirection(String outgoingGeoDirection) {
    this.outgoingGeoDirection = outgoingGeoDirection;
  }


  public LoopInCableJunctionBoxRequestData incomingGeoDirection(String incomingGeoDirection) {
    
    this.incomingGeoDirection = incomingGeoDirection;
    return this;
  }

   /**
   * Get incomingGeoDirection
   * @return incomingGeoDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMING_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncomingGeoDirection() {
    return incomingGeoDirection;
  }


  @JsonProperty(JSON_PROPERTY_INCOMING_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomingGeoDirection(String incomingGeoDirection) {
    this.incomingGeoDirection = incomingGeoDirection;
  }


  public LoopInCableJunctionBoxRequestData loopInMode(String loopInMode) {
    
    this.loopInMode = loopInMode;
    return this;
  }

   /**
   * Get loopInMode
   * @return loopInMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOP_IN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoopInMode() {
    return loopInMode;
  }


  @JsonProperty(JSON_PROPERTY_LOOP_IN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoopInMode(String loopInMode) {
    this.loopInMode = loopInMode;
  }


  public LoopInCableJunctionBoxRequestData outgoingSignalDirection(String outgoingSignalDirection) {
    
    this.outgoingSignalDirection = outgoingSignalDirection;
    return this;
  }

   /**
   * Get outgoingSignalDirection
   * @return outgoingSignalDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTGOING_SIGNAL_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutgoingSignalDirection() {
    return outgoingSignalDirection;
  }


  @JsonProperty(JSON_PROPERTY_OUTGOING_SIGNAL_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutgoingSignalDirection(String outgoingSignalDirection) {
    this.outgoingSignalDirection = outgoingSignalDirection;
  }


  public LoopInCableJunctionBoxRequestData cableElid(String cableElid) {
    
    this.cableElid = cableElid;
    return this;
  }

   /**
   * Get cableElid
   * @return cableElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableElid() {
    return cableElid;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableElid(String cableElid) {
    this.cableElid = cableElid;
  }


  public LoopInCableJunctionBoxRequestData outgoingCableLength(BigDecimal outgoingCableLength) {
    
    this.outgoingCableLength = outgoingCableLength;
    return this;
  }

   /**
   * Get outgoingCableLength
   * @return outgoingCableLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTGOING_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOutgoingCableLength() {
    return outgoingCableLength;
  }


  @JsonProperty(JSON_PROPERTY_OUTGOING_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutgoingCableLength(BigDecimal outgoingCableLength) {
    this.outgoingCableLength = outgoingCableLength;
  }


  public LoopInCableJunctionBoxRequestData incomingCableLength(BigDecimal incomingCableLength) {
    
    this.incomingCableLength = incomingCableLength;
    return this;
  }

   /**
   * Get incomingCableLength
   * @return incomingCableLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIncomingCableLength() {
    return incomingCableLength;
  }


  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomingCableLength(BigDecimal incomingCableLength) {
    this.incomingCableLength = incomingCableLength;
  }


  public LoopInCableJunctionBoxRequestData incomingSignalDirection(String incomingSignalDirection) {
    
    this.incomingSignalDirection = incomingSignalDirection;
    return this;
  }

   /**
   * Get incomingSignalDirection
   * @return incomingSignalDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMING_SIGNAL_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncomingSignalDirection() {
    return incomingSignalDirection;
  }


  @JsonProperty(JSON_PROPERTY_INCOMING_SIGNAL_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomingSignalDirection(String incomingSignalDirection) {
    this.incomingSignalDirection = incomingSignalDirection;
  }


  public LoopInCableJunctionBoxRequestData incomingCableId(String incomingCableId) {
    
    this.incomingCableId = incomingCableId;
    return this;
  }

   /**
   * Get incomingCableId
   * @return incomingCableId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncomingCableId() {
    return incomingCableId;
  }


  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomingCableId(String incomingCableId) {
    this.incomingCableId = incomingCableId;
  }


  public LoopInCableJunctionBoxRequestData incomingCableVisibleId(String incomingCableVisibleId) {
    
    this.incomingCableVisibleId = incomingCableVisibleId;
    return this;
  }

   /**
   * Get incomingCableVisibleId
   * @return incomingCableVisibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncomingCableVisibleId() {
    return incomingCableVisibleId;
  }


  @JsonProperty(JSON_PROPERTY_INCOMING_CABLE_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomingCableVisibleId(String incomingCableVisibleId) {
    this.incomingCableVisibleId = incomingCableVisibleId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoopInCableJunctionBoxRequestData loopInCableJunctionBoxRequestData = (LoopInCableJunctionBoxRequestData) o;
    return Objects.equals(this.outgoingGeoDirection, loopInCableJunctionBoxRequestData.outgoingGeoDirection) &&
        Objects.equals(this.incomingGeoDirection, loopInCableJunctionBoxRequestData.incomingGeoDirection) &&
        Objects.equals(this.loopInMode, loopInCableJunctionBoxRequestData.loopInMode) &&
        Objects.equals(this.outgoingSignalDirection, loopInCableJunctionBoxRequestData.outgoingSignalDirection) &&
        Objects.equals(this.cableElid, loopInCableJunctionBoxRequestData.cableElid) &&
        Objects.equals(this.outgoingCableLength, loopInCableJunctionBoxRequestData.outgoingCableLength) &&
        Objects.equals(this.incomingCableLength, loopInCableJunctionBoxRequestData.incomingCableLength) &&
        Objects.equals(this.incomingSignalDirection, loopInCableJunctionBoxRequestData.incomingSignalDirection) &&
        Objects.equals(this.incomingCableId, loopInCableJunctionBoxRequestData.incomingCableId) &&
        Objects.equals(this.incomingCableVisibleId, loopInCableJunctionBoxRequestData.incomingCableVisibleId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outgoingGeoDirection, incomingGeoDirection, loopInMode, outgoingSignalDirection, cableElid, outgoingCableLength, incomingCableLength, incomingSignalDirection, incomingCableId, incomingCableVisibleId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoopInCableJunctionBoxRequestData {\n");
    sb.append("    outgoingGeoDirection: ").append(toIndentedString(outgoingGeoDirection)).append("\n");
    sb.append("    incomingGeoDirection: ").append(toIndentedString(incomingGeoDirection)).append("\n");
    sb.append("    loopInMode: ").append(toIndentedString(loopInMode)).append("\n");
    sb.append("    outgoingSignalDirection: ").append(toIndentedString(outgoingSignalDirection)).append("\n");
    sb.append("    cableElid: ").append(toIndentedString(cableElid)).append("\n");
    sb.append("    outgoingCableLength: ").append(toIndentedString(outgoingCableLength)).append("\n");
    sb.append("    incomingCableLength: ").append(toIndentedString(incomingCableLength)).append("\n");
    sb.append("    incomingSignalDirection: ").append(toIndentedString(incomingSignalDirection)).append("\n");
    sb.append("    incomingCableId: ").append(toIndentedString(incomingCableId)).append("\n");
    sb.append("    incomingCableVisibleId: ").append(toIndentedString(incomingCableVisibleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

