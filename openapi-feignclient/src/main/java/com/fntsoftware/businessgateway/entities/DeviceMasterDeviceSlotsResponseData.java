/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.DeviceMasterDevicemoduleType;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceMasterDeviceSlotsResponseData
 */
@JsonPropertyOrder({
  DeviceMasterDeviceSlotsResponseData.JSON_PROPERTY_SLOT_NAME,
  DeviceMasterDeviceSlotsResponseData.JSON_PROPERTY_WIDTH,
  DeviceMasterDeviceSlotsResponseData.JSON_PROPERTY_SLOT_NO,
  DeviceMasterDeviceSlotsResponseData.JSON_PROPERTY_MODULES,
  DeviceMasterDeviceSlotsResponseData.JSON_PROPERTY_HEIGHT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class DeviceMasterDeviceSlotsResponseData {
  public static final String JSON_PROPERTY_SLOT_NAME = "slotName";
  private String slotName;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private BigDecimal width;

  public static final String JSON_PROPERTY_SLOT_NO = "slotNo";
  private BigDecimal slotNo;

  public static final String JSON_PROPERTY_MODULES = "modules";
  private List<DeviceMasterDevicemoduleType> modules;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private BigDecimal height;

  public DeviceMasterDeviceSlotsResponseData() {
  }

  public DeviceMasterDeviceSlotsResponseData slotName(String slotName) {
    
    this.slotName = slotName;
    return this;
  }

   /**
   * Get slotName
   * @return slotName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLOT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlotName() {
    return slotName;
  }


  @JsonProperty(JSON_PROPERTY_SLOT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlotName(String slotName) {
    this.slotName = slotName;
  }


  public DeviceMasterDeviceSlotsResponseData width(BigDecimal width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(BigDecimal width) {
    this.width = width;
  }


  public DeviceMasterDeviceSlotsResponseData slotNo(BigDecimal slotNo) {
    
    this.slotNo = slotNo;
    return this;
  }

   /**
   * Get slotNo
   * @return slotNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLOT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSlotNo() {
    return slotNo;
  }


  @JsonProperty(JSON_PROPERTY_SLOT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlotNo(BigDecimal slotNo) {
    this.slotNo = slotNo;
  }


  public DeviceMasterDeviceSlotsResponseData modules(List<DeviceMasterDevicemoduleType> modules) {
    
    this.modules = modules;
    return this;
  }

  public DeviceMasterDeviceSlotsResponseData addModulesItem(DeviceMasterDevicemoduleType modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<>();
    }
    this.modules.add(modulesItem);
    return this;
  }

   /**
   * Get modules
   * @return modules
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DeviceMasterDevicemoduleType> getModules() {
    return modules;
  }


  @JsonProperty(JSON_PROPERTY_MODULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModules(List<DeviceMasterDevicemoduleType> modules) {
    this.modules = modules;
  }


  public DeviceMasterDeviceSlotsResponseData height(BigDecimal height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMasterDeviceSlotsResponseData deviceMasterDeviceSlotsResponseData = (DeviceMasterDeviceSlotsResponseData) o;
    return Objects.equals(this.slotName, deviceMasterDeviceSlotsResponseData.slotName) &&
        Objects.equals(this.width, deviceMasterDeviceSlotsResponseData.width) &&
        Objects.equals(this.slotNo, deviceMasterDeviceSlotsResponseData.slotNo) &&
        Objects.equals(this.modules, deviceMasterDeviceSlotsResponseData.modules) &&
        Objects.equals(this.height, deviceMasterDeviceSlotsResponseData.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(slotName, width, slotNo, modules, height);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMasterDeviceSlotsResponseData {\n");
    sb.append("    slotName: ").append(toIndentedString(slotName)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    slotNo: ").append(toIndentedString(slotNo)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

