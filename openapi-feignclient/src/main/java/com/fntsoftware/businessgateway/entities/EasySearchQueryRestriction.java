/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsBoolean;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EasySearchQueryRestriction
 */
@JsonPropertyOrder({
  EasySearchQueryRestriction.JSON_PROPERTY_WITHOUT_WORDS,
  EasySearchQueryRestriction.JSON_PROPERTY_CLASSES,
  EasySearchQueryRestriction.JSON_PROPERTY_LAST_MODIFIED_BY,
  EasySearchQueryRestriction.JSON_PROPERTY_CI_CLASS,
  EasySearchQueryRestriction.JSON_PROPERTY_AT_LEAST_ONE_OF_WORDS,
  EasySearchQueryRestriction.JSON_PROPERTY_EXACT_WORDS,
  EasySearchQueryRestriction.JSON_PROPERTY_ALL_WORDS,
  EasySearchQueryRestriction.JSON_PROPERTY_ATTACHMENT,
  EasySearchQueryRestriction.JSON_PROPERTY_CREATED_BY,
  EasySearchQueryRestriction.JSON_PROPERTY_MAX_RESULTS,
  EasySearchQueryRestriction.JSON_PROPERTY_CATALOG_CLASS,
  EasySearchQueryRestriction.JSON_PROPERTY_EXACT_PHRASE,
  EasySearchQueryRestriction.JSON_PROPERTY_CATEGORIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class EasySearchQueryRestriction {
  public static final String JSON_PROPERTY_WITHOUT_WORDS = "withoutWords";
  private RestrictionsString withoutWords;

  public static final String JSON_PROPERTY_CLASSES = "classes";
  private RestrictionsString classes;

  public static final String JSON_PROPERTY_LAST_MODIFIED_BY = "lastModifiedBy";
  private RestrictionsString lastModifiedBy;

  public static final String JSON_PROPERTY_CI_CLASS = "ciClass";
  private RestrictionsBoolean ciClass;

  public static final String JSON_PROPERTY_AT_LEAST_ONE_OF_WORDS = "atLeastOneOfWords";
  private RestrictionsString atLeastOneOfWords;

  public static final String JSON_PROPERTY_EXACT_WORDS = "exactWords";
  private RestrictionsString exactWords;

  public static final String JSON_PROPERTY_ALL_WORDS = "allWords";
  private RestrictionsString allWords;

  public static final String JSON_PROPERTY_ATTACHMENT = "attachment";
  private RestrictionsBoolean attachment;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private RestrictionsString createdBy;

  public static final String JSON_PROPERTY_MAX_RESULTS = "maxResults";
  private RestrictionsNumeric maxResults;

  public static final String JSON_PROPERTY_CATALOG_CLASS = "catalogClass";
  private RestrictionsBoolean catalogClass;

  public static final String JSON_PROPERTY_EXACT_PHRASE = "exactPhrase";
  private RestrictionsString exactPhrase;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private RestrictionsString categories;

  public EasySearchQueryRestriction() {
  }

  public EasySearchQueryRestriction withoutWords(RestrictionsString withoutWords) {
    
    this.withoutWords = withoutWords;
    return this;
  }

   /**
   * Get withoutWords
   * @return withoutWords
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WITHOUT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWithoutWords() {
    return withoutWords;
  }


  @JsonProperty(JSON_PROPERTY_WITHOUT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWithoutWords(RestrictionsString withoutWords) {
    this.withoutWords = withoutWords;
  }


  public EasySearchQueryRestriction classes(RestrictionsString classes) {
    
    this.classes = classes;
    return this;
  }

   /**
   * Get classes
   * @return classes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLASSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getClasses() {
    return classes;
  }


  @JsonProperty(JSON_PROPERTY_CLASSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClasses(RestrictionsString classes) {
    this.classes = classes;
  }


  public EasySearchQueryRestriction lastModifiedBy(RestrictionsString lastModifiedBy) {
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getLastModifiedBy() {
    return lastModifiedBy;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastModifiedBy(RestrictionsString lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public EasySearchQueryRestriction ciClass(RestrictionsBoolean ciClass) {
    
    this.ciClass = ciClass;
    return this;
  }

   /**
   * Get ciClass
   * @return ciClass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CI_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getCiClass() {
    return ciClass;
  }


  @JsonProperty(JSON_PROPERTY_CI_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiClass(RestrictionsBoolean ciClass) {
    this.ciClass = ciClass;
  }


  public EasySearchQueryRestriction atLeastOneOfWords(RestrictionsString atLeastOneOfWords) {
    
    this.atLeastOneOfWords = atLeastOneOfWords;
    return this;
  }

   /**
   * Get atLeastOneOfWords
   * @return atLeastOneOfWords
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_LEAST_ONE_OF_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAtLeastOneOfWords() {
    return atLeastOneOfWords;
  }


  @JsonProperty(JSON_PROPERTY_AT_LEAST_ONE_OF_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtLeastOneOfWords(RestrictionsString atLeastOneOfWords) {
    this.atLeastOneOfWords = atLeastOneOfWords;
  }


  public EasySearchQueryRestriction exactWords(RestrictionsString exactWords) {
    
    this.exactWords = exactWords;
    return this;
  }

   /**
   * Get exactWords
   * @return exactWords
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXACT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getExactWords() {
    return exactWords;
  }


  @JsonProperty(JSON_PROPERTY_EXACT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExactWords(RestrictionsString exactWords) {
    this.exactWords = exactWords;
  }


  public EasySearchQueryRestriction allWords(RestrictionsString allWords) {
    
    this.allWords = allWords;
    return this;
  }

   /**
   * Get allWords
   * @return allWords
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALL_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAllWords() {
    return allWords;
  }


  @JsonProperty(JSON_PROPERTY_ALL_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllWords(RestrictionsString allWords) {
    this.allWords = allWords;
  }


  public EasySearchQueryRestriction attachment(RestrictionsBoolean attachment) {
    
    this.attachment = attachment;
    return this;
  }

   /**
   * Get attachment
   * @return attachment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getAttachment() {
    return attachment;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachment(RestrictionsBoolean attachment) {
    this.attachment = attachment;
  }


  public EasySearchQueryRestriction createdBy(RestrictionsString createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(RestrictionsString createdBy) {
    this.createdBy = createdBy;
  }


  public EasySearchQueryRestriction maxResults(RestrictionsNumeric maxResults) {
    
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getMaxResults() {
    return maxResults;
  }


  @JsonProperty(JSON_PROPERTY_MAX_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxResults(RestrictionsNumeric maxResults) {
    this.maxResults = maxResults;
  }


  public EasySearchQueryRestriction catalogClass(RestrictionsBoolean catalogClass) {
    
    this.catalogClass = catalogClass;
    return this;
  }

   /**
   * Get catalogClass
   * @return catalogClass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATALOG_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getCatalogClass() {
    return catalogClass;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogClass(RestrictionsBoolean catalogClass) {
    this.catalogClass = catalogClass;
  }


  public EasySearchQueryRestriction exactPhrase(RestrictionsString exactPhrase) {
    
    this.exactPhrase = exactPhrase;
    return this;
  }

   /**
   * Get exactPhrase
   * @return exactPhrase
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXACT_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getExactPhrase() {
    return exactPhrase;
  }


  @JsonProperty(JSON_PROPERTY_EXACT_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExactPhrase(RestrictionsString exactPhrase) {
    this.exactPhrase = exactPhrase;
  }


  public EasySearchQueryRestriction categories(RestrictionsString categories) {
    
    this.categories = categories;
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(RestrictionsString categories) {
    this.categories = categories;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EasySearchQueryRestriction easySearchQueryRestriction = (EasySearchQueryRestriction) o;
    return Objects.equals(this.withoutWords, easySearchQueryRestriction.withoutWords) &&
        Objects.equals(this.classes, easySearchQueryRestriction.classes) &&
        Objects.equals(this.lastModifiedBy, easySearchQueryRestriction.lastModifiedBy) &&
        Objects.equals(this.ciClass, easySearchQueryRestriction.ciClass) &&
        Objects.equals(this.atLeastOneOfWords, easySearchQueryRestriction.atLeastOneOfWords) &&
        Objects.equals(this.exactWords, easySearchQueryRestriction.exactWords) &&
        Objects.equals(this.allWords, easySearchQueryRestriction.allWords) &&
        Objects.equals(this.attachment, easySearchQueryRestriction.attachment) &&
        Objects.equals(this.createdBy, easySearchQueryRestriction.createdBy) &&
        Objects.equals(this.maxResults, easySearchQueryRestriction.maxResults) &&
        Objects.equals(this.catalogClass, easySearchQueryRestriction.catalogClass) &&
        Objects.equals(this.exactPhrase, easySearchQueryRestriction.exactPhrase) &&
        Objects.equals(this.categories, easySearchQueryRestriction.categories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(withoutWords, classes, lastModifiedBy, ciClass, atLeastOneOfWords, exactWords, allWords, attachment, createdBy, maxResults, catalogClass, exactPhrase, categories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EasySearchQueryRestriction {\n");
    sb.append("    withoutWords: ").append(toIndentedString(withoutWords)).append("\n");
    sb.append("    classes: ").append(toIndentedString(classes)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    ciClass: ").append(toIndentedString(ciClass)).append("\n");
    sb.append("    atLeastOneOfWords: ").append(toIndentedString(atLeastOneOfWords)).append("\n");
    sb.append("    exactWords: ").append(toIndentedString(exactWords)).append("\n");
    sb.append("    allWords: ").append(toIndentedString(allWords)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    catalogClass: ").append(toIndentedString(catalogClass)).append("\n");
    sb.append("    exactPhrase: ").append(toIndentedString(exactPhrase)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

