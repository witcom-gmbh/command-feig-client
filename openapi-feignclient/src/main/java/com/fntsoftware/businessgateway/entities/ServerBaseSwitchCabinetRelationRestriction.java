/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsBoolean;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServerBaseSwitchCabinetRelationRestriction
 */
@JsonPropertyOrder({
  ServerBaseSwitchCabinetRelationRestriction.JSON_PROPERTY_OFFSET,
  ServerBaseSwitchCabinetRelationRestriction.JSON_PROPERTY_OPPOSITE_SIDE_USED,
  ServerBaseSwitchCabinetRelationRestriction.JSON_PROPERTY_ROTATE180,
  ServerBaseSwitchCabinetRelationRestriction.JSON_PROPERTY_CABINET_SIDE,
  ServerBaseSwitchCabinetRelationRestriction.JSON_PROPERTY_HEIGHT_UNIT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class ServerBaseSwitchCabinetRelationRestriction {
  public static final String JSON_PROPERTY_OFFSET = "offset";
  private RestrictionsNumeric offset;

  public static final String JSON_PROPERTY_OPPOSITE_SIDE_USED = "oppositeSideUsed";
  private RestrictionsBoolean oppositeSideUsed;

  public static final String JSON_PROPERTY_ROTATE180 = "rotate180";
  private RestrictionsBoolean rotate180;

  public static final String JSON_PROPERTY_CABINET_SIDE = "cabinetSide";
  private RestrictionsString cabinetSide;

  public static final String JSON_PROPERTY_HEIGHT_UNIT = "heightUnit";
  private RestrictionsNumeric heightUnit;

  public ServerBaseSwitchCabinetRelationRestriction() {
  }

  public ServerBaseSwitchCabinetRelationRestriction offset(RestrictionsNumeric offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(RestrictionsNumeric offset) {
    this.offset = offset;
  }


  public ServerBaseSwitchCabinetRelationRestriction oppositeSideUsed(RestrictionsBoolean oppositeSideUsed) {
    
    this.oppositeSideUsed = oppositeSideUsed;
    return this;
  }

   /**
   * Get oppositeSideUsed
   * @return oppositeSideUsed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPPOSITE_SIDE_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getOppositeSideUsed() {
    return oppositeSideUsed;
  }


  @JsonProperty(JSON_PROPERTY_OPPOSITE_SIDE_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOppositeSideUsed(RestrictionsBoolean oppositeSideUsed) {
    this.oppositeSideUsed = oppositeSideUsed;
  }


  public ServerBaseSwitchCabinetRelationRestriction rotate180(RestrictionsBoolean rotate180) {
    
    this.rotate180 = rotate180;
    return this;
  }

   /**
   * Get rotate180
   * @return rotate180
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROTATE180)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getRotate180() {
    return rotate180;
  }


  @JsonProperty(JSON_PROPERTY_ROTATE180)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRotate180(RestrictionsBoolean rotate180) {
    this.rotate180 = rotate180;
  }


  public ServerBaseSwitchCabinetRelationRestriction cabinetSide(RestrictionsString cabinetSide) {
    
    this.cabinetSide = cabinetSide;
    return this;
  }

   /**
   * Get cabinetSide
   * @return cabinetSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABINET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getCabinetSide() {
    return cabinetSide;
  }


  @JsonProperty(JSON_PROPERTY_CABINET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCabinetSide(RestrictionsString cabinetSide) {
    this.cabinetSide = cabinetSide;
  }


  public ServerBaseSwitchCabinetRelationRestriction heightUnit(RestrictionsNumeric heightUnit) {
    
    this.heightUnit = heightUnit;
    return this;
  }

   /**
   * Get heightUnit
   * @return heightUnit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getHeightUnit() {
    return heightUnit;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeightUnit(RestrictionsNumeric heightUnit) {
    this.heightUnit = heightUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerBaseSwitchCabinetRelationRestriction serverBaseSwitchCabinetRelationRestriction = (ServerBaseSwitchCabinetRelationRestriction) o;
    return Objects.equals(this.offset, serverBaseSwitchCabinetRelationRestriction.offset) &&
        Objects.equals(this.oppositeSideUsed, serverBaseSwitchCabinetRelationRestriction.oppositeSideUsed) &&
        Objects.equals(this.rotate180, serverBaseSwitchCabinetRelationRestriction.rotate180) &&
        Objects.equals(this.cabinetSide, serverBaseSwitchCabinetRelationRestriction.cabinetSide) &&
        Objects.equals(this.heightUnit, serverBaseSwitchCabinetRelationRestriction.heightUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offset, oppositeSideUsed, rotate180, cabinetSide, heightUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerBaseSwitchCabinetRelationRestriction {\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    oppositeSideUsed: ").append(toIndentedString(oppositeSideUsed)).append("\n");
    sb.append("    rotate180: ").append(toIndentedString(rotate180)).append("\n");
    sb.append("    cabinetSide: ").append(toIndentedString(cabinetSide)).append("\n");
    sb.append("    heightUnit: ").append(toIndentedString(heightUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

