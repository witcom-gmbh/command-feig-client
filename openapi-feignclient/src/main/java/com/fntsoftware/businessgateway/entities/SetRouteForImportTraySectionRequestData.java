/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SetRouteForImportTraySectionRequestData
 */
@JsonPropertyOrder({
  SetRouteForImportTraySectionRequestData.JSON_PROPERTY_COORDS_STRING,
  SetRouteForImportTraySectionRequestData.JSON_PROPERTY_CONTEXT_ID,
  SetRouteForImportTraySectionRequestData.JSON_PROPERTY_COORD_SYSTEM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class SetRouteForImportTraySectionRequestData {
  public static final String JSON_PROPERTY_COORDS_STRING = "coordsString";
  private String coordsString;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_COORD_SYSTEM = "coordSystem";
  private String coordSystem;

  public SetRouteForImportTraySectionRequestData() {
  }

  public SetRouteForImportTraySectionRequestData coordsString(String coordsString) {
    
    this.coordsString = coordsString;
    return this;
  }

   /**
   * Get coordsString
   * @return coordsString
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORDS_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordsString() {
    return coordsString;
  }


  @JsonProperty(JSON_PROPERTY_COORDS_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordsString(String coordsString) {
    this.coordsString = coordsString;
  }


  public SetRouteForImportTraySectionRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public SetRouteForImportTraySectionRequestData coordSystem(String coordSystem) {
    
    this.coordSystem = coordSystem;
    return this;
  }

   /**
   * Get coordSystem
   * @return coordSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordSystem() {
    return coordSystem;
  }


  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordSystem(String coordSystem) {
    this.coordSystem = coordSystem;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetRouteForImportTraySectionRequestData setRouteForImportTraySectionRequestData = (SetRouteForImportTraySectionRequestData) o;
    return Objects.equals(this.coordsString, setRouteForImportTraySectionRequestData.coordsString) &&
        Objects.equals(this.contextId, setRouteForImportTraySectionRequestData.contextId) &&
        Objects.equals(this.coordSystem, setRouteForImportTraySectionRequestData.coordSystem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordsString, contextId, coordSystem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetRouteForImportTraySectionRequestData {\n");
    sb.append("    coordsString: ").append(toIndentedString(coordsString)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    coordSystem: ").append(toIndentedString(coordSystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

