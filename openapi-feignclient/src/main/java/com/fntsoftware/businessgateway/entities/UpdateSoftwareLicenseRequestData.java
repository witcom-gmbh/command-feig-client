/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareLicenseUpdateLinkPersonRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSoftwareLicenseRequestData
 */
@JsonPropertyOrder({
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DEFAULT_USAGE,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_LICENCE_KEY,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_LICENCE_AMOUNT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_LICENCE_TYPE,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_SUPPLIER,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_LICENCE_UNLIMITED,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_VALID_UNTIL,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_VALID_FROM,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSoftwareLicenseRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class UpdateSoftwareLicenseRequestData {
  public static final String JSON_PROPERTY_DEFAULT_USAGE = "defaultUsage";
  private BigDecimal defaultUsage;

  public static final String JSON_PROPERTY_LICENCE_KEY = "licenceKey";
  private String licenceKey;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_LICENCE_AMOUNT = "licenceAmount";
  private BigDecimal licenceAmount;

  public static final String JSON_PROPERTY_LICENCE_TYPE = "licenceType";
  private String licenceType;

  public static final String JSON_PROPERTY_SUPPLIER = "supplier";
  private String supplier;

  public static final String JSON_PROPERTY_LICENCE_UNLIMITED = "licenceUnlimited";
  private Boolean licenceUnlimited;

  public static final String JSON_PROPERTY_VALID_UNTIL = "validUntil";
  private DateTime validUntil;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VALID_FROM = "validFrom";
  private DateTime validFrom;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSoftwareLicenseCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSoftwareLicenseCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSoftwareLicenseCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSoftwareLicenseCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSoftwareLicenseCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSoftwareLicenseDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSoftwareLicenseDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSoftwareLicenseDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSoftwareLicenseDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSoftwareLicenseUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSoftwareLicenseUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSoftwareLicenseRequestData() {
  }

  public UpdateSoftwareLicenseRequestData defaultUsage(BigDecimal defaultUsage) {
    
    this.defaultUsage = defaultUsage;
    return this;
  }

   /**
   * Get defaultUsage
   * @return defaultUsage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDefaultUsage() {
    return defaultUsage;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultUsage(BigDecimal defaultUsage) {
    this.defaultUsage = defaultUsage;
  }


  public UpdateSoftwareLicenseRequestData licenceKey(String licenceKey) {
    
    this.licenceKey = licenceKey;
    return this;
  }

   /**
   * Get licenceKey
   * @return licenceKey
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LICENCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLicenceKey() {
    return licenceKey;
  }


  @JsonProperty(JSON_PROPERTY_LICENCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLicenceKey(String licenceKey) {
    this.licenceKey = licenceKey;
  }


  public UpdateSoftwareLicenseRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateSoftwareLicenseRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateSoftwareLicenseRequestData licenceAmount(BigDecimal licenceAmount) {
    
    this.licenceAmount = licenceAmount;
    return this;
  }

   /**
   * Get licenceAmount
   * @return licenceAmount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LICENCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLicenceAmount() {
    return licenceAmount;
  }


  @JsonProperty(JSON_PROPERTY_LICENCE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLicenceAmount(BigDecimal licenceAmount) {
    this.licenceAmount = licenceAmount;
  }


  public UpdateSoftwareLicenseRequestData licenceType(String licenceType) {
    
    this.licenceType = licenceType;
    return this;
  }

   /**
   * Get licenceType
   * @return licenceType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LICENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLicenceType() {
    return licenceType;
  }


  @JsonProperty(JSON_PROPERTY_LICENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLicenceType(String licenceType) {
    this.licenceType = licenceType;
  }


  public UpdateSoftwareLicenseRequestData supplier(String supplier) {
    
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupplier() {
    return supplier;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplier(String supplier) {
    this.supplier = supplier;
  }


  public UpdateSoftwareLicenseRequestData licenceUnlimited(Boolean licenceUnlimited) {
    
    this.licenceUnlimited = licenceUnlimited;
    return this;
  }

   /**
   * Get licenceUnlimited
   * @return licenceUnlimited
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LICENCE_UNLIMITED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLicenceUnlimited() {
    return licenceUnlimited;
  }


  @JsonProperty(JSON_PROPERTY_LICENCE_UNLIMITED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLicenceUnlimited(Boolean licenceUnlimited) {
    this.licenceUnlimited = licenceUnlimited;
  }


  public UpdateSoftwareLicenseRequestData validUntil(DateTime validUntil) {
    
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Get validUntil
   * @return validUntil
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getValidUntil() {
    return validUntil;
  }


  @JsonProperty(JSON_PROPERTY_VALID_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidUntil(DateTime validUntil) {
    this.validUntil = validUntil;
  }


  public UpdateSoftwareLicenseRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSoftwareLicenseRequestData validFrom(DateTime validFrom) {
    
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Get validFrom
   * @return validFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getValidFrom() {
    return validFrom;
  }


  @JsonProperty(JSON_PROPERTY_VALID_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidFrom(DateTime validFrom) {
    this.validFrom = validFrom;
  }


  public UpdateSoftwareLicenseRequestData createLinkContract(List<UpdateSoftwareLicenseCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkContractItem(UpdateSoftwareLicenseCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSoftwareLicenseCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSoftwareLicenseRequestData createLinkFrameContract(List<UpdateSoftwareLicenseCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkFrameContractItem(UpdateSoftwareLicenseCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSoftwareLicenseCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSoftwareLicenseRequestData createLinkMaintenanceContract(List<UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkMaintenanceContractItem(UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateSoftwareLicenseCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateSoftwareLicenseRequestData createLinkOrganization(List<UpdateSoftwareLicenseCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkOrganizationItem(UpdateSoftwareLicenseCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSoftwareLicenseCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSoftwareLicenseRequestData createLinkPerson(List<UpdateSoftwareLicenseCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkPersonItem(UpdateSoftwareLicenseCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSoftwareLicenseCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSoftwareLicenseRequestData createLinkPersonGroup(List<UpdateSoftwareLicenseCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addCreateLinkPersonGroupItem(UpdateSoftwareLicenseCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSoftwareLicenseCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkContract(List<UpdateSoftwareLicenseDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkContractItem(UpdateSoftwareLicenseDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSoftwareLicenseDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkFrameContract(List<UpdateSoftwareLicenseDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkFrameContractItem(UpdateSoftwareLicenseDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSoftwareLicenseDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkMaintenanceContract(List<UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkMaintenanceContractItem(UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateSoftwareLicenseDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkOrganization(List<UpdateSoftwareLicenseDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkOrganizationItem(UpdateSoftwareLicenseDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSoftwareLicenseDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkPerson(List<UpdateSoftwareLicenseDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkPersonItem(UpdateSoftwareLicenseDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSoftwareLicenseDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSoftwareLicenseRequestData deleteLinkPersonGroup(List<UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addDeleteLinkPersonGroupItem(UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSoftwareLicenseDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSoftwareLicenseRequestData updateLinkOrganization(List<UpdateSoftwareLicenseUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addUpdateLinkOrganizationItem(UpdateSoftwareLicenseUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSoftwareLicenseUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSoftwareLicenseRequestData updateLinkPerson(List<UpdateSoftwareLicenseUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addUpdateLinkPersonItem(UpdateSoftwareLicenseUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSoftwareLicenseUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSoftwareLicenseRequestData updateLinkPersonGroup(List<UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareLicenseRequestData addUpdateLinkPersonGroupItem(UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSoftwareLicenseUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSoftwareLicenseRequestData updateSoftwareLicenseRequestData = (UpdateSoftwareLicenseRequestData) o;
    return Objects.equals(this.defaultUsage, updateSoftwareLicenseRequestData.defaultUsage) &&
        Objects.equals(this.licenceKey, updateSoftwareLicenseRequestData.licenceKey) &&
        Objects.equals(this.sourceId, updateSoftwareLicenseRequestData.sourceId) &&
        Objects.equals(this.sourceSystem, updateSoftwareLicenseRequestData.sourceSystem) &&
        Objects.equals(this.licenceAmount, updateSoftwareLicenseRequestData.licenceAmount) &&
        Objects.equals(this.licenceType, updateSoftwareLicenseRequestData.licenceType) &&
        Objects.equals(this.supplier, updateSoftwareLicenseRequestData.supplier) &&
        Objects.equals(this.licenceUnlimited, updateSoftwareLicenseRequestData.licenceUnlimited) &&
        Objects.equals(this.validUntil, updateSoftwareLicenseRequestData.validUntil) &&
        Objects.equals(this.contextId, updateSoftwareLicenseRequestData.contextId) &&
        Objects.equals(this.validFrom, updateSoftwareLicenseRequestData.validFrom) &&
        Objects.equals(this.createLinkContract, updateSoftwareLicenseRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateSoftwareLicenseRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateSoftwareLicenseRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateSoftwareLicenseRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSoftwareLicenseRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSoftwareLicenseRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateSoftwareLicenseRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSoftwareLicenseRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateSoftwareLicenseRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSoftwareLicenseRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSoftwareLicenseRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSoftwareLicenseRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.updateLinkOrganization, updateSoftwareLicenseRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSoftwareLicenseRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSoftwareLicenseRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultUsage, licenceKey, sourceId, sourceSystem, licenceAmount, licenceType, supplier, licenceUnlimited, validUntil, contextId, validFrom, createLinkContract, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSoftwareLicenseRequestData {\n");
    sb.append("    defaultUsage: ").append(toIndentedString(defaultUsage)).append("\n");
    sb.append("    licenceKey: ").append(toIndentedString(licenceKey)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    licenceAmount: ").append(toIndentedString(licenceAmount)).append("\n");
    sb.append("    licenceType: ").append(toIndentedString(licenceType)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    licenceUnlimited: ").append(toIndentedString(licenceUnlimited)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

