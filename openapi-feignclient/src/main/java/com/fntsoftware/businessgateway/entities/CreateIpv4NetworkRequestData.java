/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkDomainRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkGatewayRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkIpv6NetworkRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkNetMandatorRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkNetrangeNameRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkVirtualNasServerRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkVirtualSwitchRequestData;
import com.fntsoftware.businessgateway.entities.CreateIpv4NetworkCreateLinkZoneRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateIpv4NetworkRequestData
 */
@JsonPropertyOrder({
  CreateIpv4NetworkRequestData.JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_SOURCE_ID,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_LOOKUP,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_USE_BROADCAST_IP,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_C_ADMIN_PERSON_ID,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SERVER,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATION_MODE,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SCOPE_TYPE,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CONTEXT_ID,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_REMARK,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_PREFIX_LENGTH,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_OWNER_SYSTEM,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_LEASE_TIME,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_FUNCTION,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_USE_NET_IP,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_NAME,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_PRIMARY_SCOPE_ELID,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SCOPE_NAME,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_C_ORG_NR,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_ID,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_SUBNETMASK,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_DHCP,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_DEVICE_ALL,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_DOMAIN,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_GATEWAY,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_NET_MANDATOR,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_NETRANGE_NAME,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH,
  CreateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_ZONE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class CreateIpv4NetworkRequestData {
  public static final String JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ = "cRirDocumentationReq";
  private String cRirDocumentationReq;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_LOOKUP = "lookup";
  private Boolean lookup;

  public static final String JSON_PROPERTY_USE_BROADCAST_IP = "useBroadcastIp";
  private Boolean useBroadcastIp;

  public static final String JSON_PROPERTY_C_ADMIN_PERSON_ID = "cAdminPersonId";
  private String cAdminPersonId;

  public static final String JSON_PROPERTY_DHCP_SERVER = "dhcpServer";
  private String dhcpServer;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_CREATION_MODE = "creationMode";
  private String creationMode;

  public static final String JSON_PROPERTY_DHCP_SCOPE_TYPE = "dhcpScopeType";
  private String dhcpScopeType;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_PREFIX_LENGTH = "prefixLength";
  private BigDecimal prefixLength;

  public static final String JSON_PROPERTY_OWNER_SYSTEM = "ownerSystem";
  private String ownerSystem;

  public static final String JSON_PROPERTY_DHCP_LEASE_TIME = "dhcpLeaseTime";
  private String dhcpLeaseTime;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_USE_NET_IP = "useNetIp";
  private Boolean useNetIp;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PRIMARY_SCOPE_ELID = "primaryScopeElid";
  private String primaryScopeElid;

  public static final String JSON_PROPERTY_DHCP_SCOPE_NAME = "dhcpScopeName";
  private String dhcpScopeName;

  public static final String JSON_PROPERTY_C_ORG_NR = "cOrgNr";
  private String cOrgNr;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_SUBNETMASK = "subnetmask";
  private String subnetmask;

  public static final String JSON_PROPERTY_DHCP = "dhcp";
  private Boolean dhcp;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<CreateIpv4NetworkCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC = "createLinkCustomIpaccessSvc";
  private List<CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT = "createLinkCustomL2CpeSegment";
  private CreateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment;

  public static final String JSON_PROPERTY_CREATE_LINK_DEVICE_ALL = "createLinkDeviceAll";
  private List<CreateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_DOMAIN = "createLinkDomain";
  private CreateIpv4NetworkCreateLinkDomainRequestData createLinkDomain;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<CreateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_GATEWAY = "createLinkGateway";
  private CreateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE = "createLinkIpv4Netrange";
  private List<CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK = "createLinkIpv6Network";
  private List<CreateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<CreateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_NET_MANDATOR = "createLinkNetMandator";
  private CreateIpv4NetworkCreateLinkNetMandatorRequestData createLinkNetMandator;

  public static final String JSON_PROPERTY_CREATE_LINK_NETRANGE_NAME = "createLinkNetrangeName";
  private CreateIpv4NetworkCreateLinkNetrangeNameRequestData createLinkNetrangeName;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<CreateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<CreateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<CreateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER = "createLinkVirtualNasServer";
  private List<CreateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH = "createLinkVirtualSwitch";
  private List<CreateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch;

  public static final String JSON_PROPERTY_CREATE_LINK_ZONE = "createLinkZone";
  private List<CreateIpv4NetworkCreateLinkZoneRequestData> createLinkZone;

  public CreateIpv4NetworkRequestData() {
  }

  public CreateIpv4NetworkRequestData cRirDocumentationReq(String cRirDocumentationReq) {
    
    this.cRirDocumentationReq = cRirDocumentationReq;
    return this;
  }

   /**
   * Get cRirDocumentationReq
   * @return cRirDocumentationReq
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcRirDocumentationReq() {
    return cRirDocumentationReq;
  }


  @JsonProperty(JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcRirDocumentationReq(String cRirDocumentationReq) {
    this.cRirDocumentationReq = cRirDocumentationReq;
  }


  public CreateIpv4NetworkRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public CreateIpv4NetworkRequestData lookup(Boolean lookup) {
    
    this.lookup = lookup;
    return this;
  }

   /**
   * Get lookup
   * @return lookup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOKUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLookup() {
    return lookup;
  }


  @JsonProperty(JSON_PROPERTY_LOOKUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLookup(Boolean lookup) {
    this.lookup = lookup;
  }


  public CreateIpv4NetworkRequestData useBroadcastIp(Boolean useBroadcastIp) {
    
    this.useBroadcastIp = useBroadcastIp;
    return this;
  }

   /**
   * Get useBroadcastIp
   * @return useBroadcastIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_BROADCAST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseBroadcastIp() {
    return useBroadcastIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_BROADCAST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseBroadcastIp(Boolean useBroadcastIp) {
    this.useBroadcastIp = useBroadcastIp;
  }


  public CreateIpv4NetworkRequestData cAdminPersonId(String cAdminPersonId) {
    
    this.cAdminPersonId = cAdminPersonId;
    return this;
  }

   /**
   * Get cAdminPersonId
   * @return cAdminPersonId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_ADMIN_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcAdminPersonId() {
    return cAdminPersonId;
  }


  @JsonProperty(JSON_PROPERTY_C_ADMIN_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcAdminPersonId(String cAdminPersonId) {
    this.cAdminPersonId = cAdminPersonId;
  }


  public CreateIpv4NetworkRequestData dhcpServer(String dhcpServer) {
    
    this.dhcpServer = dhcpServer;
    return this;
  }

   /**
   * Get dhcpServer
   * @return dhcpServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpServer() {
    return dhcpServer;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpServer(String dhcpServer) {
    this.dhcpServer = dhcpServer;
  }


  public CreateIpv4NetworkRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public CreateIpv4NetworkRequestData creationMode(String creationMode) {
    
    this.creationMode = creationMode;
    return this;
  }

   /**
   * Get creationMode
   * @return creationMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreationMode() {
    return creationMode;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationMode(String creationMode) {
    this.creationMode = creationMode;
  }


  public CreateIpv4NetworkRequestData dhcpScopeType(String dhcpScopeType) {
    
    this.dhcpScopeType = dhcpScopeType;
    return this;
  }

   /**
   * Get dhcpScopeType
   * @return dhcpScopeType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpScopeType() {
    return dhcpScopeType;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpScopeType(String dhcpScopeType) {
    this.dhcpScopeType = dhcpScopeType;
  }


  public CreateIpv4NetworkRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public CreateIpv4NetworkRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public CreateIpv4NetworkRequestData prefixLength(BigDecimal prefixLength) {
    
    this.prefixLength = prefixLength;
    return this;
  }

   /**
   * Get prefixLength
   * @return prefixLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrefixLength() {
    return prefixLength;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixLength(BigDecimal prefixLength) {
    this.prefixLength = prefixLength;
  }


  public CreateIpv4NetworkRequestData ownerSystem(String ownerSystem) {
    
    this.ownerSystem = ownerSystem;
    return this;
  }

   /**
   * Get ownerSystem
   * @return ownerSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerSystem() {
    return ownerSystem;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerSystem(String ownerSystem) {
    this.ownerSystem = ownerSystem;
  }


  public CreateIpv4NetworkRequestData dhcpLeaseTime(String dhcpLeaseTime) {
    
    this.dhcpLeaseTime = dhcpLeaseTime;
    return this;
  }

   /**
   * Get dhcpLeaseTime
   * @return dhcpLeaseTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_LEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpLeaseTime() {
    return dhcpLeaseTime;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_LEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpLeaseTime(String dhcpLeaseTime) {
    this.dhcpLeaseTime = dhcpLeaseTime;
  }


  public CreateIpv4NetworkRequestData function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public CreateIpv4NetworkRequestData useNetIp(Boolean useNetIp) {
    
    this.useNetIp = useNetIp;
    return this;
  }

   /**
   * Get useNetIp
   * @return useNetIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_NET_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseNetIp() {
    return useNetIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_NET_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseNetIp(Boolean useNetIp) {
    this.useNetIp = useNetIp;
  }


  public CreateIpv4NetworkRequestData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateIpv4NetworkRequestData primaryScopeElid(String primaryScopeElid) {
    
    this.primaryScopeElid = primaryScopeElid;
    return this;
  }

   /**
   * Get primaryScopeElid
   * @return primaryScopeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMARY_SCOPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryScopeElid() {
    return primaryScopeElid;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_SCOPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryScopeElid(String primaryScopeElid) {
    this.primaryScopeElid = primaryScopeElid;
  }


  public CreateIpv4NetworkRequestData dhcpScopeName(String dhcpScopeName) {
    
    this.dhcpScopeName = dhcpScopeName;
    return this;
  }

   /**
   * Get dhcpScopeName
   * @return dhcpScopeName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpScopeName() {
    return dhcpScopeName;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpScopeName(String dhcpScopeName) {
    this.dhcpScopeName = dhcpScopeName;
  }


  public CreateIpv4NetworkRequestData cOrgNr(String cOrgNr) {
    
    this.cOrgNr = cOrgNr;
    return this;
  }

   /**
   * Get cOrgNr
   * @return cOrgNr
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_ORG_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcOrgNr() {
    return cOrgNr;
  }


  @JsonProperty(JSON_PROPERTY_C_ORG_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcOrgNr(String cOrgNr) {
    this.cOrgNr = cOrgNr;
  }


  public CreateIpv4NetworkRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CreateIpv4NetworkRequestData subnetmask(String subnetmask) {
    
    this.subnetmask = subnetmask;
    return this;
  }

   /**
   * Get subnetmask
   * @return subnetmask
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBNETMASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubnetmask() {
    return subnetmask;
  }


  @JsonProperty(JSON_PROPERTY_SUBNETMASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubnetmask(String subnetmask) {
    this.subnetmask = subnetmask;
  }


  public CreateIpv4NetworkRequestData dhcp(Boolean dhcp) {
    
    this.dhcp = dhcp;
    return this;
  }

   /**
   * Get dhcp
   * @return dhcp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDhcp() {
    return dhcp;
  }


  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcp(Boolean dhcp) {
    this.dhcp = dhcp;
  }


  public CreateIpv4NetworkRequestData createLinkContract(List<CreateIpv4NetworkCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkContractItem(CreateIpv4NetworkCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<CreateIpv4NetworkCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public CreateIpv4NetworkRequestData createLinkCustomIpaccessSvc(List<CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc) {
    
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkCustomIpaccessSvcItem(CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvcItem) {
    if (this.createLinkCustomIpaccessSvc == null) {
      this.createLinkCustomIpaccessSvc = new ArrayList<>();
    }
    this.createLinkCustomIpaccessSvc.add(createLinkCustomIpaccessSvcItem);
    return this;
  }

   /**
   * Get createLinkCustomIpaccessSvc
   * @return createLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> getCreateLinkCustomIpaccessSvc() {
    return createLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomIpaccessSvc(List<CreateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc) {
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
  }


  public CreateIpv4NetworkRequestData createLinkCustomL2CpeSegment(CreateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment) {
    
    this.createLinkCustomL2CpeSegment = createLinkCustomL2CpeSegment;
    return this;
  }

   /**
   * Get createLinkCustomL2CpeSegment
   * @return createLinkCustomL2CpeSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData getCreateLinkCustomL2CpeSegment() {
    return createLinkCustomL2CpeSegment;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomL2CpeSegment(CreateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment) {
    this.createLinkCustomL2CpeSegment = createLinkCustomL2CpeSegment;
  }


  public CreateIpv4NetworkRequestData createLinkDeviceAll(List<CreateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    
    this.createLinkDeviceAll = createLinkDeviceAll;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkDeviceAllItem(CreateIpv4NetworkCreateLinkDeviceAllRequestData createLinkDeviceAllItem) {
    if (this.createLinkDeviceAll == null) {
      this.createLinkDeviceAll = new ArrayList<>();
    }
    this.createLinkDeviceAll.add(createLinkDeviceAllItem);
    return this;
  }

   /**
   * Get createLinkDeviceAll
   * @return createLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkDeviceAllRequestData> getCreateLinkDeviceAll() {
    return createLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDeviceAll(List<CreateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    this.createLinkDeviceAll = createLinkDeviceAll;
  }


  public CreateIpv4NetworkRequestData createLinkDomain(CreateIpv4NetworkCreateLinkDomainRequestData createLinkDomain) {
    
    this.createLinkDomain = createLinkDomain;
    return this;
  }

   /**
   * Get createLinkDomain
   * @return createLinkDomain
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateIpv4NetworkCreateLinkDomainRequestData getCreateLinkDomain() {
    return createLinkDomain;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkDomain(CreateIpv4NetworkCreateLinkDomainRequestData createLinkDomain) {
    this.createLinkDomain = createLinkDomain;
  }


  public CreateIpv4NetworkRequestData createLinkFrameContract(List<CreateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkFrameContractItem(CreateIpv4NetworkCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<CreateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public CreateIpv4NetworkRequestData createLinkGateway(CreateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway) {
    
    this.createLinkGateway = createLinkGateway;
    return this;
  }

   /**
   * Get createLinkGateway
   * @return createLinkGateway
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateIpv4NetworkCreateLinkGatewayRequestData getCreateLinkGateway() {
    return createLinkGateway;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkGateway(CreateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway) {
    this.createLinkGateway = createLinkGateway;
  }


  public CreateIpv4NetworkRequestData createLinkIpv4Netrange(List<CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange) {
    
    this.createLinkIpv4Netrange = createLinkIpv4Netrange;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkIpv4NetrangeItem(CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData createLinkIpv4NetrangeItem) {
    if (this.createLinkIpv4Netrange == null) {
      this.createLinkIpv4Netrange = new ArrayList<>();
    }
    this.createLinkIpv4Netrange.add(createLinkIpv4NetrangeItem);
    return this;
  }

   /**
   * Get createLinkIpv4Netrange
   * @return createLinkIpv4Netrange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData> getCreateLinkIpv4Netrange() {
    return createLinkIpv4Netrange;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv4Netrange(List<CreateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange) {
    this.createLinkIpv4Netrange = createLinkIpv4Netrange;
  }


  public CreateIpv4NetworkRequestData createLinkIpv6Network(List<CreateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network) {
    
    this.createLinkIpv6Network = createLinkIpv6Network;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkIpv6NetworkItem(CreateIpv4NetworkCreateLinkIpv6NetworkRequestData createLinkIpv6NetworkItem) {
    if (this.createLinkIpv6Network == null) {
      this.createLinkIpv6Network = new ArrayList<>();
    }
    this.createLinkIpv6Network.add(createLinkIpv6NetworkItem);
    return this;
  }

   /**
   * Get createLinkIpv6Network
   * @return createLinkIpv6Network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkIpv6NetworkRequestData> getCreateLinkIpv6Network() {
    return createLinkIpv6Network;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv6Network(List<CreateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network) {
    this.createLinkIpv6Network = createLinkIpv6Network;
  }


  public CreateIpv4NetworkRequestData createLinkMaintenanceContract(List<CreateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkMaintenanceContractItem(CreateIpv4NetworkCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<CreateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public CreateIpv4NetworkRequestData createLinkNetMandator(CreateIpv4NetworkCreateLinkNetMandatorRequestData createLinkNetMandator) {
    
    this.createLinkNetMandator = createLinkNetMandator;
    return this;
  }

   /**
   * Get createLinkNetMandator
   * @return createLinkNetMandator
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateIpv4NetworkCreateLinkNetMandatorRequestData getCreateLinkNetMandator() {
    return createLinkNetMandator;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkNetMandator(CreateIpv4NetworkCreateLinkNetMandatorRequestData createLinkNetMandator) {
    this.createLinkNetMandator = createLinkNetMandator;
  }


  public CreateIpv4NetworkRequestData createLinkNetrangeName(CreateIpv4NetworkCreateLinkNetrangeNameRequestData createLinkNetrangeName) {
    
    this.createLinkNetrangeName = createLinkNetrangeName;
    return this;
  }

   /**
   * Get createLinkNetrangeName
   * @return createLinkNetrangeName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_NETRANGE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateIpv4NetworkCreateLinkNetrangeNameRequestData getCreateLinkNetrangeName() {
    return createLinkNetrangeName;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_NETRANGE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkNetrangeName(CreateIpv4NetworkCreateLinkNetrangeNameRequestData createLinkNetrangeName) {
    this.createLinkNetrangeName = createLinkNetrangeName;
  }


  public CreateIpv4NetworkRequestData createLinkOrganization(List<CreateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkOrganizationItem(CreateIpv4NetworkCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<CreateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public CreateIpv4NetworkRequestData createLinkPerson(List<CreateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkPersonItem(CreateIpv4NetworkCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<CreateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public CreateIpv4NetworkRequestData createLinkPersonGroup(List<CreateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkPersonGroupItem(CreateIpv4NetworkCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<CreateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public CreateIpv4NetworkRequestData createLinkVirtualNasServer(List<CreateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkVirtualNasServerItem(CreateIpv4NetworkCreateLinkVirtualNasServerRequestData createLinkVirtualNasServerItem) {
    if (this.createLinkVirtualNasServer == null) {
      this.createLinkVirtualNasServer = new ArrayList<>();
    }
    this.createLinkVirtualNasServer.add(createLinkVirtualNasServerItem);
    return this;
  }

   /**
   * Get createLinkVirtualNasServer
   * @return createLinkVirtualNasServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkVirtualNasServerRequestData> getCreateLinkVirtualNasServer() {
    return createLinkVirtualNasServer;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualNasServer(List<CreateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
  }


  public CreateIpv4NetworkRequestData createLinkVirtualSwitch(List<CreateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkVirtualSwitchItem(CreateIpv4NetworkCreateLinkVirtualSwitchRequestData createLinkVirtualSwitchItem) {
    if (this.createLinkVirtualSwitch == null) {
      this.createLinkVirtualSwitch = new ArrayList<>();
    }
    this.createLinkVirtualSwitch.add(createLinkVirtualSwitchItem);
    return this;
  }

   /**
   * Get createLinkVirtualSwitch
   * @return createLinkVirtualSwitch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkVirtualSwitchRequestData> getCreateLinkVirtualSwitch() {
    return createLinkVirtualSwitch;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualSwitch(List<CreateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
  }


  public CreateIpv4NetworkRequestData createLinkZone(List<CreateIpv4NetworkCreateLinkZoneRequestData> createLinkZone) {
    
    this.createLinkZone = createLinkZone;
    return this;
  }

  public CreateIpv4NetworkRequestData addCreateLinkZoneItem(CreateIpv4NetworkCreateLinkZoneRequestData createLinkZoneItem) {
    if (this.createLinkZone == null) {
      this.createLinkZone = new ArrayList<>();
    }
    this.createLinkZone.add(createLinkZoneItem);
    return this;
  }

   /**
   * Get createLinkZone
   * @return createLinkZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateIpv4NetworkCreateLinkZoneRequestData> getCreateLinkZone() {
    return createLinkZone;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkZone(List<CreateIpv4NetworkCreateLinkZoneRequestData> createLinkZone) {
    this.createLinkZone = createLinkZone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIpv4NetworkRequestData createIpv4NetworkRequestData = (CreateIpv4NetworkRequestData) o;
    return Objects.equals(this.cRirDocumentationReq, createIpv4NetworkRequestData.cRirDocumentationReq) &&
        Objects.equals(this.sourceId, createIpv4NetworkRequestData.sourceId) &&
        Objects.equals(this.lookup, createIpv4NetworkRequestData.lookup) &&
        Objects.equals(this.useBroadcastIp, createIpv4NetworkRequestData.useBroadcastIp) &&
        Objects.equals(this.cAdminPersonId, createIpv4NetworkRequestData.cAdminPersonId) &&
        Objects.equals(this.dhcpServer, createIpv4NetworkRequestData.dhcpServer) &&
        Objects.equals(this.sourceSystem, createIpv4NetworkRequestData.sourceSystem) &&
        Objects.equals(this.creationMode, createIpv4NetworkRequestData.creationMode) &&
        Objects.equals(this.dhcpScopeType, createIpv4NetworkRequestData.dhcpScopeType) &&
        Objects.equals(this.contextId, createIpv4NetworkRequestData.contextId) &&
        Objects.equals(this.remark, createIpv4NetworkRequestData.remark) &&
        Objects.equals(this.prefixLength, createIpv4NetworkRequestData.prefixLength) &&
        Objects.equals(this.ownerSystem, createIpv4NetworkRequestData.ownerSystem) &&
        Objects.equals(this.dhcpLeaseTime, createIpv4NetworkRequestData.dhcpLeaseTime) &&
        Objects.equals(this.function, createIpv4NetworkRequestData.function) &&
        Objects.equals(this.useNetIp, createIpv4NetworkRequestData.useNetIp) &&
        Objects.equals(this.name, createIpv4NetworkRequestData.name) &&
        Objects.equals(this.primaryScopeElid, createIpv4NetworkRequestData.primaryScopeElid) &&
        Objects.equals(this.dhcpScopeName, createIpv4NetworkRequestData.dhcpScopeName) &&
        Objects.equals(this.cOrgNr, createIpv4NetworkRequestData.cOrgNr) &&
        Objects.equals(this.id, createIpv4NetworkRequestData.id) &&
        Objects.equals(this.subnetmask, createIpv4NetworkRequestData.subnetmask) &&
        Objects.equals(this.dhcp, createIpv4NetworkRequestData.dhcp) &&
        Objects.equals(this.createLinkContract, createIpv4NetworkRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomIpaccessSvc, createIpv4NetworkRequestData.createLinkCustomIpaccessSvc) &&
        Objects.equals(this.createLinkCustomL2CpeSegment, createIpv4NetworkRequestData.createLinkCustomL2CpeSegment) &&
        Objects.equals(this.createLinkDeviceAll, createIpv4NetworkRequestData.createLinkDeviceAll) &&
        Objects.equals(this.createLinkDomain, createIpv4NetworkRequestData.createLinkDomain) &&
        Objects.equals(this.createLinkFrameContract, createIpv4NetworkRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkGateway, createIpv4NetworkRequestData.createLinkGateway) &&
        Objects.equals(this.createLinkIpv4Netrange, createIpv4NetworkRequestData.createLinkIpv4Netrange) &&
        Objects.equals(this.createLinkIpv6Network, createIpv4NetworkRequestData.createLinkIpv6Network) &&
        Objects.equals(this.createLinkMaintenanceContract, createIpv4NetworkRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkNetMandator, createIpv4NetworkRequestData.createLinkNetMandator) &&
        Objects.equals(this.createLinkNetrangeName, createIpv4NetworkRequestData.createLinkNetrangeName) &&
        Objects.equals(this.createLinkOrganization, createIpv4NetworkRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, createIpv4NetworkRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, createIpv4NetworkRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkVirtualNasServer, createIpv4NetworkRequestData.createLinkVirtualNasServer) &&
        Objects.equals(this.createLinkVirtualSwitch, createIpv4NetworkRequestData.createLinkVirtualSwitch) &&
        Objects.equals(this.createLinkZone, createIpv4NetworkRequestData.createLinkZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cRirDocumentationReq, sourceId, lookup, useBroadcastIp, cAdminPersonId, dhcpServer, sourceSystem, creationMode, dhcpScopeType, contextId, remark, prefixLength, ownerSystem, dhcpLeaseTime, function, useNetIp, name, primaryScopeElid, dhcpScopeName, cOrgNr, id, subnetmask, dhcp, createLinkContract, createLinkCustomIpaccessSvc, createLinkCustomL2CpeSegment, createLinkDeviceAll, createLinkDomain, createLinkFrameContract, createLinkGateway, createLinkIpv4Netrange, createLinkIpv6Network, createLinkMaintenanceContract, createLinkNetMandator, createLinkNetrangeName, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkVirtualNasServer, createLinkVirtualSwitch, createLinkZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIpv4NetworkRequestData {\n");
    sb.append("    cRirDocumentationReq: ").append(toIndentedString(cRirDocumentationReq)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    lookup: ").append(toIndentedString(lookup)).append("\n");
    sb.append("    useBroadcastIp: ").append(toIndentedString(useBroadcastIp)).append("\n");
    sb.append("    cAdminPersonId: ").append(toIndentedString(cAdminPersonId)).append("\n");
    sb.append("    dhcpServer: ").append(toIndentedString(dhcpServer)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    creationMode: ").append(toIndentedString(creationMode)).append("\n");
    sb.append("    dhcpScopeType: ").append(toIndentedString(dhcpScopeType)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    prefixLength: ").append(toIndentedString(prefixLength)).append("\n");
    sb.append("    ownerSystem: ").append(toIndentedString(ownerSystem)).append("\n");
    sb.append("    dhcpLeaseTime: ").append(toIndentedString(dhcpLeaseTime)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    useNetIp: ").append(toIndentedString(useNetIp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryScopeElid: ").append(toIndentedString(primaryScopeElid)).append("\n");
    sb.append("    dhcpScopeName: ").append(toIndentedString(dhcpScopeName)).append("\n");
    sb.append("    cOrgNr: ").append(toIndentedString(cOrgNr)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subnetmask: ").append(toIndentedString(subnetmask)).append("\n");
    sb.append("    dhcp: ").append(toIndentedString(dhcp)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomIpaccessSvc: ").append(toIndentedString(createLinkCustomIpaccessSvc)).append("\n");
    sb.append("    createLinkCustomL2CpeSegment: ").append(toIndentedString(createLinkCustomL2CpeSegment)).append("\n");
    sb.append("    createLinkDeviceAll: ").append(toIndentedString(createLinkDeviceAll)).append("\n");
    sb.append("    createLinkDomain: ").append(toIndentedString(createLinkDomain)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkGateway: ").append(toIndentedString(createLinkGateway)).append("\n");
    sb.append("    createLinkIpv4Netrange: ").append(toIndentedString(createLinkIpv4Netrange)).append("\n");
    sb.append("    createLinkIpv6Network: ").append(toIndentedString(createLinkIpv6Network)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkNetMandator: ").append(toIndentedString(createLinkNetMandator)).append("\n");
    sb.append("    createLinkNetrangeName: ").append(toIndentedString(createLinkNetrangeName)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkVirtualNasServer: ").append(toIndentedString(createLinkVirtualNasServer)).append("\n");
    sb.append("    createLinkVirtualSwitch: ").append(toIndentedString(createLinkVirtualSwitch)).append("\n");
    sb.append("    createLinkZone: ").append(toIndentedString(createLinkZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

