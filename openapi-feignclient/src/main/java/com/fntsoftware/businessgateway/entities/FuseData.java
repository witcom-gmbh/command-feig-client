/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FuseData
 */
@JsonPropertyOrder({
  FuseData.JSON_PROPERTY_PREFIX,
  FuseData.JSON_PROPERTY_SEQ_NUM,
  FuseData.JSON_PROPERTY_LAST_MAINTENANCE_BY,
  FuseData.JSON_PROPERTY_PLAN_STATUS,
  FuseData.JSON_PROPERTY_NEXT_MAINTENANCE,
  FuseData.JSON_PROPERTY_REMARK,
  FuseData.JSON_PROPERTY_SWITCH_STATUS,
  FuseData.JSON_PROPERTY_SUFFIX,
  FuseData.JSON_PROPERTY_CONNECTION_TYPE,
  FuseData.JSON_PROPERTY_ELID,
  FuseData.JSON_PROPERTY_SEPARATOR,
  FuseData.JSON_PROPERTY_LAST_MAINTENANCE,
  FuseData.JSON_PROPERTY_CONDITION,
  FuseData.JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD,
  FuseData.JSON_PROPERTY_TYPE_ELID,
  FuseData.JSON_PROPERTY_VISIBLE_ID,
  FuseData.JSON_PROPERTY_ID,
  FuseData.JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC
})
@JsonTypeName("fuseData")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class FuseData {
  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_SEQ_NUM = "seqNum";
  private String seqNum;

  public static final String JSON_PROPERTY_LAST_MAINTENANCE_BY = "lastMaintenanceBy";
  private String lastMaintenanceBy;

  public static final String JSON_PROPERTY_PLAN_STATUS = "planStatus";
  private String planStatus;

  public static final String JSON_PROPERTY_NEXT_MAINTENANCE = "nextMaintenance";
  private DateTime nextMaintenance;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_SWITCH_STATUS = "switchStatus";
  private Boolean switchStatus;

  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private String suffix;

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connectionType";
  private String connectionType;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_SEPARATOR = "separator";
  private String separator;

  public static final String JSON_PROPERTY_LAST_MAINTENANCE = "lastMaintenance";
  private DateTime lastMaintenance;

  public static final String JSON_PROPERTY_CONDITION = "condition";
  private String condition;

  public static final String JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD = "nominalCurrentThreshold";
  private BigDecimal nominalCurrentThreshold;

  public static final String JSON_PROPERTY_TYPE_ELID = "typeElid";
  private String typeElid;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC = "nominalCurrentThresholdPc";
  private BigDecimal nominalCurrentThresholdPc;

  public FuseData() {
  }

  public FuseData prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public FuseData seqNum(String seqNum) {
    
    this.seqNum = seqNum;
    return this;
  }

   /**
   * Get seqNum
   * @return seqNum
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQ_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSeqNum() {
    return seqNum;
  }


  @JsonProperty(JSON_PROPERTY_SEQ_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeqNum(String seqNum) {
    this.seqNum = seqNum;
  }


  public FuseData lastMaintenanceBy(String lastMaintenanceBy) {
    
    this.lastMaintenanceBy = lastMaintenanceBy;
    return this;
  }

   /**
   * Get lastMaintenanceBy
   * @return lastMaintenanceBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MAINTENANCE_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastMaintenanceBy() {
    return lastMaintenanceBy;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MAINTENANCE_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMaintenanceBy(String lastMaintenanceBy) {
    this.lastMaintenanceBy = lastMaintenanceBy;
  }


  public FuseData planStatus(String planStatus) {
    
    this.planStatus = planStatus;
    return this;
  }

   /**
   * Get planStatus
   * @return planStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanStatus() {
    return planStatus;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanStatus(String planStatus) {
    this.planStatus = planStatus;
  }


  public FuseData nextMaintenance(DateTime nextMaintenance) {
    
    this.nextMaintenance = nextMaintenance;
    return this;
  }

   /**
   * Get nextMaintenance
   * @return nextMaintenance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getNextMaintenance() {
    return nextMaintenance;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextMaintenance(DateTime nextMaintenance) {
    this.nextMaintenance = nextMaintenance;
  }


  public FuseData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public FuseData switchStatus(Boolean switchStatus) {
    
    this.switchStatus = switchStatus;
    return this;
  }

   /**
   * Get switchStatus
   * @return switchStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWITCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSwitchStatus() {
    return switchStatus;
  }


  @JsonProperty(JSON_PROPERTY_SWITCH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwitchStatus(Boolean switchStatus) {
    this.switchStatus = switchStatus;
  }


  public FuseData suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSuffix() {
    return suffix;
  }


  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public FuseData connectionType(String connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }


  public FuseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public FuseData separator(String separator) {
    
    this.separator = separator;
    return this;
  }

   /**
   * Get separator
   * @return separator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSeparator() {
    return separator;
  }


  @JsonProperty(JSON_PROPERTY_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeparator(String separator) {
    this.separator = separator;
  }


  public FuseData lastMaintenance(DateTime lastMaintenance) {
    
    this.lastMaintenance = lastMaintenance;
    return this;
  }

   /**
   * Get lastMaintenance
   * @return lastMaintenance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getLastMaintenance() {
    return lastMaintenance;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMaintenance(DateTime lastMaintenance) {
    this.lastMaintenance = lastMaintenance;
  }


  public FuseData condition(String condition) {
    
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCondition() {
    return condition;
  }


  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCondition(String condition) {
    this.condition = condition;
  }


  public FuseData nominalCurrentThreshold(BigDecimal nominalCurrentThreshold) {
    
    this.nominalCurrentThreshold = nominalCurrentThreshold;
    return this;
  }

   /**
   * Get nominalCurrentThreshold
   * @return nominalCurrentThreshold
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCurrentThreshold() {
    return nominalCurrentThreshold;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCurrentThreshold(BigDecimal nominalCurrentThreshold) {
    this.nominalCurrentThreshold = nominalCurrentThreshold;
  }


  public FuseData typeElid(String typeElid) {
    
    this.typeElid = typeElid;
    return this;
  }

   /**
   * Get typeElid
   * @return typeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeElid() {
    return typeElid;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeElid(String typeElid) {
    this.typeElid = typeElid;
  }


  public FuseData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public FuseData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public FuseData nominalCurrentThresholdPc(BigDecimal nominalCurrentThresholdPc) {
    
    this.nominalCurrentThresholdPc = nominalCurrentThresholdPc;
    return this;
  }

   /**
   * Get nominalCurrentThresholdPc
   * @return nominalCurrentThresholdPc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCurrentThresholdPc() {
    return nominalCurrentThresholdPc;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCurrentThresholdPc(BigDecimal nominalCurrentThresholdPc) {
    this.nominalCurrentThresholdPc = nominalCurrentThresholdPc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FuseData fuseData = (FuseData) o;
    return Objects.equals(this.prefix, fuseData.prefix) &&
        Objects.equals(this.seqNum, fuseData.seqNum) &&
        Objects.equals(this.lastMaintenanceBy, fuseData.lastMaintenanceBy) &&
        Objects.equals(this.planStatus, fuseData.planStatus) &&
        Objects.equals(this.nextMaintenance, fuseData.nextMaintenance) &&
        Objects.equals(this.remark, fuseData.remark) &&
        Objects.equals(this.switchStatus, fuseData.switchStatus) &&
        Objects.equals(this.suffix, fuseData.suffix) &&
        Objects.equals(this.connectionType, fuseData.connectionType) &&
        Objects.equals(this.elid, fuseData.elid) &&
        Objects.equals(this.separator, fuseData.separator) &&
        Objects.equals(this.lastMaintenance, fuseData.lastMaintenance) &&
        Objects.equals(this.condition, fuseData.condition) &&
        Objects.equals(this.nominalCurrentThreshold, fuseData.nominalCurrentThreshold) &&
        Objects.equals(this.typeElid, fuseData.typeElid) &&
        Objects.equals(this.visibleId, fuseData.visibleId) &&
        Objects.equals(this.id, fuseData.id) &&
        Objects.equals(this.nominalCurrentThresholdPc, fuseData.nominalCurrentThresholdPc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefix, seqNum, lastMaintenanceBy, planStatus, nextMaintenance, remark, switchStatus, suffix, connectionType, elid, separator, lastMaintenance, condition, nominalCurrentThreshold, typeElid, visibleId, id, nominalCurrentThresholdPc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FuseData {\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    seqNum: ").append(toIndentedString(seqNum)).append("\n");
    sb.append("    lastMaintenanceBy: ").append(toIndentedString(lastMaintenanceBy)).append("\n");
    sb.append("    planStatus: ").append(toIndentedString(planStatus)).append("\n");
    sb.append("    nextMaintenance: ").append(toIndentedString(nextMaintenance)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    switchStatus: ").append(toIndentedString(switchStatus)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    separator: ").append(toIndentedString(separator)).append("\n");
    sb.append("    lastMaintenance: ").append(toIndentedString(lastMaintenance)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    nominalCurrentThreshold: ").append(toIndentedString(nominalCurrentThreshold)).append("\n");
    sb.append("    typeElid: ").append(toIndentedString(typeElid)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    nominalCurrentThresholdPc: ").append(toIndentedString(nominalCurrentThresholdPc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

