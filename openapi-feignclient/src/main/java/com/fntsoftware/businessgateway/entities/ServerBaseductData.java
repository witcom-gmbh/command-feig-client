/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServerBaseductData
 */
@JsonPropertyOrder({
  ServerBaseductData.JSON_PROPERTY_COLOR,
  ServerBaseductData.JSON_PROPERTY_ENTITY_NAME,
  ServerBaseductData.JSON_PROPERTY_DESCRIPTION,
  ServerBaseductData.JSON_PROPERTY_FROM_ENDPOINT_ELID,
  ServerBaseductData.JSON_PROPERTY_VISIBLE_ID,
  ServerBaseductData.JSON_PROPERTY_ID,
  ServerBaseductData.JSON_PROPERTY_TYPE,
  ServerBaseductData.JSON_PROPERTY_ELID,
  ServerBaseductData.JSON_PROPERTY_TO_ENDPOINT_ELID,
  ServerBaseductData.JSON_PROPERTY_PARENT_ELID
})
@JsonTypeName("serverBaseductData")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class ServerBaseductData {
  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_ENTITY_NAME = "entityName";
  private String entityName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_FROM_ENDPOINT_ELID = "fromEndpointElid";
  private String fromEndpointElid;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_TO_ENDPOINT_ELID = "toEndpointElid";
  private String toEndpointElid;

  public static final String JSON_PROPERTY_PARENT_ELID = "parentElid";
  private String parentElid;

  public ServerBaseductData() {
  }

  public ServerBaseductData color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public ServerBaseductData entityName(String entityName) {
    
    this.entityName = entityName;
    return this;
  }

   /**
   * Get entityName
   * @return entityName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityName() {
    return entityName;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityName(String entityName) {
    this.entityName = entityName;
  }


  public ServerBaseductData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ServerBaseductData fromEndpointElid(String fromEndpointElid) {
    
    this.fromEndpointElid = fromEndpointElid;
    return this;
  }

   /**
   * Get fromEndpointElid
   * @return fromEndpointElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_ENDPOINT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromEndpointElid() {
    return fromEndpointElid;
  }


  @JsonProperty(JSON_PROPERTY_FROM_ENDPOINT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromEndpointElid(String fromEndpointElid) {
    this.fromEndpointElid = fromEndpointElid;
  }


  public ServerBaseductData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public ServerBaseductData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ServerBaseductData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ServerBaseductData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public ServerBaseductData toEndpointElid(String toEndpointElid) {
    
    this.toEndpointElid = toEndpointElid;
    return this;
  }

   /**
   * Get toEndpointElid
   * @return toEndpointElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_ENDPOINT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToEndpointElid() {
    return toEndpointElid;
  }


  @JsonProperty(JSON_PROPERTY_TO_ENDPOINT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToEndpointElid(String toEndpointElid) {
    this.toEndpointElid = toEndpointElid;
  }


  public ServerBaseductData parentElid(String parentElid) {
    
    this.parentElid = parentElid;
    return this;
  }

   /**
   * Get parentElid
   * @return parentElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentElid() {
    return parentElid;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentElid(String parentElid) {
    this.parentElid = parentElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerBaseductData serverBaseductData = (ServerBaseductData) o;
    return Objects.equals(this.color, serverBaseductData.color) &&
        Objects.equals(this.entityName, serverBaseductData.entityName) &&
        Objects.equals(this.description, serverBaseductData.description) &&
        Objects.equals(this.fromEndpointElid, serverBaseductData.fromEndpointElid) &&
        Objects.equals(this.visibleId, serverBaseductData.visibleId) &&
        Objects.equals(this.id, serverBaseductData.id) &&
        Objects.equals(this.type, serverBaseductData.type) &&
        Objects.equals(this.elid, serverBaseductData.elid) &&
        Objects.equals(this.toEndpointElid, serverBaseductData.toEndpointElid) &&
        Objects.equals(this.parentElid, serverBaseductData.parentElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, entityName, description, fromEndpointElid, visibleId, id, type, elid, toEndpointElid, parentElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerBaseductData {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    entityName: ").append(toIndentedString(entityName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fromEndpointElid: ").append(toIndentedString(fromEndpointElid)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    toEndpointElid: ").append(toIndentedString(toEndpointElid)).append("\n");
    sb.append("    parentElid: ").append(toIndentedString(parentElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

