/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScrollQueryscrollQuery
 */
@JsonPropertyOrder({
  ScrollQueryscrollQuery.JSON_PROPERTY_EXPIRY_DATE,
  ScrollQueryscrollQuery.JSON_PROPERTY_TOTAL_ITEM_COUNT_APPROX,
  ScrollQueryscrollQuery.JSON_PROPERTY_PAGE_COUNT,
  ScrollQueryscrollQuery.JSON_PROPERTY_DIRECTORY_PATH,
  ScrollQueryscrollQuery.JSON_PROPERTY_WRITE_STATUS,
  ScrollQueryscrollQuery.JSON_PROPERTY_FILE_SIZE,
  ScrollQueryscrollQuery.JSON_PROPERTY_PAGE_SIZE,
  ScrollQueryscrollQuery.JSON_PROPERTY_SESSION_ID,
  ScrollQueryscrollQuery.JSON_PROPERTY_SCROLL_ID
})
@JsonTypeName("scrollQueryscrollQuery")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class ScrollQueryscrollQuery {
  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiryDate";
  private DateTime expiryDate;

  public static final String JSON_PROPERTY_TOTAL_ITEM_COUNT_APPROX = "totalItemCountApprox";
  private BigDecimal totalItemCountApprox;

  public static final String JSON_PROPERTY_PAGE_COUNT = "pageCount";
  private BigDecimal pageCount;

  public static final String JSON_PROPERTY_DIRECTORY_PATH = "directoryPath";
  private String directoryPath;

  public static final String JSON_PROPERTY_WRITE_STATUS = "writeStatus";
  private String writeStatus;

  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private String fileSize;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";
  private BigDecimal pageSize;

  public static final String JSON_PROPERTY_SESSION_ID = "sessionId";
  private String sessionId;

  public static final String JSON_PROPERTY_SCROLL_ID = "scrollId";
  private BigDecimal scrollId;

  public ScrollQueryscrollQuery() {
  }

  public ScrollQueryscrollQuery expiryDate(DateTime expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(DateTime expiryDate) {
    this.expiryDate = expiryDate;
  }


  public ScrollQueryscrollQuery totalItemCountApprox(BigDecimal totalItemCountApprox) {
    
    this.totalItemCountApprox = totalItemCountApprox;
    return this;
  }

   /**
   * Get totalItemCountApprox
   * @return totalItemCountApprox
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ITEM_COUNT_APPROX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalItemCountApprox() {
    return totalItemCountApprox;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ITEM_COUNT_APPROX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalItemCountApprox(BigDecimal totalItemCountApprox) {
    this.totalItemCountApprox = totalItemCountApprox;
  }


  public ScrollQueryscrollQuery pageCount(BigDecimal pageCount) {
    
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Get pageCount
   * @return pageCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPageCount() {
    return pageCount;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageCount(BigDecimal pageCount) {
    this.pageCount = pageCount;
  }


  public ScrollQueryscrollQuery directoryPath(String directoryPath) {
    
    this.directoryPath = directoryPath;
    return this;
  }

   /**
   * Get directoryPath
   * @return directoryPath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTORY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectoryPath() {
    return directoryPath;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTORY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectoryPath(String directoryPath) {
    this.directoryPath = directoryPath;
  }


  public ScrollQueryscrollQuery writeStatus(String writeStatus) {
    
    this.writeStatus = writeStatus;
    return this;
  }

   /**
   * Get writeStatus
   * @return writeStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWriteStatus() {
    return writeStatus;
  }


  @JsonProperty(JSON_PROPERTY_WRITE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWriteStatus(String writeStatus) {
    this.writeStatus = writeStatus;
  }


  public ScrollQueryscrollQuery fileSize(String fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Get fileSize
   * @return fileSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(String fileSize) {
    this.fileSize = fileSize;
  }


  public ScrollQueryscrollQuery pageSize(BigDecimal pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPageSize() {
    return pageSize;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(BigDecimal pageSize) {
    this.pageSize = pageSize;
  }


  public ScrollQueryscrollQuery sessionId(String sessionId) {
    
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Get sessionId
   * @return sessionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public ScrollQueryscrollQuery scrollId(BigDecimal scrollId) {
    
    this.scrollId = scrollId;
    return this;
  }

   /**
   * Get scrollId
   * @return scrollId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCROLL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getScrollId() {
    return scrollId;
  }


  @JsonProperty(JSON_PROPERTY_SCROLL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScrollId(BigDecimal scrollId) {
    this.scrollId = scrollId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScrollQueryscrollQuery scrollQueryscrollQuery = (ScrollQueryscrollQuery) o;
    return Objects.equals(this.expiryDate, scrollQueryscrollQuery.expiryDate) &&
        Objects.equals(this.totalItemCountApprox, scrollQueryscrollQuery.totalItemCountApprox) &&
        Objects.equals(this.pageCount, scrollQueryscrollQuery.pageCount) &&
        Objects.equals(this.directoryPath, scrollQueryscrollQuery.directoryPath) &&
        Objects.equals(this.writeStatus, scrollQueryscrollQuery.writeStatus) &&
        Objects.equals(this.fileSize, scrollQueryscrollQuery.fileSize) &&
        Objects.equals(this.pageSize, scrollQueryscrollQuery.pageSize) &&
        Objects.equals(this.sessionId, scrollQueryscrollQuery.sessionId) &&
        Objects.equals(this.scrollId, scrollQueryscrollQuery.scrollId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiryDate, totalItemCountApprox, pageCount, directoryPath, writeStatus, fileSize, pageSize, sessionId, scrollId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScrollQueryscrollQuery {\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    totalItemCountApprox: ").append(toIndentedString(totalItemCountApprox)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    directoryPath: ").append(toIndentedString(directoryPath)).append("\n");
    sb.append("    writeStatus: ").append(toIndentedString(writeStatus)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    scrollId: ").append(toIndentedString(scrollId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

