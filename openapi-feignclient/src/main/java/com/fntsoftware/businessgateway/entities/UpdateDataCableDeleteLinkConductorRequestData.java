/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateDataCableDeleteLinkConductorRequestData
 */
@JsonPropertyOrder({
  UpdateDataCableDeleteLinkConductorRequestData.JSON_PROPERTY_RELEASE_SIGNALPATH,
  UpdateDataCableDeleteLinkConductorRequestData.JSON_PROPERTY_RELEASE_SERVICE,
  UpdateDataCableDeleteLinkConductorRequestData.JSON_PROPERTY_RELEASE_TRM_ROUTE,
  UpdateDataCableDeleteLinkConductorRequestData.JSON_PROPERTY_LINK_ELID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class UpdateDataCableDeleteLinkConductorRequestData {
  public static final String JSON_PROPERTY_RELEASE_SIGNALPATH = "releaseSignalpath";
  private Boolean releaseSignalpath;

  public static final String JSON_PROPERTY_RELEASE_SERVICE = "releaseService";
  private Boolean releaseService;

  public static final String JSON_PROPERTY_RELEASE_TRM_ROUTE = "releaseTrmRoute";
  private Boolean releaseTrmRoute;

  public static final String JSON_PROPERTY_LINK_ELID = "linkElid";
  private String linkElid;

  public UpdateDataCableDeleteLinkConductorRequestData() {
  }

  public UpdateDataCableDeleteLinkConductorRequestData releaseSignalpath(Boolean releaseSignalpath) {
    
    this.releaseSignalpath = releaseSignalpath;
    return this;
  }

   /**
   * Get releaseSignalpath
   * @return releaseSignalpath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASE_SIGNALPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReleaseSignalpath() {
    return releaseSignalpath;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_SIGNALPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseSignalpath(Boolean releaseSignalpath) {
    this.releaseSignalpath = releaseSignalpath;
  }


  public UpdateDataCableDeleteLinkConductorRequestData releaseService(Boolean releaseService) {
    
    this.releaseService = releaseService;
    return this;
  }

   /**
   * Get releaseService
   * @return releaseService
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASE_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReleaseService() {
    return releaseService;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseService(Boolean releaseService) {
    this.releaseService = releaseService;
  }


  public UpdateDataCableDeleteLinkConductorRequestData releaseTrmRoute(Boolean releaseTrmRoute) {
    
    this.releaseTrmRoute = releaseTrmRoute;
    return this;
  }

   /**
   * Get releaseTrmRoute
   * @return releaseTrmRoute
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASE_TRM_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReleaseTrmRoute() {
    return releaseTrmRoute;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_TRM_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseTrmRoute(Boolean releaseTrmRoute) {
    this.releaseTrmRoute = releaseTrmRoute;
  }


  public UpdateDataCableDeleteLinkConductorRequestData linkElid(String linkElid) {
    
    this.linkElid = linkElid;
    return this;
  }

   /**
   * Get linkElid
   * @return linkElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkElid() {
    return linkElid;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkElid(String linkElid) {
    this.linkElid = linkElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDataCableDeleteLinkConductorRequestData updateDataCableDeleteLinkConductorRequestData = (UpdateDataCableDeleteLinkConductorRequestData) o;
    return Objects.equals(this.releaseSignalpath, updateDataCableDeleteLinkConductorRequestData.releaseSignalpath) &&
        Objects.equals(this.releaseService, updateDataCableDeleteLinkConductorRequestData.releaseService) &&
        Objects.equals(this.releaseTrmRoute, updateDataCableDeleteLinkConductorRequestData.releaseTrmRoute) &&
        Objects.equals(this.linkElid, updateDataCableDeleteLinkConductorRequestData.linkElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(releaseSignalpath, releaseService, releaseTrmRoute, linkElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDataCableDeleteLinkConductorRequestData {\n");
    sb.append("    releaseSignalpath: ").append(toIndentedString(releaseSignalpath)).append("\n");
    sb.append("    releaseService: ").append(toIndentedString(releaseService)).append("\n");
    sb.append("    releaseTrmRoute: ").append(toIndentedString(releaseTrmRoute)).append("\n");
    sb.append("    linkElid: ").append(toIndentedString(linkElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

