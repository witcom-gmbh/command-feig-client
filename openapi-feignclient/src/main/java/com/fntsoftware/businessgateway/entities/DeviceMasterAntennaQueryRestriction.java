/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsBoolean;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceMasterAntennaQueryRestriction
 */
@JsonPropertyOrder({
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_REMARK,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_USED,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_EXPLANATION,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_RET_INPUT_VOLTAGE_FROM,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_TYPE,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_MANUFACTURER,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_FROM,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_RET_REMARK,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_RF_CONNECTOR_LOCATION,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_FUNCTION,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WIND_LOADING_MAX,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_TO,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_GRAPHIC,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_DIMENSION_DEPTH,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_RET_PROTOCOL,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_POLARISATION,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_DIMENSION_HEIGHT,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WIND_LOADING_REAR,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_RET_INPUT_VOLTAGE,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WEIGHT,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_DIMENSION_WIDTH,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WIND_LOADING_FRONT,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ELID,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_SPEC_REMARK,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_BAND,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_IS_STANDARD,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_GROUNDING_TYPE,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WIND_LOADING_SIDE,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_PORTFOLIO_STATUS,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_RET_INPUT_VOLTAGE_TO,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_WIND_SPEED_MAX,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_CARD,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_FIRST,
  DeviceMasterAntennaQueryRestriction.JSON_PROPERTY_ANTENNA_MAX_EFF_POWER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class DeviceMasterAntennaQueryRestriction {
  public static final String JSON_PROPERTY_REMARK = "remark";
  private RestrictionsString remark;

  public static final String JSON_PROPERTY_USED = "used";
  private RestrictionsBoolean used;

  public static final String JSON_PROPERTY_EXPLANATION = "explanation";
  private RestrictionsString explanation;

  public static final String JSON_PROPERTY_RET_INPUT_VOLTAGE_FROM = "retInputVoltageFrom";
  private RestrictionsNumeric retInputVoltageFrom;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RestrictionsString type;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private RestrictionsString manufacturer;

  public static final String JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_FROM = "antennaOpFrequencyBandFrom";
  private RestrictionsNumeric antennaOpFrequencyBandFrom;

  public static final String JSON_PROPERTY_RET_REMARK = "retRemark";
  private RestrictionsString retRemark;

  public static final String JSON_PROPERTY_ANTENNA_RF_CONNECTOR_LOCATION = "antennaRfConnectorLocation";
  private RestrictionsString antennaRfConnectorLocation;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private RestrictionsString function;

  public static final String JSON_PROPERTY_WIND_LOADING_MAX = "windLoadingMax";
  private RestrictionsString windLoadingMax;

  public static final String JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_TO = "antennaOpFrequencyBandTo";
  private RestrictionsNumeric antennaOpFrequencyBandTo;

  public static final String JSON_PROPERTY_GRAPHIC = "graphic";
  private RestrictionsBoolean graphic;

  public static final String JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER = "manufacturerArticleNumber";
  private RestrictionsString manufacturerArticleNumber;

  public static final String JSON_PROPERTY_DIMENSION_DEPTH = "dimensionDepth";
  private RestrictionsNumeric dimensionDepth;

  public static final String JSON_PROPERTY_RET_PROTOCOL = "retProtocol";
  private RestrictionsString retProtocol;

  public static final String JSON_PROPERTY_ANTENNA_POLARISATION = "antennaPolarisation";
  private RestrictionsString antennaPolarisation;

  public static final String JSON_PROPERTY_DIMENSION_HEIGHT = "dimensionHeight";
  private RestrictionsNumeric dimensionHeight;

  public static final String JSON_PROPERTY_WIND_LOADING_REAR = "windLoadingRear";
  private RestrictionsString windLoadingRear;

  public static final String JSON_PROPERTY_RET_INPUT_VOLTAGE = "retInputVoltage";
  private RestrictionsString retInputVoltage;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private RestrictionsNumeric weight;

  public static final String JSON_PROPERTY_DIMENSION_WIDTH = "dimensionWidth";
  private RestrictionsNumeric dimensionWidth;

  public static final String JSON_PROPERTY_WIND_LOADING_FRONT = "windLoadingFront";
  private RestrictionsString windLoadingFront;

  public static final String JSON_PROPERTY_ELID = "elid";
  private RestrictionsString elid;

  public static final String JSON_PROPERTY_ANTENNA_SPEC_REMARK = "antennaSpecRemark";
  private RestrictionsString antennaSpecRemark;

  public static final String JSON_PROPERTY_ANTENNA_BAND = "antennaBand";
  private RestrictionsString antennaBand;

  public static final String JSON_PROPERTY_IS_STANDARD = "isStandard";
  private RestrictionsBoolean isStandard;

  public static final String JSON_PROPERTY_ANTENNA_GROUNDING_TYPE = "antennaGroundingType";
  private RestrictionsString antennaGroundingType;

  public static final String JSON_PROPERTY_WIND_LOADING_SIDE = "windLoadingSide";
  private RestrictionsString windLoadingSide;

  public static final String JSON_PROPERTY_ANTENNA_PORTFOLIO_STATUS = "antennaPortfolioStatus";
  private RestrictionsString antennaPortfolioStatus;

  public static final String JSON_PROPERTY_RET_INPUT_VOLTAGE_TO = "retInputVoltageTo";
  private RestrictionsNumeric retInputVoltageTo;

  public static final String JSON_PROPERTY_WIND_SPEED_MAX = "windSpeedMax";
  private RestrictionsString windSpeedMax;

  public static final String JSON_PROPERTY_CARD = "card";
  private RestrictionsBoolean card;

  public static final String JSON_PROPERTY_FIRST = "first";
  private RestrictionsNumeric first;

  public static final String JSON_PROPERTY_ANTENNA_MAX_EFF_POWER = "antennaMaxEffPower";
  private RestrictionsNumeric antennaMaxEffPower;

  public DeviceMasterAntennaQueryRestriction() {
  }

  public DeviceMasterAntennaQueryRestriction remark(RestrictionsString remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(RestrictionsString remark) {
    this.remark = remark;
  }


  public DeviceMasterAntennaQueryRestriction used(RestrictionsBoolean used) {
    
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getUsed() {
    return used;
  }


  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsed(RestrictionsBoolean used) {
    this.used = used;
  }


  public DeviceMasterAntennaQueryRestriction explanation(RestrictionsString explanation) {
    
    this.explanation = explanation;
    return this;
  }

   /**
   * Get explanation
   * @return explanation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getExplanation() {
    return explanation;
  }


  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplanation(RestrictionsString explanation) {
    this.explanation = explanation;
  }


  public DeviceMasterAntennaQueryRestriction retInputVoltageFrom(RestrictionsNumeric retInputVoltageFrom) {
    
    this.retInputVoltageFrom = retInputVoltageFrom;
    return this;
  }

   /**
   * Get retInputVoltageFrom
   * @return retInputVoltageFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getRetInputVoltageFrom() {
    return retInputVoltageFrom;
  }


  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetInputVoltageFrom(RestrictionsNumeric retInputVoltageFrom) {
    this.retInputVoltageFrom = retInputVoltageFrom;
  }


  public DeviceMasterAntennaQueryRestriction type(RestrictionsString type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(RestrictionsString type) {
    this.type = type;
  }


  public DeviceMasterAntennaQueryRestriction manufacturer(RestrictionsString manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(RestrictionsString manufacturer) {
    this.manufacturer = manufacturer;
  }


  public DeviceMasterAntennaQueryRestriction antennaOpFrequencyBandFrom(RestrictionsNumeric antennaOpFrequencyBandFrom) {
    
    this.antennaOpFrequencyBandFrom = antennaOpFrequencyBandFrom;
    return this;
  }

   /**
   * Get antennaOpFrequencyBandFrom
   * @return antennaOpFrequencyBandFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getAntennaOpFrequencyBandFrom() {
    return antennaOpFrequencyBandFrom;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaOpFrequencyBandFrom(RestrictionsNumeric antennaOpFrequencyBandFrom) {
    this.antennaOpFrequencyBandFrom = antennaOpFrequencyBandFrom;
  }


  public DeviceMasterAntennaQueryRestriction retRemark(RestrictionsString retRemark) {
    
    this.retRemark = retRemark;
    return this;
  }

   /**
   * Get retRemark
   * @return retRemark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RET_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getRetRemark() {
    return retRemark;
  }


  @JsonProperty(JSON_PROPERTY_RET_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetRemark(RestrictionsString retRemark) {
    this.retRemark = retRemark;
  }


  public DeviceMasterAntennaQueryRestriction antennaRfConnectorLocation(RestrictionsString antennaRfConnectorLocation) {
    
    this.antennaRfConnectorLocation = antennaRfConnectorLocation;
    return this;
  }

   /**
   * Get antennaRfConnectorLocation
   * @return antennaRfConnectorLocation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_RF_CONNECTOR_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaRfConnectorLocation() {
    return antennaRfConnectorLocation;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_RF_CONNECTOR_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaRfConnectorLocation(RestrictionsString antennaRfConnectorLocation) {
    this.antennaRfConnectorLocation = antennaRfConnectorLocation;
  }


  public DeviceMasterAntennaQueryRestriction function(RestrictionsString function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(RestrictionsString function) {
    this.function = function;
  }


  public DeviceMasterAntennaQueryRestriction windLoadingMax(RestrictionsString windLoadingMax) {
    
    this.windLoadingMax = windLoadingMax;
    return this;
  }

   /**
   * Get windLoadingMax
   * @return windLoadingMax
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIND_LOADING_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWindLoadingMax() {
    return windLoadingMax;
  }


  @JsonProperty(JSON_PROPERTY_WIND_LOADING_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindLoadingMax(RestrictionsString windLoadingMax) {
    this.windLoadingMax = windLoadingMax;
  }


  public DeviceMasterAntennaQueryRestriction antennaOpFrequencyBandTo(RestrictionsNumeric antennaOpFrequencyBandTo) {
    
    this.antennaOpFrequencyBandTo = antennaOpFrequencyBandTo;
    return this;
  }

   /**
   * Get antennaOpFrequencyBandTo
   * @return antennaOpFrequencyBandTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getAntennaOpFrequencyBandTo() {
    return antennaOpFrequencyBandTo;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_OP_FREQUENCY_BAND_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaOpFrequencyBandTo(RestrictionsNumeric antennaOpFrequencyBandTo) {
    this.antennaOpFrequencyBandTo = antennaOpFrequencyBandTo;
  }


  public DeviceMasterAntennaQueryRestriction graphic(RestrictionsBoolean graphic) {
    
    this.graphic = graphic;
    return this;
  }

   /**
   * Get graphic
   * @return graphic
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRAPHIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getGraphic() {
    return graphic;
  }


  @JsonProperty(JSON_PROPERTY_GRAPHIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGraphic(RestrictionsBoolean graphic) {
    this.graphic = graphic;
  }


  public DeviceMasterAntennaQueryRestriction manufacturerArticleNumber(RestrictionsString manufacturerArticleNumber) {
    
    this.manufacturerArticleNumber = manufacturerArticleNumber;
    return this;
  }

   /**
   * Get manufacturerArticleNumber
   * @return manufacturerArticleNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getManufacturerArticleNumber() {
    return manufacturerArticleNumber;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturerArticleNumber(RestrictionsString manufacturerArticleNumber) {
    this.manufacturerArticleNumber = manufacturerArticleNumber;
  }


  public DeviceMasterAntennaQueryRestriction dimensionDepth(RestrictionsNumeric dimensionDepth) {
    
    this.dimensionDepth = dimensionDepth;
    return this;
  }

   /**
   * Get dimensionDepth
   * @return dimensionDepth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getDimensionDepth() {
    return dimensionDepth;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionDepth(RestrictionsNumeric dimensionDepth) {
    this.dimensionDepth = dimensionDepth;
  }


  public DeviceMasterAntennaQueryRestriction retProtocol(RestrictionsString retProtocol) {
    
    this.retProtocol = retProtocol;
    return this;
  }

   /**
   * Get retProtocol
   * @return retProtocol
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RET_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getRetProtocol() {
    return retProtocol;
  }


  @JsonProperty(JSON_PROPERTY_RET_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetProtocol(RestrictionsString retProtocol) {
    this.retProtocol = retProtocol;
  }


  public DeviceMasterAntennaQueryRestriction antennaPolarisation(RestrictionsString antennaPolarisation) {
    
    this.antennaPolarisation = antennaPolarisation;
    return this;
  }

   /**
   * Get antennaPolarisation
   * @return antennaPolarisation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_POLARISATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaPolarisation() {
    return antennaPolarisation;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_POLARISATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaPolarisation(RestrictionsString antennaPolarisation) {
    this.antennaPolarisation = antennaPolarisation;
  }


  public DeviceMasterAntennaQueryRestriction dimensionHeight(RestrictionsNumeric dimensionHeight) {
    
    this.dimensionHeight = dimensionHeight;
    return this;
  }

   /**
   * Get dimensionHeight
   * @return dimensionHeight
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getDimensionHeight() {
    return dimensionHeight;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionHeight(RestrictionsNumeric dimensionHeight) {
    this.dimensionHeight = dimensionHeight;
  }


  public DeviceMasterAntennaQueryRestriction windLoadingRear(RestrictionsString windLoadingRear) {
    
    this.windLoadingRear = windLoadingRear;
    return this;
  }

   /**
   * Get windLoadingRear
   * @return windLoadingRear
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIND_LOADING_REAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWindLoadingRear() {
    return windLoadingRear;
  }


  @JsonProperty(JSON_PROPERTY_WIND_LOADING_REAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindLoadingRear(RestrictionsString windLoadingRear) {
    this.windLoadingRear = windLoadingRear;
  }


  public DeviceMasterAntennaQueryRestriction retInputVoltage(RestrictionsString retInputVoltage) {
    
    this.retInputVoltage = retInputVoltage;
    return this;
  }

   /**
   * Get retInputVoltage
   * @return retInputVoltage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getRetInputVoltage() {
    return retInputVoltage;
  }


  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetInputVoltage(RestrictionsString retInputVoltage) {
    this.retInputVoltage = retInputVoltage;
  }


  public DeviceMasterAntennaQueryRestriction weight(RestrictionsNumeric weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(RestrictionsNumeric weight) {
    this.weight = weight;
  }


  public DeviceMasterAntennaQueryRestriction dimensionWidth(RestrictionsNumeric dimensionWidth) {
    
    this.dimensionWidth = dimensionWidth;
    return this;
  }

   /**
   * Get dimensionWidth
   * @return dimensionWidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getDimensionWidth() {
    return dimensionWidth;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionWidth(RestrictionsNumeric dimensionWidth) {
    this.dimensionWidth = dimensionWidth;
  }


  public DeviceMasterAntennaQueryRestriction windLoadingFront(RestrictionsString windLoadingFront) {
    
    this.windLoadingFront = windLoadingFront;
    return this;
  }

   /**
   * Get windLoadingFront
   * @return windLoadingFront
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIND_LOADING_FRONT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWindLoadingFront() {
    return windLoadingFront;
  }


  @JsonProperty(JSON_PROPERTY_WIND_LOADING_FRONT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindLoadingFront(RestrictionsString windLoadingFront) {
    this.windLoadingFront = windLoadingFront;
  }


  public DeviceMasterAntennaQueryRestriction elid(RestrictionsString elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(RestrictionsString elid) {
    this.elid = elid;
  }


  public DeviceMasterAntennaQueryRestriction antennaSpecRemark(RestrictionsString antennaSpecRemark) {
    
    this.antennaSpecRemark = antennaSpecRemark;
    return this;
  }

   /**
   * Get antennaSpecRemark
   * @return antennaSpecRemark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_SPEC_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaSpecRemark() {
    return antennaSpecRemark;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_SPEC_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaSpecRemark(RestrictionsString antennaSpecRemark) {
    this.antennaSpecRemark = antennaSpecRemark;
  }


  public DeviceMasterAntennaQueryRestriction antennaBand(RestrictionsString antennaBand) {
    
    this.antennaBand = antennaBand;
    return this;
  }

   /**
   * Get antennaBand
   * @return antennaBand
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_BAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaBand() {
    return antennaBand;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_BAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaBand(RestrictionsString antennaBand) {
    this.antennaBand = antennaBand;
  }


  public DeviceMasterAntennaQueryRestriction isStandard(RestrictionsBoolean isStandard) {
    
    this.isStandard = isStandard;
    return this;
  }

   /**
   * Get isStandard
   * @return isStandard
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getIsStandard() {
    return isStandard;
  }


  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStandard(RestrictionsBoolean isStandard) {
    this.isStandard = isStandard;
  }


  public DeviceMasterAntennaQueryRestriction antennaGroundingType(RestrictionsString antennaGroundingType) {
    
    this.antennaGroundingType = antennaGroundingType;
    return this;
  }

   /**
   * Get antennaGroundingType
   * @return antennaGroundingType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_GROUNDING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaGroundingType() {
    return antennaGroundingType;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_GROUNDING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaGroundingType(RestrictionsString antennaGroundingType) {
    this.antennaGroundingType = antennaGroundingType;
  }


  public DeviceMasterAntennaQueryRestriction windLoadingSide(RestrictionsString windLoadingSide) {
    
    this.windLoadingSide = windLoadingSide;
    return this;
  }

   /**
   * Get windLoadingSide
   * @return windLoadingSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIND_LOADING_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWindLoadingSide() {
    return windLoadingSide;
  }


  @JsonProperty(JSON_PROPERTY_WIND_LOADING_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindLoadingSide(RestrictionsString windLoadingSide) {
    this.windLoadingSide = windLoadingSide;
  }


  public DeviceMasterAntennaQueryRestriction antennaPortfolioStatus(RestrictionsString antennaPortfolioStatus) {
    
    this.antennaPortfolioStatus = antennaPortfolioStatus;
    return this;
  }

   /**
   * Get antennaPortfolioStatus
   * @return antennaPortfolioStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_PORTFOLIO_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getAntennaPortfolioStatus() {
    return antennaPortfolioStatus;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_PORTFOLIO_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaPortfolioStatus(RestrictionsString antennaPortfolioStatus) {
    this.antennaPortfolioStatus = antennaPortfolioStatus;
  }


  public DeviceMasterAntennaQueryRestriction retInputVoltageTo(RestrictionsNumeric retInputVoltageTo) {
    
    this.retInputVoltageTo = retInputVoltageTo;
    return this;
  }

   /**
   * Get retInputVoltageTo
   * @return retInputVoltageTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getRetInputVoltageTo() {
    return retInputVoltageTo;
  }


  @JsonProperty(JSON_PROPERTY_RET_INPUT_VOLTAGE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetInputVoltageTo(RestrictionsNumeric retInputVoltageTo) {
    this.retInputVoltageTo = retInputVoltageTo;
  }


  public DeviceMasterAntennaQueryRestriction windSpeedMax(RestrictionsString windSpeedMax) {
    
    this.windSpeedMax = windSpeedMax;
    return this;
  }

   /**
   * Get windSpeedMax
   * @return windSpeedMax
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIND_SPEED_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWindSpeedMax() {
    return windSpeedMax;
  }


  @JsonProperty(JSON_PROPERTY_WIND_SPEED_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindSpeedMax(RestrictionsString windSpeedMax) {
    this.windSpeedMax = windSpeedMax;
  }


  public DeviceMasterAntennaQueryRestriction card(RestrictionsBoolean card) {
    
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getCard() {
    return card;
  }


  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCard(RestrictionsBoolean card) {
    this.card = card;
  }


  public DeviceMasterAntennaQueryRestriction first(RestrictionsNumeric first) {
    
    this.first = first;
    return this;
  }

   /**
   * Get first
   * @return first
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getFirst() {
    return first;
  }


  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirst(RestrictionsNumeric first) {
    this.first = first;
  }


  public DeviceMasterAntennaQueryRestriction antennaMaxEffPower(RestrictionsNumeric antennaMaxEffPower) {
    
    this.antennaMaxEffPower = antennaMaxEffPower;
    return this;
  }

   /**
   * Get antennaMaxEffPower
   * @return antennaMaxEffPower
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTENNA_MAX_EFF_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getAntennaMaxEffPower() {
    return antennaMaxEffPower;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA_MAX_EFF_POWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntennaMaxEffPower(RestrictionsNumeric antennaMaxEffPower) {
    this.antennaMaxEffPower = antennaMaxEffPower;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMasterAntennaQueryRestriction deviceMasterAntennaQueryRestriction = (DeviceMasterAntennaQueryRestriction) o;
    return Objects.equals(this.remark, deviceMasterAntennaQueryRestriction.remark) &&
        Objects.equals(this.used, deviceMasterAntennaQueryRestriction.used) &&
        Objects.equals(this.explanation, deviceMasterAntennaQueryRestriction.explanation) &&
        Objects.equals(this.retInputVoltageFrom, deviceMasterAntennaQueryRestriction.retInputVoltageFrom) &&
        Objects.equals(this.type, deviceMasterAntennaQueryRestriction.type) &&
        Objects.equals(this.manufacturer, deviceMasterAntennaQueryRestriction.manufacturer) &&
        Objects.equals(this.antennaOpFrequencyBandFrom, deviceMasterAntennaQueryRestriction.antennaOpFrequencyBandFrom) &&
        Objects.equals(this.retRemark, deviceMasterAntennaQueryRestriction.retRemark) &&
        Objects.equals(this.antennaRfConnectorLocation, deviceMasterAntennaQueryRestriction.antennaRfConnectorLocation) &&
        Objects.equals(this.function, deviceMasterAntennaQueryRestriction.function) &&
        Objects.equals(this.windLoadingMax, deviceMasterAntennaQueryRestriction.windLoadingMax) &&
        Objects.equals(this.antennaOpFrequencyBandTo, deviceMasterAntennaQueryRestriction.antennaOpFrequencyBandTo) &&
        Objects.equals(this.graphic, deviceMasterAntennaQueryRestriction.graphic) &&
        Objects.equals(this.manufacturerArticleNumber, deviceMasterAntennaQueryRestriction.manufacturerArticleNumber) &&
        Objects.equals(this.dimensionDepth, deviceMasterAntennaQueryRestriction.dimensionDepth) &&
        Objects.equals(this.retProtocol, deviceMasterAntennaQueryRestriction.retProtocol) &&
        Objects.equals(this.antennaPolarisation, deviceMasterAntennaQueryRestriction.antennaPolarisation) &&
        Objects.equals(this.dimensionHeight, deviceMasterAntennaQueryRestriction.dimensionHeight) &&
        Objects.equals(this.windLoadingRear, deviceMasterAntennaQueryRestriction.windLoadingRear) &&
        Objects.equals(this.retInputVoltage, deviceMasterAntennaQueryRestriction.retInputVoltage) &&
        Objects.equals(this.weight, deviceMasterAntennaQueryRestriction.weight) &&
        Objects.equals(this.dimensionWidth, deviceMasterAntennaQueryRestriction.dimensionWidth) &&
        Objects.equals(this.windLoadingFront, deviceMasterAntennaQueryRestriction.windLoadingFront) &&
        Objects.equals(this.elid, deviceMasterAntennaQueryRestriction.elid) &&
        Objects.equals(this.antennaSpecRemark, deviceMasterAntennaQueryRestriction.antennaSpecRemark) &&
        Objects.equals(this.antennaBand, deviceMasterAntennaQueryRestriction.antennaBand) &&
        Objects.equals(this.isStandard, deviceMasterAntennaQueryRestriction.isStandard) &&
        Objects.equals(this.antennaGroundingType, deviceMasterAntennaQueryRestriction.antennaGroundingType) &&
        Objects.equals(this.windLoadingSide, deviceMasterAntennaQueryRestriction.windLoadingSide) &&
        Objects.equals(this.antennaPortfolioStatus, deviceMasterAntennaQueryRestriction.antennaPortfolioStatus) &&
        Objects.equals(this.retInputVoltageTo, deviceMasterAntennaQueryRestriction.retInputVoltageTo) &&
        Objects.equals(this.windSpeedMax, deviceMasterAntennaQueryRestriction.windSpeedMax) &&
        Objects.equals(this.card, deviceMasterAntennaQueryRestriction.card) &&
        Objects.equals(this.first, deviceMasterAntennaQueryRestriction.first) &&
        Objects.equals(this.antennaMaxEffPower, deviceMasterAntennaQueryRestriction.antennaMaxEffPower);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remark, used, explanation, retInputVoltageFrom, type, manufacturer, antennaOpFrequencyBandFrom, retRemark, antennaRfConnectorLocation, function, windLoadingMax, antennaOpFrequencyBandTo, graphic, manufacturerArticleNumber, dimensionDepth, retProtocol, antennaPolarisation, dimensionHeight, windLoadingRear, retInputVoltage, weight, dimensionWidth, windLoadingFront, elid, antennaSpecRemark, antennaBand, isStandard, antennaGroundingType, windLoadingSide, antennaPortfolioStatus, retInputVoltageTo, windSpeedMax, card, first, antennaMaxEffPower);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMasterAntennaQueryRestriction {\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    explanation: ").append(toIndentedString(explanation)).append("\n");
    sb.append("    retInputVoltageFrom: ").append(toIndentedString(retInputVoltageFrom)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    antennaOpFrequencyBandFrom: ").append(toIndentedString(antennaOpFrequencyBandFrom)).append("\n");
    sb.append("    retRemark: ").append(toIndentedString(retRemark)).append("\n");
    sb.append("    antennaRfConnectorLocation: ").append(toIndentedString(antennaRfConnectorLocation)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    windLoadingMax: ").append(toIndentedString(windLoadingMax)).append("\n");
    sb.append("    antennaOpFrequencyBandTo: ").append(toIndentedString(antennaOpFrequencyBandTo)).append("\n");
    sb.append("    graphic: ").append(toIndentedString(graphic)).append("\n");
    sb.append("    manufacturerArticleNumber: ").append(toIndentedString(manufacturerArticleNumber)).append("\n");
    sb.append("    dimensionDepth: ").append(toIndentedString(dimensionDepth)).append("\n");
    sb.append("    retProtocol: ").append(toIndentedString(retProtocol)).append("\n");
    sb.append("    antennaPolarisation: ").append(toIndentedString(antennaPolarisation)).append("\n");
    sb.append("    dimensionHeight: ").append(toIndentedString(dimensionHeight)).append("\n");
    sb.append("    windLoadingRear: ").append(toIndentedString(windLoadingRear)).append("\n");
    sb.append("    retInputVoltage: ").append(toIndentedString(retInputVoltage)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    dimensionWidth: ").append(toIndentedString(dimensionWidth)).append("\n");
    sb.append("    windLoadingFront: ").append(toIndentedString(windLoadingFront)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    antennaSpecRemark: ").append(toIndentedString(antennaSpecRemark)).append("\n");
    sb.append("    antennaBand: ").append(toIndentedString(antennaBand)).append("\n");
    sb.append("    isStandard: ").append(toIndentedString(isStandard)).append("\n");
    sb.append("    antennaGroundingType: ").append(toIndentedString(antennaGroundingType)).append("\n");
    sb.append("    windLoadingSide: ").append(toIndentedString(windLoadingSide)).append("\n");
    sb.append("    antennaPortfolioStatus: ").append(toIndentedString(antennaPortfolioStatus)).append("\n");
    sb.append("    retInputVoltageTo: ").append(toIndentedString(retInputVoltageTo)).append("\n");
    sb.append("    windSpeedMax: ").append(toIndentedString(windSpeedMax)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("    antennaMaxEffPower: ").append(toIndentedString(antennaMaxEffPower)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

