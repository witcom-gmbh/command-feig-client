/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkCustomSvidCVlanRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkCustomSvidSVlanRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkCustomSvidVlanRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortUpdateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType2LogicalPortUpdateLinkPersonRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSupportType2LogicalPortRequestData
 */
@JsonPropertyOrder({
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_NOMINAL_UTILIZATION,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_DELETED,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_C_SERVICE_SIDE,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_OVERLOAD_WARNING,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_RX_BLOCK_FLAG,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_BANDWIDTH,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_LOCK_SUB_PORT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_ID,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_CATEGORY,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_STATUS,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_TX_BLOCK_FLAG,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_TYPE,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_NO,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_ATM,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_FUNCTION,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_PORT_NAME_ORG,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_IMA,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_SIGNAL_RATE,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_ACTIVE_FROM,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_ACTIVE_UNTIL,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_C_VLAN,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_S_VLAN,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_VLAN,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PHYSICAL_PORT_DATA,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSupportType2LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateSupportType2LogicalPortRequestData {
  public static final String JSON_PROPERTY_NOMINAL_UTILIZATION = "nominalUtilization";
  private BigDecimal nominalUtilization;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_DELETED = "cDataSourceDeleted";
  private String cDataSourceDeleted;

  public static final String JSON_PROPERTY_C_SERVICE_SIDE = "cServiceSide";
  private String cServiceSide;

  public static final String JSON_PROPERTY_OVERLOAD_WARNING = "overloadWarning";
  private String overloadWarning;

  public static final String JSON_PROPERTY_RX_BLOCK_FLAG = "rxBlockFlag";
  private Boolean rxBlockFlag;

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private BigDecimal bandwidth;

  public static final String JSON_PROPERTY_LOCK_SUB_PORT = "lockSubPort";
  private Boolean lockSubPort;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_ID = "cDataSourceId";
  private String cDataSourceId;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_PORT_CATEGORY = "portCategory";
  private String portCategory;

  public static final String JSON_PROPERTY_PORT_STATUS = "portStatus";
  private String portStatus;

  public static final String JSON_PROPERTY_TX_BLOCK_FLAG = "txBlockFlag";
  private Boolean txBlockFlag;

  public static final String JSON_PROPERTY_PORT_TYPE = "portType";
  private String portType;

  public static final String JSON_PROPERTY_PORT_NO = "portNo";
  private BigDecimal portNo;

  public static final String JSON_PROPERTY_C_DATA_SOURCE = "cDataSource";
  private String cDataSource;

  public static final String JSON_PROPERTY_ATM = "atm";
  private Boolean atm;

  public static final String JSON_PROPERTY_PORT_FUNCTION = "portFunction";
  private String portFunction;

  public static final String JSON_PROPERTY_PORT_NAME_ORG = "portNameOrg";
  private String portNameOrg;

  public static final String JSON_PROPERTY_IMA = "ima";
  private Boolean ima;

  public static final String JSON_PROPERTY_SIGNAL_RATE = "signalRate";
  private String signalRate;

  public static final String JSON_PROPERTY_ACTIVE_FROM = "activeFrom";
  private DateTime activeFrom;

  public static final String JSON_PROPERTY_ACTIVE_UNTIL = "activeUntil";
  private DateTime activeUntil;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSupportType2LogicalPortCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC = "createLinkCustomIpaccessSvc";
  private UpdateSupportType2LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_C_VLAN = "createLinkCustomSvidCVlan";
  private UpdateSupportType2LogicalPortCreateLinkCustomSvidCVlanRequestData createLinkCustomSvidCVlan;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_S_VLAN = "createLinkCustomSvidSVlan";
  private UpdateSupportType2LogicalPortCreateLinkCustomSvidSVlanRequestData createLinkCustomSvidSVlan;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_VLAN = "createLinkCustomSvidVlan";
  private UpdateSupportType2LogicalPortCreateLinkCustomSvidVlanRequestData createLinkCustomSvidVlan;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT = "createLinkCustomTcoInterconnect";
  private UpdateSupportType2LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT = "createLinkLogicalPort";
  private List<UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSupportType2LogicalPortCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA = "createLinkPhysicalPortData";
  private List<UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSupportType2LogicalPortDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT = "deleteLinkLogicalPort";
  private List<UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSupportType2LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_PHYSICAL_PORT_DATA = "deleteLinkPhysicalPortData";
  private List<UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData> deleteLinkPhysicalPortData;

  public static final String JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS = "deleteLinkSubdividedPorts";
  private List<UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts;

  public static final String JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT = "updateLinkCustomTcoInterconnect";
  private UpdateSupportType2LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSupportType2LogicalPortUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSupportType2LogicalPortRequestData() {
  }

  public UpdateSupportType2LogicalPortRequestData nominalUtilization(BigDecimal nominalUtilization) {
    
    this.nominalUtilization = nominalUtilization;
    return this;
  }

   /**
   * Get nominalUtilization
   * @return nominalUtilization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalUtilization() {
    return nominalUtilization;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalUtilization(BigDecimal nominalUtilization) {
    this.nominalUtilization = nominalUtilization;
  }


  public UpdateSupportType2LogicalPortRequestData cDataSourceDeleted(String cDataSourceDeleted) {
    
    this.cDataSourceDeleted = cDataSourceDeleted;
    return this;
  }

   /**
   * Get cDataSourceDeleted
   * @return cDataSourceDeleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceDeleted() {
    return cDataSourceDeleted;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceDeleted(String cDataSourceDeleted) {
    this.cDataSourceDeleted = cDataSourceDeleted;
  }


  public UpdateSupportType2LogicalPortRequestData cServiceSide(String cServiceSide) {
    
    this.cServiceSide = cServiceSide;
    return this;
  }

   /**
   * Get cServiceSide
   * @return cServiceSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcServiceSide() {
    return cServiceSide;
  }


  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcServiceSide(String cServiceSide) {
    this.cServiceSide = cServiceSide;
  }


  public UpdateSupportType2LogicalPortRequestData overloadWarning(String overloadWarning) {
    
    this.overloadWarning = overloadWarning;
    return this;
  }

   /**
   * Get overloadWarning
   * @return overloadWarning
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverloadWarning() {
    return overloadWarning;
  }


  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverloadWarning(String overloadWarning) {
    this.overloadWarning = overloadWarning;
  }


  public UpdateSupportType2LogicalPortRequestData rxBlockFlag(Boolean rxBlockFlag) {
    
    this.rxBlockFlag = rxBlockFlag;
    return this;
  }

   /**
   * Get rxBlockFlag
   * @return rxBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRxBlockFlag() {
    return rxBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRxBlockFlag(Boolean rxBlockFlag) {
    this.rxBlockFlag = rxBlockFlag;
  }


  public UpdateSupportType2LogicalPortRequestData bandwidth(BigDecimal bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }


  public UpdateSupportType2LogicalPortRequestData lockSubPort(Boolean lockSubPort) {
    
    this.lockSubPort = lockSubPort;
    return this;
  }

   /**
   * Get lockSubPort
   * @return lockSubPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCK_SUB_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLockSubPort() {
    return lockSubPort;
  }


  @JsonProperty(JSON_PROPERTY_LOCK_SUB_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockSubPort(Boolean lockSubPort) {
    this.lockSubPort = lockSubPort;
  }


  public UpdateSupportType2LogicalPortRequestData cDataSourceId(String cDataSourceId) {
    
    this.cDataSourceId = cDataSourceId;
    return this;
  }

   /**
   * Get cDataSourceId
   * @return cDataSourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceId() {
    return cDataSourceId;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceId(String cDataSourceId) {
    this.cDataSourceId = cDataSourceId;
  }


  public UpdateSupportType2LogicalPortRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSupportType2LogicalPortRequestData portCategory(String portCategory) {
    
    this.portCategory = portCategory;
    return this;
  }

   /**
   * Get portCategory
   * @return portCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortCategory() {
    return portCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortCategory(String portCategory) {
    this.portCategory = portCategory;
  }


  public UpdateSupportType2LogicalPortRequestData portStatus(String portStatus) {
    
    this.portStatus = portStatus;
    return this;
  }

   /**
   * Get portStatus
   * @return portStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortStatus() {
    return portStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortStatus(String portStatus) {
    this.portStatus = portStatus;
  }


  public UpdateSupportType2LogicalPortRequestData txBlockFlag(Boolean txBlockFlag) {
    
    this.txBlockFlag = txBlockFlag;
    return this;
  }

   /**
   * Get txBlockFlag
   * @return txBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTxBlockFlag() {
    return txBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxBlockFlag(Boolean txBlockFlag) {
    this.txBlockFlag = txBlockFlag;
  }


  public UpdateSupportType2LogicalPortRequestData portType(String portType) {
    
    this.portType = portType;
    return this;
  }

   /**
   * Get portType
   * @return portType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortType() {
    return portType;
  }


  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortType(String portType) {
    this.portType = portType;
  }


  public UpdateSupportType2LogicalPortRequestData portNo(BigDecimal portNo) {
    
    this.portNo = portNo;
    return this;
  }

   /**
   * Get portNo
   * @return portNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPortNo() {
    return portNo;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNo(BigDecimal portNo) {
    this.portNo = portNo;
  }


  public UpdateSupportType2LogicalPortRequestData cDataSource(String cDataSource) {
    
    this.cDataSource = cDataSource;
    return this;
  }

   /**
   * Get cDataSource
   * @return cDataSource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSource() {
    return cDataSource;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSource(String cDataSource) {
    this.cDataSource = cDataSource;
  }


  public UpdateSupportType2LogicalPortRequestData atm(Boolean atm) {
    
    this.atm = atm;
    return this;
  }

   /**
   * Get atm
   * @return atm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAtm() {
    return atm;
  }


  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtm(Boolean atm) {
    this.atm = atm;
  }


  public UpdateSupportType2LogicalPortRequestData portFunction(String portFunction) {
    
    this.portFunction = portFunction;
    return this;
  }

   /**
   * Get portFunction
   * @return portFunction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortFunction() {
    return portFunction;
  }


  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortFunction(String portFunction) {
    this.portFunction = portFunction;
  }


  public UpdateSupportType2LogicalPortRequestData portNameOrg(String portNameOrg) {
    
    this.portNameOrg = portNameOrg;
    return this;
  }

   /**
   * Get portNameOrg
   * @return portNameOrg
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortNameOrg() {
    return portNameOrg;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNameOrg(String portNameOrg) {
    this.portNameOrg = portNameOrg;
  }


  public UpdateSupportType2LogicalPortRequestData ima(Boolean ima) {
    
    this.ima = ima;
    return this;
  }

   /**
   * Get ima
   * @return ima
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIma() {
    return ima;
  }


  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIma(Boolean ima) {
    this.ima = ima;
  }


  public UpdateSupportType2LogicalPortRequestData signalRate(String signalRate) {
    
    this.signalRate = signalRate;
    return this;
  }

   /**
   * Get signalRate
   * @return signalRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignalRate() {
    return signalRate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignalRate(String signalRate) {
    this.signalRate = signalRate;
  }


  public UpdateSupportType2LogicalPortRequestData activeFrom(DateTime activeFrom) {
    
    this.activeFrom = activeFrom;
    return this;
  }

   /**
   * Get activeFrom
   * @return activeFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveFrom() {
    return activeFrom;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFrom(DateTime activeFrom) {
    this.activeFrom = activeFrom;
  }


  public UpdateSupportType2LogicalPortRequestData activeUntil(DateTime activeUntil) {
    
    this.activeUntil = activeUntil;
    return this;
  }

   /**
   * Get activeUntil
   * @return activeUntil
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveUntil() {
    return activeUntil;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveUntil(DateTime activeUntil) {
    this.activeUntil = activeUntil;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkContract(List<UpdateSupportType2LogicalPortCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkContractItem(UpdateSupportType2LogicalPortCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSupportType2LogicalPortCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkCustomIpaccessSvc(UpdateSupportType2LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
    return this;
  }

   /**
   * Get createLinkCustomIpaccessSvc
   * @return createLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortCreateLinkCustomIpaccessSvcRequestData getCreateLinkCustomIpaccessSvc() {
    return createLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomIpaccessSvc(UpdateSupportType2LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkCustomSvidCVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidCVlanRequestData createLinkCustomSvidCVlan) {
    
    this.createLinkCustomSvidCVlan = createLinkCustomSvidCVlan;
    return this;
  }

   /**
   * Get createLinkCustomSvidCVlan
   * @return createLinkCustomSvidCVlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_C_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortCreateLinkCustomSvidCVlanRequestData getCreateLinkCustomSvidCVlan() {
    return createLinkCustomSvidCVlan;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_C_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomSvidCVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidCVlanRequestData createLinkCustomSvidCVlan) {
    this.createLinkCustomSvidCVlan = createLinkCustomSvidCVlan;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkCustomSvidSVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidSVlanRequestData createLinkCustomSvidSVlan) {
    
    this.createLinkCustomSvidSVlan = createLinkCustomSvidSVlan;
    return this;
  }

   /**
   * Get createLinkCustomSvidSVlan
   * @return createLinkCustomSvidSVlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_S_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortCreateLinkCustomSvidSVlanRequestData getCreateLinkCustomSvidSVlan() {
    return createLinkCustomSvidSVlan;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_S_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomSvidSVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidSVlanRequestData createLinkCustomSvidSVlan) {
    this.createLinkCustomSvidSVlan = createLinkCustomSvidSVlan;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkCustomSvidVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidVlanRequestData createLinkCustomSvidVlan) {
    
    this.createLinkCustomSvidVlan = createLinkCustomSvidVlan;
    return this;
  }

   /**
   * Get createLinkCustomSvidVlan
   * @return createLinkCustomSvidVlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortCreateLinkCustomSvidVlanRequestData getCreateLinkCustomSvidVlan() {
    return createLinkCustomSvidVlan;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomSvidVlan(UpdateSupportType2LogicalPortCreateLinkCustomSvidVlanRequestData createLinkCustomSvidVlan) {
    this.createLinkCustomSvidVlan = createLinkCustomSvidVlan;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkCustomTcoInterconnect(UpdateSupportType2LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get createLinkCustomTcoInterconnect
   * @return createLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortCreateLinkCustomTcoInterconnectRequestData getCreateLinkCustomTcoInterconnect() {
    return createLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomTcoInterconnect(UpdateSupportType2LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkFrameContract(List<UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkFrameContractItem(UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSupportType2LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkLogicalPort(List<UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort) {
    
    this.createLinkLogicalPort = createLinkLogicalPort;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkLogicalPortItem(UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData createLinkLogicalPortItem) {
    if (this.createLinkLogicalPort == null) {
      this.createLinkLogicalPort = new ArrayList<>();
    }
    this.createLinkLogicalPort.add(createLinkLogicalPortItem);
    return this;
  }

   /**
   * Get createLinkLogicalPort
   * @return createLinkLogicalPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData> getCreateLinkLogicalPort() {
    return createLinkLogicalPort;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkLogicalPort(List<UpdateSupportType2LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort) {
    this.createLinkLogicalPort = createLinkLogicalPort;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkMaintenanceContract(List<UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkMaintenanceContractItem(UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateSupportType2LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkOrganization(List<UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkOrganizationItem(UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSupportType2LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkPerson(List<UpdateSupportType2LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkPersonItem(UpdateSupportType2LogicalPortCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSupportType2LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkPersonGroup(List<UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkPersonGroupItem(UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSupportType2LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSupportType2LogicalPortRequestData createLinkPhysicalPortData(List<UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData) {
    
    this.createLinkPhysicalPortData = createLinkPhysicalPortData;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addCreateLinkPhysicalPortDataItem(UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData createLinkPhysicalPortDataItem) {
    if (this.createLinkPhysicalPortData == null) {
      this.createLinkPhysicalPortData = new ArrayList<>();
    }
    this.createLinkPhysicalPortData.add(createLinkPhysicalPortDataItem);
    return this;
  }

   /**
   * Get createLinkPhysicalPortData
   * @return createLinkPhysicalPortData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData> getCreateLinkPhysicalPortData() {
    return createLinkPhysicalPortData;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPhysicalPortData(List<UpdateSupportType2LogicalPortCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData) {
    this.createLinkPhysicalPortData = createLinkPhysicalPortData;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkContract(List<UpdateSupportType2LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkContractItem(UpdateSupportType2LogicalPortDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSupportType2LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkFrameContract(List<UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkFrameContractItem(UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSupportType2LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkLogicalPort(List<UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort) {
    
    this.deleteLinkLogicalPort = deleteLinkLogicalPort;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkLogicalPortItem(UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData deleteLinkLogicalPortItem) {
    if (this.deleteLinkLogicalPort == null) {
      this.deleteLinkLogicalPort = new ArrayList<>();
    }
    this.deleteLinkLogicalPort.add(deleteLinkLogicalPortItem);
    return this;
  }

   /**
   * Get deleteLinkLogicalPort
   * @return deleteLinkLogicalPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData> getDeleteLinkLogicalPort() {
    return deleteLinkLogicalPort;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkLogicalPort(List<UpdateSupportType2LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort) {
    this.deleteLinkLogicalPort = deleteLinkLogicalPort;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkMaintenanceContract(List<UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkMaintenanceContractItem(UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateSupportType2LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkOrganization(List<UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkOrganizationItem(UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSupportType2LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkPerson(List<UpdateSupportType2LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkPersonItem(UpdateSupportType2LogicalPortDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSupportType2LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkPersonGroup(List<UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkPersonGroupItem(UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSupportType2LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkPhysicalPortData(List<UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData> deleteLinkPhysicalPortData) {
    
    this.deleteLinkPhysicalPortData = deleteLinkPhysicalPortData;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkPhysicalPortDataItem(UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData deleteLinkPhysicalPortDataItem) {
    if (this.deleteLinkPhysicalPortData == null) {
      this.deleteLinkPhysicalPortData = new ArrayList<>();
    }
    this.deleteLinkPhysicalPortData.add(deleteLinkPhysicalPortDataItem);
    return this;
  }

   /**
   * Get deleteLinkPhysicalPortData
   * @return deleteLinkPhysicalPortData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData> getDeleteLinkPhysicalPortData() {
    return deleteLinkPhysicalPortData;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPhysicalPortData(List<UpdateSupportType2LogicalPortDeleteLinkPhysicalPortDataRequestData> deleteLinkPhysicalPortData) {
    this.deleteLinkPhysicalPortData = deleteLinkPhysicalPortData;
  }


  public UpdateSupportType2LogicalPortRequestData deleteLinkSubdividedPorts(List<UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addDeleteLinkSubdividedPortsItem(UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData deleteLinkSubdividedPortsItem) {
    if (this.deleteLinkSubdividedPorts == null) {
      this.deleteLinkSubdividedPorts = new ArrayList<>();
    }
    this.deleteLinkSubdividedPorts.add(deleteLinkSubdividedPortsItem);
    return this;
  }

   /**
   * Get deleteLinkSubdividedPorts
   * @return deleteLinkSubdividedPorts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData> getDeleteLinkSubdividedPorts() {
    return deleteLinkSubdividedPorts;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkSubdividedPorts(List<UpdateSupportType2LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
  }


  public UpdateSupportType2LogicalPortRequestData updateLinkCustomTcoInterconnect(UpdateSupportType2LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get updateLinkCustomTcoInterconnect
   * @return updateLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType2LogicalPortUpdateLinkCustomTcoInterconnectRequestData getUpdateLinkCustomTcoInterconnect() {
    return updateLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkCustomTcoInterconnect(UpdateSupportType2LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
  }


  public UpdateSupportType2LogicalPortRequestData updateLinkOrganization(List<UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addUpdateLinkOrganizationItem(UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSupportType2LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSupportType2LogicalPortRequestData updateLinkPerson(List<UpdateSupportType2LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addUpdateLinkPersonItem(UpdateSupportType2LogicalPortUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSupportType2LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSupportType2LogicalPortRequestData updateLinkPersonGroup(List<UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSupportType2LogicalPortRequestData addUpdateLinkPersonGroupItem(UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSupportType2LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSupportType2LogicalPortRequestData updateSupportType2LogicalPortRequestData = (UpdateSupportType2LogicalPortRequestData) o;
    return Objects.equals(this.nominalUtilization, updateSupportType2LogicalPortRequestData.nominalUtilization) &&
        Objects.equals(this.cDataSourceDeleted, updateSupportType2LogicalPortRequestData.cDataSourceDeleted) &&
        Objects.equals(this.cServiceSide, updateSupportType2LogicalPortRequestData.cServiceSide) &&
        Objects.equals(this.overloadWarning, updateSupportType2LogicalPortRequestData.overloadWarning) &&
        Objects.equals(this.rxBlockFlag, updateSupportType2LogicalPortRequestData.rxBlockFlag) &&
        Objects.equals(this.bandwidth, updateSupportType2LogicalPortRequestData.bandwidth) &&
        Objects.equals(this.lockSubPort, updateSupportType2LogicalPortRequestData.lockSubPort) &&
        Objects.equals(this.cDataSourceId, updateSupportType2LogicalPortRequestData.cDataSourceId) &&
        Objects.equals(this.contextId, updateSupportType2LogicalPortRequestData.contextId) &&
        Objects.equals(this.portCategory, updateSupportType2LogicalPortRequestData.portCategory) &&
        Objects.equals(this.portStatus, updateSupportType2LogicalPortRequestData.portStatus) &&
        Objects.equals(this.txBlockFlag, updateSupportType2LogicalPortRequestData.txBlockFlag) &&
        Objects.equals(this.portType, updateSupportType2LogicalPortRequestData.portType) &&
        Objects.equals(this.portNo, updateSupportType2LogicalPortRequestData.portNo) &&
        Objects.equals(this.cDataSource, updateSupportType2LogicalPortRequestData.cDataSource) &&
        Objects.equals(this.atm, updateSupportType2LogicalPortRequestData.atm) &&
        Objects.equals(this.portFunction, updateSupportType2LogicalPortRequestData.portFunction) &&
        Objects.equals(this.portNameOrg, updateSupportType2LogicalPortRequestData.portNameOrg) &&
        Objects.equals(this.ima, updateSupportType2LogicalPortRequestData.ima) &&
        Objects.equals(this.signalRate, updateSupportType2LogicalPortRequestData.signalRate) &&
        Objects.equals(this.activeFrom, updateSupportType2LogicalPortRequestData.activeFrom) &&
        Objects.equals(this.activeUntil, updateSupportType2LogicalPortRequestData.activeUntil) &&
        Objects.equals(this.createLinkContract, updateSupportType2LogicalPortRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomIpaccessSvc, updateSupportType2LogicalPortRequestData.createLinkCustomIpaccessSvc) &&
        Objects.equals(this.createLinkCustomSvidCVlan, updateSupportType2LogicalPortRequestData.createLinkCustomSvidCVlan) &&
        Objects.equals(this.createLinkCustomSvidSVlan, updateSupportType2LogicalPortRequestData.createLinkCustomSvidSVlan) &&
        Objects.equals(this.createLinkCustomSvidVlan, updateSupportType2LogicalPortRequestData.createLinkCustomSvidVlan) &&
        Objects.equals(this.createLinkCustomTcoInterconnect, updateSupportType2LogicalPortRequestData.createLinkCustomTcoInterconnect) &&
        Objects.equals(this.createLinkFrameContract, updateSupportType2LogicalPortRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkLogicalPort, updateSupportType2LogicalPortRequestData.createLinkLogicalPort) &&
        Objects.equals(this.createLinkMaintenanceContract, updateSupportType2LogicalPortRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateSupportType2LogicalPortRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSupportType2LogicalPortRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSupportType2LogicalPortRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkPhysicalPortData, updateSupportType2LogicalPortRequestData.createLinkPhysicalPortData) &&
        Objects.equals(this.deleteLinkContract, updateSupportType2LogicalPortRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSupportType2LogicalPortRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkLogicalPort, updateSupportType2LogicalPortRequestData.deleteLinkLogicalPort) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateSupportType2LogicalPortRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSupportType2LogicalPortRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSupportType2LogicalPortRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSupportType2LogicalPortRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkPhysicalPortData, updateSupportType2LogicalPortRequestData.deleteLinkPhysicalPortData) &&
        Objects.equals(this.deleteLinkSubdividedPorts, updateSupportType2LogicalPortRequestData.deleteLinkSubdividedPorts) &&
        Objects.equals(this.updateLinkCustomTcoInterconnect, updateSupportType2LogicalPortRequestData.updateLinkCustomTcoInterconnect) &&
        Objects.equals(this.updateLinkOrganization, updateSupportType2LogicalPortRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSupportType2LogicalPortRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSupportType2LogicalPortRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nominalUtilization, cDataSourceDeleted, cServiceSide, overloadWarning, rxBlockFlag, bandwidth, lockSubPort, cDataSourceId, contextId, portCategory, portStatus, txBlockFlag, portType, portNo, cDataSource, atm, portFunction, portNameOrg, ima, signalRate, activeFrom, activeUntil, createLinkContract, createLinkCustomIpaccessSvc, createLinkCustomSvidCVlan, createLinkCustomSvidSVlan, createLinkCustomSvidVlan, createLinkCustomTcoInterconnect, createLinkFrameContract, createLinkLogicalPort, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkPhysicalPortData, deleteLinkContract, deleteLinkFrameContract, deleteLinkLogicalPort, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkPhysicalPortData, deleteLinkSubdividedPorts, updateLinkCustomTcoInterconnect, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSupportType2LogicalPortRequestData {\n");
    sb.append("    nominalUtilization: ").append(toIndentedString(nominalUtilization)).append("\n");
    sb.append("    cDataSourceDeleted: ").append(toIndentedString(cDataSourceDeleted)).append("\n");
    sb.append("    cServiceSide: ").append(toIndentedString(cServiceSide)).append("\n");
    sb.append("    overloadWarning: ").append(toIndentedString(overloadWarning)).append("\n");
    sb.append("    rxBlockFlag: ").append(toIndentedString(rxBlockFlag)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    lockSubPort: ").append(toIndentedString(lockSubPort)).append("\n");
    sb.append("    cDataSourceId: ").append(toIndentedString(cDataSourceId)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    portCategory: ").append(toIndentedString(portCategory)).append("\n");
    sb.append("    portStatus: ").append(toIndentedString(portStatus)).append("\n");
    sb.append("    txBlockFlag: ").append(toIndentedString(txBlockFlag)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    portNo: ").append(toIndentedString(portNo)).append("\n");
    sb.append("    cDataSource: ").append(toIndentedString(cDataSource)).append("\n");
    sb.append("    atm: ").append(toIndentedString(atm)).append("\n");
    sb.append("    portFunction: ").append(toIndentedString(portFunction)).append("\n");
    sb.append("    portNameOrg: ").append(toIndentedString(portNameOrg)).append("\n");
    sb.append("    ima: ").append(toIndentedString(ima)).append("\n");
    sb.append("    signalRate: ").append(toIndentedString(signalRate)).append("\n");
    sb.append("    activeFrom: ").append(toIndentedString(activeFrom)).append("\n");
    sb.append("    activeUntil: ").append(toIndentedString(activeUntil)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomIpaccessSvc: ").append(toIndentedString(createLinkCustomIpaccessSvc)).append("\n");
    sb.append("    createLinkCustomSvidCVlan: ").append(toIndentedString(createLinkCustomSvidCVlan)).append("\n");
    sb.append("    createLinkCustomSvidSVlan: ").append(toIndentedString(createLinkCustomSvidSVlan)).append("\n");
    sb.append("    createLinkCustomSvidVlan: ").append(toIndentedString(createLinkCustomSvidVlan)).append("\n");
    sb.append("    createLinkCustomTcoInterconnect: ").append(toIndentedString(createLinkCustomTcoInterconnect)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkLogicalPort: ").append(toIndentedString(createLinkLogicalPort)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkPhysicalPortData: ").append(toIndentedString(createLinkPhysicalPortData)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkLogicalPort: ").append(toIndentedString(deleteLinkLogicalPort)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkPhysicalPortData: ").append(toIndentedString(deleteLinkPhysicalPortData)).append("\n");
    sb.append("    deleteLinkSubdividedPorts: ").append(toIndentedString(deleteLinkSubdividedPorts)).append("\n");
    sb.append("    updateLinkCustomTcoInterconnect: ").append(toIndentedString(updateLinkCustomTcoInterconnect)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

