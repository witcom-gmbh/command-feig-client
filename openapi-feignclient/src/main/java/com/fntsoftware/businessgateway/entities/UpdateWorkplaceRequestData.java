/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkMaintenanceWindowRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkTerminalRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceCreateLinkVirtualClientRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkTerminalRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceDeleteLinkVirtualClientRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateWorkplaceUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateWorkplaceRequestData
 */
@JsonPropertyOrder({
  UpdateWorkplaceRequestData.JSON_PROPERTY_NAME,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateWorkplaceRequestData.JSON_PROPERTY_REMARK,
  UpdateWorkplaceRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateWorkplaceRequestData.JSON_PROPERTY_ID,
  UpdateWorkplaceRequestData.JSON_PROPERTY_TYPE,
  UpdateWorkplaceRequestData.JSON_PROPERTY_WORKPLACE_NO,
  UpdateWorkplaceRequestData.JSON_PROPERTY_WORKPLACE_STATUS,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_WINDOW,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_TERMINAL,
  UpdateWorkplaceRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_CLIENT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_WINDOW,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_TERMINAL,
  UpdateWorkplaceRequestData.JSON_PROPERTY_DELETE_LINK_VIRTUAL_CLIENT,
  UpdateWorkplaceRequestData.JSON_PROPERTY_UPDATE_LINK_MAINTENANCE_WINDOW,
  UpdateWorkplaceRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateWorkplaceRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateWorkplaceRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateWorkplaceRequestData {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_WORKPLACE_NO = "workplaceNo";
  private String workplaceNo;

  public static final String JSON_PROPERTY_WORKPLACE_STATUS = "workplaceStatus";
  private String workplaceStatus;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateWorkplaceCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateWorkplaceCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateWorkplaceCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_WINDOW = "createLinkMaintenanceWindow";
  private List<UpdateWorkplaceCreateLinkMaintenanceWindowRequestData> createLinkMaintenanceWindow;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateWorkplaceCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateWorkplaceCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateWorkplaceCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_TERMINAL = "createLinkTerminal";
  private List<UpdateWorkplaceCreateLinkTerminalRequestData> createLinkTerminal;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_CLIENT = "createLinkVirtualClient";
  private List<UpdateWorkplaceCreateLinkVirtualClientRequestData> createLinkVirtualClient;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateWorkplaceDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateWorkplaceDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateWorkplaceDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_WINDOW = "deleteLinkMaintenanceWindow";
  private List<UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData> deleteLinkMaintenanceWindow;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateWorkplaceDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateWorkplaceDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateWorkplaceDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_TERMINAL = "deleteLinkTerminal";
  private List<UpdateWorkplaceDeleteLinkTerminalRequestData> deleteLinkTerminal;

  public static final String JSON_PROPERTY_DELETE_LINK_VIRTUAL_CLIENT = "deleteLinkVirtualClient";
  private List<UpdateWorkplaceDeleteLinkVirtualClientRequestData> deleteLinkVirtualClient;

  public static final String JSON_PROPERTY_UPDATE_LINK_MAINTENANCE_WINDOW = "updateLinkMaintenanceWindow";
  private List<UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData> updateLinkMaintenanceWindow;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateWorkplaceUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateWorkplaceUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateWorkplaceUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateWorkplaceRequestData() {
  }

  public UpdateWorkplaceRequestData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateWorkplaceRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateWorkplaceRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public UpdateWorkplaceRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateWorkplaceRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateWorkplaceRequestData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public UpdateWorkplaceRequestData workplaceNo(String workplaceNo) {
    
    this.workplaceNo = workplaceNo;
    return this;
  }

   /**
   * Get workplaceNo
   * @return workplaceNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKPLACE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkplaceNo() {
    return workplaceNo;
  }


  @JsonProperty(JSON_PROPERTY_WORKPLACE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkplaceNo(String workplaceNo) {
    this.workplaceNo = workplaceNo;
  }


  public UpdateWorkplaceRequestData workplaceStatus(String workplaceStatus) {
    
    this.workplaceStatus = workplaceStatus;
    return this;
  }

   /**
   * Get workplaceStatus
   * @return workplaceStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKPLACE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkplaceStatus() {
    return workplaceStatus;
  }


  @JsonProperty(JSON_PROPERTY_WORKPLACE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkplaceStatus(String workplaceStatus) {
    this.workplaceStatus = workplaceStatus;
  }


  public UpdateWorkplaceRequestData createLinkContract(List<UpdateWorkplaceCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkContractItem(UpdateWorkplaceCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateWorkplaceCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateWorkplaceRequestData createLinkFrameContract(List<UpdateWorkplaceCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkFrameContractItem(UpdateWorkplaceCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateWorkplaceCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateWorkplaceRequestData createLinkMaintenanceContract(List<UpdateWorkplaceCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkMaintenanceContractItem(UpdateWorkplaceCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateWorkplaceCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateWorkplaceRequestData createLinkMaintenanceWindow(List<UpdateWorkplaceCreateLinkMaintenanceWindowRequestData> createLinkMaintenanceWindow) {
    
    this.createLinkMaintenanceWindow = createLinkMaintenanceWindow;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkMaintenanceWindowItem(UpdateWorkplaceCreateLinkMaintenanceWindowRequestData createLinkMaintenanceWindowItem) {
    if (this.createLinkMaintenanceWindow == null) {
      this.createLinkMaintenanceWindow = new ArrayList<>();
    }
    this.createLinkMaintenanceWindow.add(createLinkMaintenanceWindowItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceWindow
   * @return createLinkMaintenanceWindow
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkMaintenanceWindowRequestData> getCreateLinkMaintenanceWindow() {
    return createLinkMaintenanceWindow;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceWindow(List<UpdateWorkplaceCreateLinkMaintenanceWindowRequestData> createLinkMaintenanceWindow) {
    this.createLinkMaintenanceWindow = createLinkMaintenanceWindow;
  }


  public UpdateWorkplaceRequestData createLinkOrganization(List<UpdateWorkplaceCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkOrganizationItem(UpdateWorkplaceCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateWorkplaceCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateWorkplaceRequestData createLinkPerson(List<UpdateWorkplaceCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkPersonItem(UpdateWorkplaceCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateWorkplaceCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateWorkplaceRequestData createLinkPersonGroup(List<UpdateWorkplaceCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkPersonGroupItem(UpdateWorkplaceCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateWorkplaceCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateWorkplaceRequestData createLinkTerminal(List<UpdateWorkplaceCreateLinkTerminalRequestData> createLinkTerminal) {
    
    this.createLinkTerminal = createLinkTerminal;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkTerminalItem(UpdateWorkplaceCreateLinkTerminalRequestData createLinkTerminalItem) {
    if (this.createLinkTerminal == null) {
      this.createLinkTerminal = new ArrayList<>();
    }
    this.createLinkTerminal.add(createLinkTerminalItem);
    return this;
  }

   /**
   * Get createLinkTerminal
   * @return createLinkTerminal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkTerminalRequestData> getCreateLinkTerminal() {
    return createLinkTerminal;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkTerminal(List<UpdateWorkplaceCreateLinkTerminalRequestData> createLinkTerminal) {
    this.createLinkTerminal = createLinkTerminal;
  }


  public UpdateWorkplaceRequestData createLinkVirtualClient(List<UpdateWorkplaceCreateLinkVirtualClientRequestData> createLinkVirtualClient) {
    
    this.createLinkVirtualClient = createLinkVirtualClient;
    return this;
  }

  public UpdateWorkplaceRequestData addCreateLinkVirtualClientItem(UpdateWorkplaceCreateLinkVirtualClientRequestData createLinkVirtualClientItem) {
    if (this.createLinkVirtualClient == null) {
      this.createLinkVirtualClient = new ArrayList<>();
    }
    this.createLinkVirtualClient.add(createLinkVirtualClientItem);
    return this;
  }

   /**
   * Get createLinkVirtualClient
   * @return createLinkVirtualClient
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceCreateLinkVirtualClientRequestData> getCreateLinkVirtualClient() {
    return createLinkVirtualClient;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualClient(List<UpdateWorkplaceCreateLinkVirtualClientRequestData> createLinkVirtualClient) {
    this.createLinkVirtualClient = createLinkVirtualClient;
  }


  public UpdateWorkplaceRequestData deleteLinkContract(List<UpdateWorkplaceDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkContractItem(UpdateWorkplaceDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateWorkplaceDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateWorkplaceRequestData deleteLinkFrameContract(List<UpdateWorkplaceDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkFrameContractItem(UpdateWorkplaceDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateWorkplaceDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateWorkplaceRequestData deleteLinkMaintenanceContract(List<UpdateWorkplaceDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkMaintenanceContractItem(UpdateWorkplaceDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateWorkplaceDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateWorkplaceRequestData deleteLinkMaintenanceWindow(List<UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData> deleteLinkMaintenanceWindow) {
    
    this.deleteLinkMaintenanceWindow = deleteLinkMaintenanceWindow;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkMaintenanceWindowItem(UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData deleteLinkMaintenanceWindowItem) {
    if (this.deleteLinkMaintenanceWindow == null) {
      this.deleteLinkMaintenanceWindow = new ArrayList<>();
    }
    this.deleteLinkMaintenanceWindow.add(deleteLinkMaintenanceWindowItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceWindow
   * @return deleteLinkMaintenanceWindow
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData> getDeleteLinkMaintenanceWindow() {
    return deleteLinkMaintenanceWindow;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceWindow(List<UpdateWorkplaceDeleteLinkMaintenanceWindowRequestData> deleteLinkMaintenanceWindow) {
    this.deleteLinkMaintenanceWindow = deleteLinkMaintenanceWindow;
  }


  public UpdateWorkplaceRequestData deleteLinkOrganization(List<UpdateWorkplaceDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkOrganizationItem(UpdateWorkplaceDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateWorkplaceDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateWorkplaceRequestData deleteLinkPerson(List<UpdateWorkplaceDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkPersonItem(UpdateWorkplaceDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateWorkplaceDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateWorkplaceRequestData deleteLinkPersonGroup(List<UpdateWorkplaceDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkPersonGroupItem(UpdateWorkplaceDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateWorkplaceDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateWorkplaceRequestData deleteLinkTerminal(List<UpdateWorkplaceDeleteLinkTerminalRequestData> deleteLinkTerminal) {
    
    this.deleteLinkTerminal = deleteLinkTerminal;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkTerminalItem(UpdateWorkplaceDeleteLinkTerminalRequestData deleteLinkTerminalItem) {
    if (this.deleteLinkTerminal == null) {
      this.deleteLinkTerminal = new ArrayList<>();
    }
    this.deleteLinkTerminal.add(deleteLinkTerminalItem);
    return this;
  }

   /**
   * Get deleteLinkTerminal
   * @return deleteLinkTerminal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkTerminalRequestData> getDeleteLinkTerminal() {
    return deleteLinkTerminal;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_TERMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkTerminal(List<UpdateWorkplaceDeleteLinkTerminalRequestData> deleteLinkTerminal) {
    this.deleteLinkTerminal = deleteLinkTerminal;
  }


  public UpdateWorkplaceRequestData deleteLinkVirtualClient(List<UpdateWorkplaceDeleteLinkVirtualClientRequestData> deleteLinkVirtualClient) {
    
    this.deleteLinkVirtualClient = deleteLinkVirtualClient;
    return this;
  }

  public UpdateWorkplaceRequestData addDeleteLinkVirtualClientItem(UpdateWorkplaceDeleteLinkVirtualClientRequestData deleteLinkVirtualClientItem) {
    if (this.deleteLinkVirtualClient == null) {
      this.deleteLinkVirtualClient = new ArrayList<>();
    }
    this.deleteLinkVirtualClient.add(deleteLinkVirtualClientItem);
    return this;
  }

   /**
   * Get deleteLinkVirtualClient
   * @return deleteLinkVirtualClient
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceDeleteLinkVirtualClientRequestData> getDeleteLinkVirtualClient() {
    return deleteLinkVirtualClient;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkVirtualClient(List<UpdateWorkplaceDeleteLinkVirtualClientRequestData> deleteLinkVirtualClient) {
    this.deleteLinkVirtualClient = deleteLinkVirtualClient;
  }


  public UpdateWorkplaceRequestData updateLinkMaintenanceWindow(List<UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData> updateLinkMaintenanceWindow) {
    
    this.updateLinkMaintenanceWindow = updateLinkMaintenanceWindow;
    return this;
  }

  public UpdateWorkplaceRequestData addUpdateLinkMaintenanceWindowItem(UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData updateLinkMaintenanceWindowItem) {
    if (this.updateLinkMaintenanceWindow == null) {
      this.updateLinkMaintenanceWindow = new ArrayList<>();
    }
    this.updateLinkMaintenanceWindow.add(updateLinkMaintenanceWindowItem);
    return this;
  }

   /**
   * Get updateLinkMaintenanceWindow
   * @return updateLinkMaintenanceWindow
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData> getUpdateLinkMaintenanceWindow() {
    return updateLinkMaintenanceWindow;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_MAINTENANCE_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkMaintenanceWindow(List<UpdateWorkplaceUpdateLinkMaintenanceWindowRequestData> updateLinkMaintenanceWindow) {
    this.updateLinkMaintenanceWindow = updateLinkMaintenanceWindow;
  }


  public UpdateWorkplaceRequestData updateLinkOrganization(List<UpdateWorkplaceUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateWorkplaceRequestData addUpdateLinkOrganizationItem(UpdateWorkplaceUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateWorkplaceUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateWorkplaceRequestData updateLinkPerson(List<UpdateWorkplaceUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateWorkplaceRequestData addUpdateLinkPersonItem(UpdateWorkplaceUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateWorkplaceUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateWorkplaceRequestData updateLinkPersonGroup(List<UpdateWorkplaceUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateWorkplaceRequestData addUpdateLinkPersonGroupItem(UpdateWorkplaceUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateWorkplaceUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateWorkplaceUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWorkplaceRequestData updateWorkplaceRequestData = (UpdateWorkplaceRequestData) o;
    return Objects.equals(this.name, updateWorkplaceRequestData.name) &&
        Objects.equals(this.contextId, updateWorkplaceRequestData.contextId) &&
        Objects.equals(this.remark, updateWorkplaceRequestData.remark) &&
        Objects.equals(this.visibleId, updateWorkplaceRequestData.visibleId) &&
        Objects.equals(this.id, updateWorkplaceRequestData.id) &&
        Objects.equals(this.type, updateWorkplaceRequestData.type) &&
        Objects.equals(this.workplaceNo, updateWorkplaceRequestData.workplaceNo) &&
        Objects.equals(this.workplaceStatus, updateWorkplaceRequestData.workplaceStatus) &&
        Objects.equals(this.createLinkContract, updateWorkplaceRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateWorkplaceRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateWorkplaceRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkMaintenanceWindow, updateWorkplaceRequestData.createLinkMaintenanceWindow) &&
        Objects.equals(this.createLinkOrganization, updateWorkplaceRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateWorkplaceRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateWorkplaceRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkTerminal, updateWorkplaceRequestData.createLinkTerminal) &&
        Objects.equals(this.createLinkVirtualClient, updateWorkplaceRequestData.createLinkVirtualClient) &&
        Objects.equals(this.deleteLinkContract, updateWorkplaceRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateWorkplaceRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateWorkplaceRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkMaintenanceWindow, updateWorkplaceRequestData.deleteLinkMaintenanceWindow) &&
        Objects.equals(this.deleteLinkOrganization, updateWorkplaceRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateWorkplaceRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateWorkplaceRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkTerminal, updateWorkplaceRequestData.deleteLinkTerminal) &&
        Objects.equals(this.deleteLinkVirtualClient, updateWorkplaceRequestData.deleteLinkVirtualClient) &&
        Objects.equals(this.updateLinkMaintenanceWindow, updateWorkplaceRequestData.updateLinkMaintenanceWindow) &&
        Objects.equals(this.updateLinkOrganization, updateWorkplaceRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateWorkplaceRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateWorkplaceRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, contextId, remark, visibleId, id, type, workplaceNo, workplaceStatus, createLinkContract, createLinkFrameContract, createLinkMaintenanceContract, createLinkMaintenanceWindow, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkTerminal, createLinkVirtualClient, deleteLinkContract, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkMaintenanceWindow, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkTerminal, deleteLinkVirtualClient, updateLinkMaintenanceWindow, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWorkplaceRequestData {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    workplaceNo: ").append(toIndentedString(workplaceNo)).append("\n");
    sb.append("    workplaceStatus: ").append(toIndentedString(workplaceStatus)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkMaintenanceWindow: ").append(toIndentedString(createLinkMaintenanceWindow)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkTerminal: ").append(toIndentedString(createLinkTerminal)).append("\n");
    sb.append("    createLinkVirtualClient: ").append(toIndentedString(createLinkVirtualClient)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkMaintenanceWindow: ").append(toIndentedString(deleteLinkMaintenanceWindow)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkTerminal: ").append(toIndentedString(deleteLinkTerminal)).append("\n");
    sb.append("    deleteLinkVirtualClient: ").append(toIndentedString(deleteLinkVirtualClient)).append("\n");
    sb.append("    updateLinkMaintenanceWindow: ").append(toIndentedString(updateLinkMaintenanceWindow)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

