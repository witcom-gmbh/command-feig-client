/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoopInNodeTraySectionRequestData
 */
@JsonPropertyOrder({
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_COORDS_STRING_LOOP_INTO,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_LENGTH_NEW,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_CONTEXT_ID,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_COORDS_STRING_NEW,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_NODE_ELID,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_LENGTH_LOOP_INTO,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_SIDE_B,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_COORD_SYSTEM,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_SIDE_A
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class LoopInNodeTraySectionRequestData {
  public static final String JSON_PROPERTY_COORDS_STRING_LOOP_INTO = "coordsStringLoopInto";
  private String coordsStringLoopInto;

  public static final String JSON_PROPERTY_LENGTH_NEW = "lengthNew";
  private BigDecimal lengthNew;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_COORDS_STRING_NEW = "coordsStringNew";
  private String coordsStringNew;

  public static final String JSON_PROPERTY_NODE_ELID = "nodeElid";
  private String nodeElid;

  public static final String JSON_PROPERTY_LENGTH_LOOP_INTO = "lengthLoopInto";
  private BigDecimal lengthLoopInto;

  public static final String JSON_PROPERTY_SIDE_B = "sideB";
  private String sideB;

  public static final String JSON_PROPERTY_COORD_SYSTEM = "coordSystem";
  private String coordSystem;

  public static final String JSON_PROPERTY_SIDE_A = "sideA";
  private String sideA;

  public LoopInNodeTraySectionRequestData() {
  }

  public LoopInNodeTraySectionRequestData coordsStringLoopInto(String coordsStringLoopInto) {
    
    this.coordsStringLoopInto = coordsStringLoopInto;
    return this;
  }

   /**
   * Get coordsStringLoopInto
   * @return coordsStringLoopInto
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORDS_STRING_LOOP_INTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordsStringLoopInto() {
    return coordsStringLoopInto;
  }


  @JsonProperty(JSON_PROPERTY_COORDS_STRING_LOOP_INTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordsStringLoopInto(String coordsStringLoopInto) {
    this.coordsStringLoopInto = coordsStringLoopInto;
  }


  public LoopInNodeTraySectionRequestData lengthNew(BigDecimal lengthNew) {
    
    this.lengthNew = lengthNew;
    return this;
  }

   /**
   * Get lengthNew
   * @return lengthNew
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLengthNew() {
    return lengthNew;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengthNew(BigDecimal lengthNew) {
    this.lengthNew = lengthNew;
  }


  public LoopInNodeTraySectionRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public LoopInNodeTraySectionRequestData coordsStringNew(String coordsStringNew) {
    
    this.coordsStringNew = coordsStringNew;
    return this;
  }

   /**
   * Get coordsStringNew
   * @return coordsStringNew
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORDS_STRING_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordsStringNew() {
    return coordsStringNew;
  }


  @JsonProperty(JSON_PROPERTY_COORDS_STRING_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordsStringNew(String coordsStringNew) {
    this.coordsStringNew = coordsStringNew;
  }


  public LoopInNodeTraySectionRequestData nodeElid(String nodeElid) {
    
    this.nodeElid = nodeElid;
    return this;
  }

   /**
   * Get nodeElid
   * @return nodeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NODE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeElid() {
    return nodeElid;
  }


  @JsonProperty(JSON_PROPERTY_NODE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeElid(String nodeElid) {
    this.nodeElid = nodeElid;
  }


  public LoopInNodeTraySectionRequestData lengthLoopInto(BigDecimal lengthLoopInto) {
    
    this.lengthLoopInto = lengthLoopInto;
    return this;
  }

   /**
   * Get lengthLoopInto
   * @return lengthLoopInto
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH_LOOP_INTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLengthLoopInto() {
    return lengthLoopInto;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH_LOOP_INTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengthLoopInto(BigDecimal lengthLoopInto) {
    this.lengthLoopInto = lengthLoopInto;
  }


  public LoopInNodeTraySectionRequestData sideB(String sideB) {
    
    this.sideB = sideB;
    return this;
  }

   /**
   * Get sideB
   * @return sideB
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSideB() {
    return sideB;
  }


  @JsonProperty(JSON_PROPERTY_SIDE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideB(String sideB) {
    this.sideB = sideB;
  }


  public LoopInNodeTraySectionRequestData coordSystem(String coordSystem) {
    
    this.coordSystem = coordSystem;
    return this;
  }

   /**
   * Get coordSystem
   * @return coordSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoordSystem() {
    return coordSystem;
  }


  @JsonProperty(JSON_PROPERTY_COORD_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordSystem(String coordSystem) {
    this.coordSystem = coordSystem;
  }


  public LoopInNodeTraySectionRequestData sideA(String sideA) {
    
    this.sideA = sideA;
    return this;
  }

   /**
   * Get sideA
   * @return sideA
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSideA() {
    return sideA;
  }


  @JsonProperty(JSON_PROPERTY_SIDE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideA(String sideA) {
    this.sideA = sideA;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoopInNodeTraySectionRequestData loopInNodeTraySectionRequestData = (LoopInNodeTraySectionRequestData) o;
    return Objects.equals(this.coordsStringLoopInto, loopInNodeTraySectionRequestData.coordsStringLoopInto) &&
        Objects.equals(this.lengthNew, loopInNodeTraySectionRequestData.lengthNew) &&
        Objects.equals(this.contextId, loopInNodeTraySectionRequestData.contextId) &&
        Objects.equals(this.coordsStringNew, loopInNodeTraySectionRequestData.coordsStringNew) &&
        Objects.equals(this.nodeElid, loopInNodeTraySectionRequestData.nodeElid) &&
        Objects.equals(this.lengthLoopInto, loopInNodeTraySectionRequestData.lengthLoopInto) &&
        Objects.equals(this.sideB, loopInNodeTraySectionRequestData.sideB) &&
        Objects.equals(this.coordSystem, loopInNodeTraySectionRequestData.coordSystem) &&
        Objects.equals(this.sideA, loopInNodeTraySectionRequestData.sideA);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordsStringLoopInto, lengthNew, contextId, coordsStringNew, nodeElid, lengthLoopInto, sideB, coordSystem, sideA);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoopInNodeTraySectionRequestData {\n");
    sb.append("    coordsStringLoopInto: ").append(toIndentedString(coordsStringLoopInto)).append("\n");
    sb.append("    lengthNew: ").append(toIndentedString(lengthNew)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    coordsStringNew: ").append(toIndentedString(coordsStringNew)).append("\n");
    sb.append("    nodeElid: ").append(toIndentedString(nodeElid)).append("\n");
    sb.append("    lengthLoopInto: ").append(toIndentedString(lengthLoopInto)).append("\n");
    sb.append("    sideB: ").append(toIndentedString(sideB)).append("\n");
    sb.append("    coordSystem: ").append(toIndentedString(coordSystem)).append("\n");
    sb.append("    sideA: ").append(toIndentedString(sideA)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

