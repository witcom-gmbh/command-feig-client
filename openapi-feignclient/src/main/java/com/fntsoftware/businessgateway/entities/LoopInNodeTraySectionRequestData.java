/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoopInNodeTraySectionRequestData
 */
@JsonPropertyOrder({
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_NODE_ELID,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_SIDE_B,
  LoopInNodeTraySectionRequestData.JSON_PROPERTY_SIDE_A
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class LoopInNodeTraySectionRequestData {
  public static final String JSON_PROPERTY_NODE_ELID = "nodeElid";
  private String nodeElid;

  public static final String JSON_PROPERTY_SIDE_B = "sideB";
  private String sideB;

  public static final String JSON_PROPERTY_SIDE_A = "sideA";
  private String sideA;

  public LoopInNodeTraySectionRequestData() {
  }

  public LoopInNodeTraySectionRequestData nodeElid(String nodeElid) {
    
    this.nodeElid = nodeElid;
    return this;
  }

   /**
   * Get nodeElid
   * @return nodeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NODE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeElid() {
    return nodeElid;
  }


  @JsonProperty(JSON_PROPERTY_NODE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeElid(String nodeElid) {
    this.nodeElid = nodeElid;
  }


  public LoopInNodeTraySectionRequestData sideB(String sideB) {
    
    this.sideB = sideB;
    return this;
  }

   /**
   * Get sideB
   * @return sideB
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSideB() {
    return sideB;
  }


  @JsonProperty(JSON_PROPERTY_SIDE_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideB(String sideB) {
    this.sideB = sideB;
  }


  public LoopInNodeTraySectionRequestData sideA(String sideA) {
    
    this.sideA = sideA;
    return this;
  }

   /**
   * Get sideA
   * @return sideA
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSideA() {
    return sideA;
  }


  @JsonProperty(JSON_PROPERTY_SIDE_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideA(String sideA) {
    this.sideA = sideA;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoopInNodeTraySectionRequestData loopInNodeTraySectionRequestData = (LoopInNodeTraySectionRequestData) o;
    return Objects.equals(this.nodeElid, loopInNodeTraySectionRequestData.nodeElid) &&
        Objects.equals(this.sideB, loopInNodeTraySectionRequestData.sideB) &&
        Objects.equals(this.sideA, loopInNodeTraySectionRequestData.sideA);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeElid, sideB, sideA);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoopInNodeTraySectionRequestData {\n");
    sb.append("    nodeElid: ").append(toIndentedString(nodeElid)).append("\n");
    sb.append("    sideB: ").append(toIndentedString(sideB)).append("\n");
    sb.append("    sideA: ").append(toIndentedString(sideA)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

