/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.CiAttribute;
import com.fntsoftware.businessgateway.entities.Entity;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ci
 */
@JsonPropertyOrder({
  Ci.JSON_PROPERTY_TYPE_PLATE,
  Ci.JSON_PROPERTY_ICON_NAME,
  Ci.JSON_PROPERTY_DISPLAY_STRING,
  Ci.JSON_PROPERTY_TYPE_ELID,
  Ci.JSON_PROPERTY_DESCRIPTION,
  Ci.JSON_PROPERTY_ID,
  Ci.JSON_PROPERTY_ELID,
  Ci.JSON_PROPERTY_ENTITY
})
@JsonTypeName("ci")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class Ci {
  public static final String JSON_PROPERTY_TYPE_PLATE = "typePlate";
  private List<CiAttribute> typePlate;

  public static final String JSON_PROPERTY_ICON_NAME = "iconName";
  private String iconName;

  public static final String JSON_PROPERTY_DISPLAY_STRING = "displayString";
  private String displayString;

  public static final String JSON_PROPERTY_TYPE_ELID = "typeElid";
  private String typeElid;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private Entity entity;

  public Ci() {
  }

  public Ci typePlate(List<CiAttribute> typePlate) {
    
    this.typePlate = typePlate;
    return this;
  }

  public Ci addTypePlateItem(CiAttribute typePlateItem) {
    if (this.typePlate == null) {
      this.typePlate = new ArrayList<>();
    }
    this.typePlate.add(typePlateItem);
    return this;
  }

   /**
   * Get typePlate
   * @return typePlate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_PLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CiAttribute> getTypePlate() {
    return typePlate;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_PLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypePlate(List<CiAttribute> typePlate) {
    this.typePlate = typePlate;
  }


  public Ci iconName(String iconName) {
    
    this.iconName = iconName;
    return this;
  }

   /**
   * Get iconName
   * @return iconName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconName() {
    return iconName;
  }


  @JsonProperty(JSON_PROPERTY_ICON_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconName(String iconName) {
    this.iconName = iconName;
  }


  public Ci displayString(String displayString) {
    
    this.displayString = displayString;
    return this;
  }

   /**
   * Get displayString
   * @return displayString
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayString() {
    return displayString;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayString(String displayString) {
    this.displayString = displayString;
  }


  public Ci typeElid(String typeElid) {
    
    this.typeElid = typeElid;
    return this;
  }

   /**
   * Get typeElid
   * @return typeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeElid() {
    return typeElid;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeElid(String typeElid) {
    this.typeElid = typeElid;
  }


  public Ci description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Ci id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Ci elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public Ci entity(Entity entity) {
    
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Entity getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(Entity entity) {
    this.entity = entity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ci ci = (Ci) o;
    return Objects.equals(this.typePlate, ci.typePlate) &&
        Objects.equals(this.iconName, ci.iconName) &&
        Objects.equals(this.displayString, ci.displayString) &&
        Objects.equals(this.typeElid, ci.typeElid) &&
        Objects.equals(this.description, ci.description) &&
        Objects.equals(this.id, ci.id) &&
        Objects.equals(this.elid, ci.elid) &&
        Objects.equals(this.entity, ci.entity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typePlate, iconName, displayString, typeElid, description, id, elid, entity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ci {\n");
    sb.append("    typePlate: ").append(toIndentedString(typePlate)).append("\n");
    sb.append("    iconName: ").append(toIndentedString(iconName)).append("\n");
    sb.append("    displayString: ").append(toIndentedString(displayString)).append("\n");
    sb.append("    typeElid: ").append(toIndentedString(typeElid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

