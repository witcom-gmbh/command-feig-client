/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.Location;
import com.fntsoftware.businessgateway.entities.ObjectAttribute;
import com.fntsoftware.businessgateway.entities.SignalTracedeviceBaseInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SignalTracedevice
 */
@JsonPropertyOrder({
  SignalTracedevice.JSON_PROPERTY_BASE_INFO,
  SignalTracedevice.JSON_PROPERTY_PARENT_DEVICES,
  SignalTracedevice.JSON_PROPERTY_ADDITIONAL_INFO,
  SignalTracedevice.JSON_PROPERTY_LOCATION,
  SignalTracedevice.JSON_PROPERTY_ELID,
  SignalTracedevice.JSON_PROPERTY_PLAN_VIEW
})
@JsonTypeName("signalTracedevice")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class SignalTracedevice {
  public static final String JSON_PROPERTY_BASE_INFO = "baseInfo";
  private SignalTracedeviceBaseInfo baseInfo;

  public static final String JSON_PROPERTY_PARENT_DEVICES = "parentDevices";
  private List<SignalTracedeviceBaseInfo> parentDevices;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  private List<ObjectAttribute> additionalInfo;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private Location location;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_PLAN_VIEW = "planView";
  private Boolean planView;

  public SignalTracedevice() {
  }

  public SignalTracedevice baseInfo(SignalTracedeviceBaseInfo baseInfo) {
    
    this.baseInfo = baseInfo;
    return this;
  }

   /**
   * Get baseInfo
   * @return baseInfo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SignalTracedeviceBaseInfo getBaseInfo() {
    return baseInfo;
  }


  @JsonProperty(JSON_PROPERTY_BASE_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseInfo(SignalTracedeviceBaseInfo baseInfo) {
    this.baseInfo = baseInfo;
  }


  public SignalTracedevice parentDevices(List<SignalTracedeviceBaseInfo> parentDevices) {
    
    this.parentDevices = parentDevices;
    return this;
  }

  public SignalTracedevice addParentDevicesItem(SignalTracedeviceBaseInfo parentDevicesItem) {
    if (this.parentDevices == null) {
      this.parentDevices = new ArrayList<>();
    }
    this.parentDevices.add(parentDevicesItem);
    return this;
  }

   /**
   * Get parentDevices
   * @return parentDevices
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SignalTracedeviceBaseInfo> getParentDevices() {
    return parentDevices;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentDevices(List<SignalTracedeviceBaseInfo> parentDevices) {
    this.parentDevices = parentDevices;
  }


  public SignalTracedevice additionalInfo(List<ObjectAttribute> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public SignalTracedevice addAdditionalInfoItem(ObjectAttribute additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * Get additionalInfo
   * @return additionalInfo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ObjectAttribute> getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(List<ObjectAttribute> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public SignalTracedevice location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(Location location) {
    this.location = location;
  }


  public SignalTracedevice elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public SignalTracedevice planView(Boolean planView) {
    
    this.planView = planView;
    return this;
  }

   /**
   * Get planView
   * @return planView
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPlanView() {
    return planView;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanView(Boolean planView) {
    this.planView = planView;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalTracedevice signalTracedevice = (SignalTracedevice) o;
    return Objects.equals(this.baseInfo, signalTracedevice.baseInfo) &&
        Objects.equals(this.parentDevices, signalTracedevice.parentDevices) &&
        Objects.equals(this.additionalInfo, signalTracedevice.additionalInfo) &&
        Objects.equals(this.location, signalTracedevice.location) &&
        Objects.equals(this.elid, signalTracedevice.elid) &&
        Objects.equals(this.planView, signalTracedevice.planView);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseInfo, parentDevices, additionalInfo, location, elid, planView);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalTracedevice {\n");
    sb.append("    baseInfo: ").append(toIndentedString(baseInfo)).append("\n");
    sb.append("    parentDevices: ").append(toIndentedString(parentDevices)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    planView: ").append(toIndentedString(planView)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

