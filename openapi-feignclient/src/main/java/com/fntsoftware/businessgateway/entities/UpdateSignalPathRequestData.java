/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkCableMasterDataCableRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkServiceSignalmgmtRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathCreateLinkSignalPathChildRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathDeleteLinkSignalPathChildRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSignalPathUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSignalPathRequestData
 */
@JsonPropertyOrder({
  UpdateSignalPathRequestData.JSON_PROPERTY_TRANSMISSION_MODE,
  UpdateSignalPathRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateSignalPathRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSignalPathRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateSignalPathRequestData.JSON_PROPERTY_ID,
  UpdateSignalPathRequestData.JSON_PROPERTY_MEDIUM,
  UpdateSignalPathRequestData.JSON_PROPERTY_MAIN_SIGNALPATH,
  UpdateSignalPathRequestData.JSON_PROPERTY_TYPE,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_CABLE_MASTER_DATA_CABLE,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_SERVICE_SIGNALMGMT,
  UpdateSignalPathRequestData.JSON_PROPERTY_CREATE_LINK_SIGNAL_PATH_CHILD,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSignalPathRequestData.JSON_PROPERTY_DELETE_LINK_SIGNAL_PATH_CHILD,
  UpdateSignalPathRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSignalPathRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSignalPathRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateSignalPathRequestData {
  public static final String JSON_PROPERTY_TRANSMISSION_MODE = "transmissionMode";
  private String transmissionMode;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_MEDIUM = "medium";
  private String medium;

  public static final String JSON_PROPERTY_MAIN_SIGNALPATH = "mainSignalpath";
  private Boolean mainSignalpath;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CREATE_LINK_CABLE_MASTER_DATA_CABLE = "createLinkCableMasterDataCable";
  private UpdateSignalPathCreateLinkCableMasterDataCableRequestData createLinkCableMasterDataCable;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSignalPathCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSignalPathCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSignalPathCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSignalPathCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSignalPathCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_SERVICE_SIGNALMGMT = "createLinkServiceSignalmgmt";
  private UpdateSignalPathCreateLinkServiceSignalmgmtRequestData createLinkServiceSignalmgmt;

  public static final String JSON_PROPERTY_CREATE_LINK_SIGNAL_PATH_CHILD = "createLinkSignalPathChild";
  private List<UpdateSignalPathCreateLinkSignalPathChildRequestData> createLinkSignalPathChild;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSignalPathDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSignalPathDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSignalPathDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSignalPathDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSignalPathDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_SIGNAL_PATH_CHILD = "deleteLinkSignalPathChild";
  private List<UpdateSignalPathDeleteLinkSignalPathChildRequestData> deleteLinkSignalPathChild;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSignalPathUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSignalPathUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSignalPathUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSignalPathRequestData() {
  }

  public UpdateSignalPathRequestData transmissionMode(String transmissionMode) {
    
    this.transmissionMode = transmissionMode;
    return this;
  }

   /**
   * Get transmissionMode
   * @return transmissionMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSMISSION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransmissionMode() {
    return transmissionMode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSMISSION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransmissionMode(String transmissionMode) {
    this.transmissionMode = transmissionMode;
  }


  public UpdateSignalPathRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSignalPathRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSignalPathRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateSignalPathRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateSignalPathRequestData medium(String medium) {
    
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMedium() {
    return medium;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedium(String medium) {
    this.medium = medium;
  }


  public UpdateSignalPathRequestData mainSignalpath(Boolean mainSignalpath) {
    
    this.mainSignalpath = mainSignalpath;
    return this;
  }

   /**
   * Get mainSignalpath
   * @return mainSignalpath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_SIGNALPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMainSignalpath() {
    return mainSignalpath;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_SIGNALPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainSignalpath(Boolean mainSignalpath) {
    this.mainSignalpath = mainSignalpath;
  }


  public UpdateSignalPathRequestData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public UpdateSignalPathRequestData createLinkCableMasterDataCable(UpdateSignalPathCreateLinkCableMasterDataCableRequestData createLinkCableMasterDataCable) {
    
    this.createLinkCableMasterDataCable = createLinkCableMasterDataCable;
    return this;
  }

   /**
   * Get createLinkCableMasterDataCable
   * @return createLinkCableMasterDataCable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CABLE_MASTER_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSignalPathCreateLinkCableMasterDataCableRequestData getCreateLinkCableMasterDataCable() {
    return createLinkCableMasterDataCable;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CABLE_MASTER_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCableMasterDataCable(UpdateSignalPathCreateLinkCableMasterDataCableRequestData createLinkCableMasterDataCable) {
    this.createLinkCableMasterDataCable = createLinkCableMasterDataCable;
  }


  public UpdateSignalPathRequestData createLinkContract(List<UpdateSignalPathCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkContractItem(UpdateSignalPathCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSignalPathCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSignalPathRequestData createLinkFrameContract(List<UpdateSignalPathCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkFrameContractItem(UpdateSignalPathCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSignalPathCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSignalPathRequestData createLinkOrganization(List<UpdateSignalPathCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkOrganizationItem(UpdateSignalPathCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSignalPathCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSignalPathRequestData createLinkPerson(List<UpdateSignalPathCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkPersonItem(UpdateSignalPathCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSignalPathCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSignalPathRequestData createLinkPersonGroup(List<UpdateSignalPathCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkPersonGroupItem(UpdateSignalPathCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSignalPathCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSignalPathRequestData createLinkServiceSignalmgmt(UpdateSignalPathCreateLinkServiceSignalmgmtRequestData createLinkServiceSignalmgmt) {
    
    this.createLinkServiceSignalmgmt = createLinkServiceSignalmgmt;
    return this;
  }

   /**
   * Get createLinkServiceSignalmgmt
   * @return createLinkServiceSignalmgmt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SERVICE_SIGNALMGMT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSignalPathCreateLinkServiceSignalmgmtRequestData getCreateLinkServiceSignalmgmt() {
    return createLinkServiceSignalmgmt;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SERVICE_SIGNALMGMT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkServiceSignalmgmt(UpdateSignalPathCreateLinkServiceSignalmgmtRequestData createLinkServiceSignalmgmt) {
    this.createLinkServiceSignalmgmt = createLinkServiceSignalmgmt;
  }


  public UpdateSignalPathRequestData createLinkSignalPathChild(List<UpdateSignalPathCreateLinkSignalPathChildRequestData> createLinkSignalPathChild) {
    
    this.createLinkSignalPathChild = createLinkSignalPathChild;
    return this;
  }

  public UpdateSignalPathRequestData addCreateLinkSignalPathChildItem(UpdateSignalPathCreateLinkSignalPathChildRequestData createLinkSignalPathChildItem) {
    if (this.createLinkSignalPathChild == null) {
      this.createLinkSignalPathChild = new ArrayList<>();
    }
    this.createLinkSignalPathChild.add(createLinkSignalPathChildItem);
    return this;
  }

   /**
   * Get createLinkSignalPathChild
   * @return createLinkSignalPathChild
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SIGNAL_PATH_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathCreateLinkSignalPathChildRequestData> getCreateLinkSignalPathChild() {
    return createLinkSignalPathChild;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SIGNAL_PATH_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkSignalPathChild(List<UpdateSignalPathCreateLinkSignalPathChildRequestData> createLinkSignalPathChild) {
    this.createLinkSignalPathChild = createLinkSignalPathChild;
  }


  public UpdateSignalPathRequestData deleteLinkContract(List<UpdateSignalPathDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkContractItem(UpdateSignalPathDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSignalPathDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSignalPathRequestData deleteLinkFrameContract(List<UpdateSignalPathDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkFrameContractItem(UpdateSignalPathDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSignalPathDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSignalPathRequestData deleteLinkOrganization(List<UpdateSignalPathDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkOrganizationItem(UpdateSignalPathDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSignalPathDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSignalPathRequestData deleteLinkPerson(List<UpdateSignalPathDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkPersonItem(UpdateSignalPathDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSignalPathDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSignalPathRequestData deleteLinkPersonGroup(List<UpdateSignalPathDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkPersonGroupItem(UpdateSignalPathDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSignalPathDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSignalPathRequestData deleteLinkSignalPathChild(List<UpdateSignalPathDeleteLinkSignalPathChildRequestData> deleteLinkSignalPathChild) {
    
    this.deleteLinkSignalPathChild = deleteLinkSignalPathChild;
    return this;
  }

  public UpdateSignalPathRequestData addDeleteLinkSignalPathChildItem(UpdateSignalPathDeleteLinkSignalPathChildRequestData deleteLinkSignalPathChildItem) {
    if (this.deleteLinkSignalPathChild == null) {
      this.deleteLinkSignalPathChild = new ArrayList<>();
    }
    this.deleteLinkSignalPathChild.add(deleteLinkSignalPathChildItem);
    return this;
  }

   /**
   * Get deleteLinkSignalPathChild
   * @return deleteLinkSignalPathChild
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SIGNAL_PATH_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathDeleteLinkSignalPathChildRequestData> getDeleteLinkSignalPathChild() {
    return deleteLinkSignalPathChild;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SIGNAL_PATH_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkSignalPathChild(List<UpdateSignalPathDeleteLinkSignalPathChildRequestData> deleteLinkSignalPathChild) {
    this.deleteLinkSignalPathChild = deleteLinkSignalPathChild;
  }


  public UpdateSignalPathRequestData updateLinkOrganization(List<UpdateSignalPathUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSignalPathRequestData addUpdateLinkOrganizationItem(UpdateSignalPathUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSignalPathUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSignalPathRequestData updateLinkPerson(List<UpdateSignalPathUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSignalPathRequestData addUpdateLinkPersonItem(UpdateSignalPathUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSignalPathUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSignalPathRequestData updateLinkPersonGroup(List<UpdateSignalPathUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSignalPathRequestData addUpdateLinkPersonGroupItem(UpdateSignalPathUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSignalPathUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSignalPathUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSignalPathRequestData updateSignalPathRequestData = (UpdateSignalPathRequestData) o;
    return Objects.equals(this.transmissionMode, updateSignalPathRequestData.transmissionMode) &&
        Objects.equals(this.description, updateSignalPathRequestData.description) &&
        Objects.equals(this.contextId, updateSignalPathRequestData.contextId) &&
        Objects.equals(this.visibleId, updateSignalPathRequestData.visibleId) &&
        Objects.equals(this.id, updateSignalPathRequestData.id) &&
        Objects.equals(this.medium, updateSignalPathRequestData.medium) &&
        Objects.equals(this.mainSignalpath, updateSignalPathRequestData.mainSignalpath) &&
        Objects.equals(this.type, updateSignalPathRequestData.type) &&
        Objects.equals(this.createLinkCableMasterDataCable, updateSignalPathRequestData.createLinkCableMasterDataCable) &&
        Objects.equals(this.createLinkContract, updateSignalPathRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateSignalPathRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkOrganization, updateSignalPathRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSignalPathRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSignalPathRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkServiceSignalmgmt, updateSignalPathRequestData.createLinkServiceSignalmgmt) &&
        Objects.equals(this.createLinkSignalPathChild, updateSignalPathRequestData.createLinkSignalPathChild) &&
        Objects.equals(this.deleteLinkContract, updateSignalPathRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSignalPathRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSignalPathRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSignalPathRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSignalPathRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkSignalPathChild, updateSignalPathRequestData.deleteLinkSignalPathChild) &&
        Objects.equals(this.updateLinkOrganization, updateSignalPathRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSignalPathRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSignalPathRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transmissionMode, description, contextId, visibleId, id, medium, mainSignalpath, type, createLinkCableMasterDataCable, createLinkContract, createLinkFrameContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkServiceSignalmgmt, createLinkSignalPathChild, deleteLinkContract, deleteLinkFrameContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkSignalPathChild, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSignalPathRequestData {\n");
    sb.append("    transmissionMode: ").append(toIndentedString(transmissionMode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    mainSignalpath: ").append(toIndentedString(mainSignalpath)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    createLinkCableMasterDataCable: ").append(toIndentedString(createLinkCableMasterDataCable)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkServiceSignalmgmt: ").append(toIndentedString(createLinkServiceSignalmgmt)).append("\n");
    sb.append("    createLinkSignalPathChild: ").append(toIndentedString(createLinkSignalPathChild)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkSignalPathChild: ").append(toIndentedString(deleteLinkSignalPathChild)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

