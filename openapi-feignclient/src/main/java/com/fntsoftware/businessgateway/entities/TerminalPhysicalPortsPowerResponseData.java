/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.Location;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TerminalPhysicalPortsPowerResponseData
 */
@JsonPropertyOrder({
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SOCKET_NAME_SPC,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_BORDER_COLOR,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SUPPLIER_ID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SOCKET_NAME,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_WIRE_TYPE,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_MEDIUM,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_POWER_DISTRIBUTION_ELID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_STATUS_REMARK,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_END_CONSUMER_VISIBLE_ID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_FUSE_ELID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_POWER_DISTRIBUTION_ID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_PLAN_PORT_NETWORK_CATEGORY,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_END_CONSUMER_ELID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SUPPLIER_LOCATION,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_PORT_IDENTIFIER,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_PORT_NETWORK_CATEGORY,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_FUSE_ID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_END_CONSUMER_ID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_PORT_CATEGORY,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SOCKET_NO,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_ELID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_POWER_DISTRIBUTION_LOCATION,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_CONNECTOR,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SOCKET_SIDE,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_POWER_CONSUMPTION_CALC,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_SUPPLIER_ELID,
  TerminalPhysicalPortsPowerResponseData.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class TerminalPhysicalPortsPowerResponseData {
  public static final String JSON_PROPERTY_SOCKET_NAME_SPC = "socketNameSpc";
  private String socketNameSpc;

  public static final String JSON_PROPERTY_BORDER_COLOR = "borderColor";
  private String borderColor;

  public static final String JSON_PROPERTY_SUPPLIER_ID = "supplierId";
  private String supplierId;

  public static final String JSON_PROPERTY_SOCKET_NAME = "socketName";
  private String socketName;

  public static final String JSON_PROPERTY_WIRE_TYPE = "wireType";
  private String wireType;

  public static final String JSON_PROPERTY_MEDIUM = "medium";
  private String medium;

  public static final String JSON_PROPERTY_POWER_DISTRIBUTION_ELID = "powerDistributionElid";
  private String powerDistributionElid;

  public static final String JSON_PROPERTY_STATUS_REMARK = "statusRemark";
  private String statusRemark;

  public static final String JSON_PROPERTY_END_CONSUMER_VISIBLE_ID = "endConsumerVisibleId";
  private String endConsumerVisibleId;

  public static final String JSON_PROPERTY_FUSE_ELID = "fuseElid";
  private String fuseElid;

  public static final String JSON_PROPERTY_POWER_DISTRIBUTION_ID = "powerDistributionId";
  private String powerDistributionId;

  public static final String JSON_PROPERTY_PLAN_PORT_NETWORK_CATEGORY = "planPortNetworkCategory";
  private String planPortNetworkCategory;

  public static final String JSON_PROPERTY_END_CONSUMER_ELID = "endConsumerElid";
  private String endConsumerElid;

  public static final String JSON_PROPERTY_SUPPLIER_LOCATION = "supplierLocation";
  private Location supplierLocation;

  public static final String JSON_PROPERTY_PORT_IDENTIFIER = "portIdentifier";
  private String portIdentifier;

  public static final String JSON_PROPERTY_PORT_NETWORK_CATEGORY = "portNetworkCategory";
  private String portNetworkCategory;

  public static final String JSON_PROPERTY_FUSE_ID = "fuseId";
  private String fuseId;

  public static final String JSON_PROPERTY_END_CONSUMER_ID = "endConsumerId";
  private String endConsumerId;

  public static final String JSON_PROPERTY_PORT_CATEGORY = "portCategory";
  private String portCategory;

  public static final String JSON_PROPERTY_SOCKET_NO = "socketNo";
  private BigDecimal socketNo;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_POWER_DISTRIBUTION_LOCATION = "powerDistributionLocation";
  private Location powerDistributionLocation;

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private String connector;

  public static final String JSON_PROPERTY_SOCKET_SIDE = "socketSide";
  private String socketSide;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_CALC = "powerConsumptionCalc";
  private BigDecimal powerConsumptionCalc;

  public static final String JSON_PROPERTY_SUPPLIER_ELID = "supplierElid";
  private String supplierElid;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public TerminalPhysicalPortsPowerResponseData() {
  }

  public TerminalPhysicalPortsPowerResponseData socketNameSpc(String socketNameSpc) {
    
    this.socketNameSpc = socketNameSpc;
    return this;
  }

   /**
   * Get socketNameSpc
   * @return socketNameSpc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NAME_SPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSocketNameSpc() {
    return socketNameSpc;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NAME_SPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNameSpc(String socketNameSpc) {
    this.socketNameSpc = socketNameSpc;
  }


  public TerminalPhysicalPortsPowerResponseData borderColor(String borderColor) {
    
    this.borderColor = borderColor;
    return this;
  }

   /**
   * Get borderColor
   * @return borderColor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BORDER_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBorderColor() {
    return borderColor;
  }


  @JsonProperty(JSON_PROPERTY_BORDER_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBorderColor(String borderColor) {
    this.borderColor = borderColor;
  }


  public TerminalPhysicalPortsPowerResponseData supplierId(String supplierId) {
    
    this.supplierId = supplierId;
    return this;
  }

   /**
   * Get supplierId
   * @return supplierId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupplierId() {
    return supplierId;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierId(String supplierId) {
    this.supplierId = supplierId;
  }


  public TerminalPhysicalPortsPowerResponseData socketName(String socketName) {
    
    this.socketName = socketName;
    return this;
  }

   /**
   * Get socketName
   * @return socketName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSocketName() {
    return socketName;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketName(String socketName) {
    this.socketName = socketName;
  }


  public TerminalPhysicalPortsPowerResponseData wireType(String wireType) {
    
    this.wireType = wireType;
    return this;
  }

   /**
   * Get wireType
   * @return wireType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIRE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWireType() {
    return wireType;
  }


  @JsonProperty(JSON_PROPERTY_WIRE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWireType(String wireType) {
    this.wireType = wireType;
  }


  public TerminalPhysicalPortsPowerResponseData medium(String medium) {
    
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMedium() {
    return medium;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedium(String medium) {
    this.medium = medium;
  }


  public TerminalPhysicalPortsPowerResponseData powerDistributionElid(String powerDistributionElid) {
    
    this.powerDistributionElid = powerDistributionElid;
    return this;
  }

   /**
   * Get powerDistributionElid
   * @return powerDistributionElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPowerDistributionElid() {
    return powerDistributionElid;
  }


  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerDistributionElid(String powerDistributionElid) {
    this.powerDistributionElid = powerDistributionElid;
  }


  public TerminalPhysicalPortsPowerResponseData statusRemark(String statusRemark) {
    
    this.statusRemark = statusRemark;
    return this;
  }

   /**
   * Get statusRemark
   * @return statusRemark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatusRemark() {
    return statusRemark;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusRemark(String statusRemark) {
    this.statusRemark = statusRemark;
  }


  public TerminalPhysicalPortsPowerResponseData endConsumerVisibleId(String endConsumerVisibleId) {
    
    this.endConsumerVisibleId = endConsumerVisibleId;
    return this;
  }

   /**
   * Get endConsumerVisibleId
   * @return endConsumerVisibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_CONSUMER_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndConsumerVisibleId() {
    return endConsumerVisibleId;
  }


  @JsonProperty(JSON_PROPERTY_END_CONSUMER_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndConsumerVisibleId(String endConsumerVisibleId) {
    this.endConsumerVisibleId = endConsumerVisibleId;
  }


  public TerminalPhysicalPortsPowerResponseData fuseElid(String fuseElid) {
    
    this.fuseElid = fuseElid;
    return this;
  }

   /**
   * Get fuseElid
   * @return fuseElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUSE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFuseElid() {
    return fuseElid;
  }


  @JsonProperty(JSON_PROPERTY_FUSE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFuseElid(String fuseElid) {
    this.fuseElid = fuseElid;
  }


  public TerminalPhysicalPortsPowerResponseData powerDistributionId(String powerDistributionId) {
    
    this.powerDistributionId = powerDistributionId;
    return this;
  }

   /**
   * Get powerDistributionId
   * @return powerDistributionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPowerDistributionId() {
    return powerDistributionId;
  }


  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerDistributionId(String powerDistributionId) {
    this.powerDistributionId = powerDistributionId;
  }


  public TerminalPhysicalPortsPowerResponseData planPortNetworkCategory(String planPortNetworkCategory) {
    
    this.planPortNetworkCategory = planPortNetworkCategory;
    return this;
  }

   /**
   * Get planPortNetworkCategory
   * @return planPortNetworkCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanPortNetworkCategory() {
    return planPortNetworkCategory;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanPortNetworkCategory(String planPortNetworkCategory) {
    this.planPortNetworkCategory = planPortNetworkCategory;
  }


  public TerminalPhysicalPortsPowerResponseData endConsumerElid(String endConsumerElid) {
    
    this.endConsumerElid = endConsumerElid;
    return this;
  }

   /**
   * Get endConsumerElid
   * @return endConsumerElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_CONSUMER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndConsumerElid() {
    return endConsumerElid;
  }


  @JsonProperty(JSON_PROPERTY_END_CONSUMER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndConsumerElid(String endConsumerElid) {
    this.endConsumerElid = endConsumerElid;
  }


  public TerminalPhysicalPortsPowerResponseData supplierLocation(Location supplierLocation) {
    
    this.supplierLocation = supplierLocation;
    return this;
  }

   /**
   * Get supplierLocation
   * @return supplierLocation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getSupplierLocation() {
    return supplierLocation;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierLocation(Location supplierLocation) {
    this.supplierLocation = supplierLocation;
  }


  public TerminalPhysicalPortsPowerResponseData portIdentifier(String portIdentifier) {
    
    this.portIdentifier = portIdentifier;
    return this;
  }

   /**
   * Get portIdentifier
   * @return portIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortIdentifier() {
    return portIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortIdentifier(String portIdentifier) {
    this.portIdentifier = portIdentifier;
  }


  public TerminalPhysicalPortsPowerResponseData portNetworkCategory(String portNetworkCategory) {
    
    this.portNetworkCategory = portNetworkCategory;
    return this;
  }

   /**
   * Get portNetworkCategory
   * @return portNetworkCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortNetworkCategory() {
    return portNetworkCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNetworkCategory(String portNetworkCategory) {
    this.portNetworkCategory = portNetworkCategory;
  }


  public TerminalPhysicalPortsPowerResponseData fuseId(String fuseId) {
    
    this.fuseId = fuseId;
    return this;
  }

   /**
   * Get fuseId
   * @return fuseId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFuseId() {
    return fuseId;
  }


  @JsonProperty(JSON_PROPERTY_FUSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFuseId(String fuseId) {
    this.fuseId = fuseId;
  }


  public TerminalPhysicalPortsPowerResponseData endConsumerId(String endConsumerId) {
    
    this.endConsumerId = endConsumerId;
    return this;
  }

   /**
   * Get endConsumerId
   * @return endConsumerId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndConsumerId() {
    return endConsumerId;
  }


  @JsonProperty(JSON_PROPERTY_END_CONSUMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndConsumerId(String endConsumerId) {
    this.endConsumerId = endConsumerId;
  }


  public TerminalPhysicalPortsPowerResponseData portCategory(String portCategory) {
    
    this.portCategory = portCategory;
    return this;
  }

   /**
   * Get portCategory
   * @return portCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortCategory() {
    return portCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortCategory(String portCategory) {
    this.portCategory = portCategory;
  }


  public TerminalPhysicalPortsPowerResponseData socketNo(BigDecimal socketNo) {
    
    this.socketNo = socketNo;
    return this;
  }

   /**
   * Get socketNo
   * @return socketNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSocketNo() {
    return socketNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNo(BigDecimal socketNo) {
    this.socketNo = socketNo;
  }


  public TerminalPhysicalPortsPowerResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public TerminalPhysicalPortsPowerResponseData powerDistributionLocation(Location powerDistributionLocation) {
    
    this.powerDistributionLocation = powerDistributionLocation;
    return this;
  }

   /**
   * Get powerDistributionLocation
   * @return powerDistributionLocation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getPowerDistributionLocation() {
    return powerDistributionLocation;
  }


  @JsonProperty(JSON_PROPERTY_POWER_DISTRIBUTION_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerDistributionLocation(Location powerDistributionLocation) {
    this.powerDistributionLocation = powerDistributionLocation;
  }


  public TerminalPhysicalPortsPowerResponseData connector(String connector) {
    
    this.connector = connector;
    return this;
  }

   /**
   * Get connector
   * @return connector
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnector() {
    return connector;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnector(String connector) {
    this.connector = connector;
  }


  public TerminalPhysicalPortsPowerResponseData socketSide(String socketSide) {
    
    this.socketSide = socketSide;
    return this;
  }

   /**
   * Get socketSide
   * @return socketSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSocketSide() {
    return socketSide;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSide(String socketSide) {
    this.socketSide = socketSide;
  }


  public TerminalPhysicalPortsPowerResponseData powerConsumptionCalc(BigDecimal powerConsumptionCalc) {
    
    this.powerConsumptionCalc = powerConsumptionCalc;
    return this;
  }

   /**
   * Get powerConsumptionCalc
   * @return powerConsumptionCalc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_CALC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionCalc() {
    return powerConsumptionCalc;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_CALC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionCalc(BigDecimal powerConsumptionCalc) {
    this.powerConsumptionCalc = powerConsumptionCalc;
  }


  public TerminalPhysicalPortsPowerResponseData supplierElid(String supplierElid) {
    
    this.supplierElid = supplierElid;
    return this;
  }

   /**
   * Get supplierElid
   * @return supplierElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupplierElid() {
    return supplierElid;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierElid(String supplierElid) {
    this.supplierElid = supplierElid;
  }


  public TerminalPhysicalPortsPowerResponseData status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerminalPhysicalPortsPowerResponseData terminalPhysicalPortsPowerResponseData = (TerminalPhysicalPortsPowerResponseData) o;
    return Objects.equals(this.socketNameSpc, terminalPhysicalPortsPowerResponseData.socketNameSpc) &&
        Objects.equals(this.borderColor, terminalPhysicalPortsPowerResponseData.borderColor) &&
        Objects.equals(this.supplierId, terminalPhysicalPortsPowerResponseData.supplierId) &&
        Objects.equals(this.socketName, terminalPhysicalPortsPowerResponseData.socketName) &&
        Objects.equals(this.wireType, terminalPhysicalPortsPowerResponseData.wireType) &&
        Objects.equals(this.medium, terminalPhysicalPortsPowerResponseData.medium) &&
        Objects.equals(this.powerDistributionElid, terminalPhysicalPortsPowerResponseData.powerDistributionElid) &&
        Objects.equals(this.statusRemark, terminalPhysicalPortsPowerResponseData.statusRemark) &&
        Objects.equals(this.endConsumerVisibleId, terminalPhysicalPortsPowerResponseData.endConsumerVisibleId) &&
        Objects.equals(this.fuseElid, terminalPhysicalPortsPowerResponseData.fuseElid) &&
        Objects.equals(this.powerDistributionId, terminalPhysicalPortsPowerResponseData.powerDistributionId) &&
        Objects.equals(this.planPortNetworkCategory, terminalPhysicalPortsPowerResponseData.planPortNetworkCategory) &&
        Objects.equals(this.endConsumerElid, terminalPhysicalPortsPowerResponseData.endConsumerElid) &&
        Objects.equals(this.supplierLocation, terminalPhysicalPortsPowerResponseData.supplierLocation) &&
        Objects.equals(this.portIdentifier, terminalPhysicalPortsPowerResponseData.portIdentifier) &&
        Objects.equals(this.portNetworkCategory, terminalPhysicalPortsPowerResponseData.portNetworkCategory) &&
        Objects.equals(this.fuseId, terminalPhysicalPortsPowerResponseData.fuseId) &&
        Objects.equals(this.endConsumerId, terminalPhysicalPortsPowerResponseData.endConsumerId) &&
        Objects.equals(this.portCategory, terminalPhysicalPortsPowerResponseData.portCategory) &&
        Objects.equals(this.socketNo, terminalPhysicalPortsPowerResponseData.socketNo) &&
        Objects.equals(this.elid, terminalPhysicalPortsPowerResponseData.elid) &&
        Objects.equals(this.powerDistributionLocation, terminalPhysicalPortsPowerResponseData.powerDistributionLocation) &&
        Objects.equals(this.connector, terminalPhysicalPortsPowerResponseData.connector) &&
        Objects.equals(this.socketSide, terminalPhysicalPortsPowerResponseData.socketSide) &&
        Objects.equals(this.powerConsumptionCalc, terminalPhysicalPortsPowerResponseData.powerConsumptionCalc) &&
        Objects.equals(this.supplierElid, terminalPhysicalPortsPowerResponseData.supplierElid) &&
        Objects.equals(this.status, terminalPhysicalPortsPowerResponseData.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(socketNameSpc, borderColor, supplierId, socketName, wireType, medium, powerDistributionElid, statusRemark, endConsumerVisibleId, fuseElid, powerDistributionId, planPortNetworkCategory, endConsumerElid, supplierLocation, portIdentifier, portNetworkCategory, fuseId, endConsumerId, portCategory, socketNo, elid, powerDistributionLocation, connector, socketSide, powerConsumptionCalc, supplierElid, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerminalPhysicalPortsPowerResponseData {\n");
    sb.append("    socketNameSpc: ").append(toIndentedString(socketNameSpc)).append("\n");
    sb.append("    borderColor: ").append(toIndentedString(borderColor)).append("\n");
    sb.append("    supplierId: ").append(toIndentedString(supplierId)).append("\n");
    sb.append("    socketName: ").append(toIndentedString(socketName)).append("\n");
    sb.append("    wireType: ").append(toIndentedString(wireType)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    powerDistributionElid: ").append(toIndentedString(powerDistributionElid)).append("\n");
    sb.append("    statusRemark: ").append(toIndentedString(statusRemark)).append("\n");
    sb.append("    endConsumerVisibleId: ").append(toIndentedString(endConsumerVisibleId)).append("\n");
    sb.append("    fuseElid: ").append(toIndentedString(fuseElid)).append("\n");
    sb.append("    powerDistributionId: ").append(toIndentedString(powerDistributionId)).append("\n");
    sb.append("    planPortNetworkCategory: ").append(toIndentedString(planPortNetworkCategory)).append("\n");
    sb.append("    endConsumerElid: ").append(toIndentedString(endConsumerElid)).append("\n");
    sb.append("    supplierLocation: ").append(toIndentedString(supplierLocation)).append("\n");
    sb.append("    portIdentifier: ").append(toIndentedString(portIdentifier)).append("\n");
    sb.append("    portNetworkCategory: ").append(toIndentedString(portNetworkCategory)).append("\n");
    sb.append("    fuseId: ").append(toIndentedString(fuseId)).append("\n");
    sb.append("    endConsumerId: ").append(toIndentedString(endConsumerId)).append("\n");
    sb.append("    portCategory: ").append(toIndentedString(portCategory)).append("\n");
    sb.append("    socketNo: ").append(toIndentedString(socketNo)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    powerDistributionLocation: ").append(toIndentedString(powerDistributionLocation)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    socketSide: ").append(toIndentedString(socketSide)).append("\n");
    sb.append("    powerConsumptionCalc: ").append(toIndentedString(powerConsumptionCalc)).append("\n");
    sb.append("    supplierElid: ").append(toIndentedString(supplierElid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

