/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkDuctBundleTypeRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkDuctRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkDuctRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctBundleUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateDuctBundleRequestData
 */
@JsonPropertyOrder({
  UpdateDuctBundleRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateDuctBundleRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateDuctBundleRequestData.JSON_PROPERTY_ID,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_DUCT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_DUCT_BUNDLE_TYPE,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateDuctBundleRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_DUCT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_DUCT_BUNDLE_TYPE,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateDuctBundleRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateDuctBundleRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateDuctBundleRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateDuctBundleRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateDuctBundleRequestData {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateDuctBundleCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_DUCT = "createLinkDuct";
  private List<UpdateDuctBundleCreateLinkDuctRequestData> createLinkDuct;

  public static final String JSON_PROPERTY_CREATE_LINK_DUCT_BUNDLE_TYPE = "createLinkDuctBundleType";
  private List<UpdateDuctBundleCreateLinkDuctBundleTypeRequestData> createLinkDuctBundleType;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateDuctBundleCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateDuctBundleCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateDuctBundleCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateDuctBundleCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateDuctBundleCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateDuctBundleDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_DUCT = "deleteLinkDuct";
  private List<UpdateDuctBundleDeleteLinkDuctRequestData> deleteLinkDuct;

  public static final String JSON_PROPERTY_DELETE_LINK_DUCT_BUNDLE_TYPE = "deleteLinkDuctBundleType";
  private List<UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData> deleteLinkDuctBundleType;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateDuctBundleDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateDuctBundleDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateDuctBundleDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateDuctBundleDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateDuctBundleDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateDuctBundleUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateDuctBundleUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateDuctBundleUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateDuctBundleRequestData() {
  }

  public UpdateDuctBundleRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateDuctBundleRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateDuctBundleRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateDuctBundleRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateDuctBundleRequestData createLinkContract(List<UpdateDuctBundleCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkContractItem(UpdateDuctBundleCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateDuctBundleCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateDuctBundleRequestData createLinkDuct(List<UpdateDuctBundleCreateLinkDuctRequestData> createLinkDuct) {
    
    this.createLinkDuct = createLinkDuct;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkDuctItem(UpdateDuctBundleCreateLinkDuctRequestData createLinkDuctItem) {
    if (this.createLinkDuct == null) {
      this.createLinkDuct = new ArrayList<>();
    }
    this.createLinkDuct.add(createLinkDuctItem);
    return this;
  }

   /**
   * Get createLinkDuct
   * @return createLinkDuct
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkDuctRequestData> getCreateLinkDuct() {
    return createLinkDuct;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDuct(List<UpdateDuctBundleCreateLinkDuctRequestData> createLinkDuct) {
    this.createLinkDuct = createLinkDuct;
  }


  public UpdateDuctBundleRequestData createLinkDuctBundleType(List<UpdateDuctBundleCreateLinkDuctBundleTypeRequestData> createLinkDuctBundleType) {
    
    this.createLinkDuctBundleType = createLinkDuctBundleType;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkDuctBundleTypeItem(UpdateDuctBundleCreateLinkDuctBundleTypeRequestData createLinkDuctBundleTypeItem) {
    if (this.createLinkDuctBundleType == null) {
      this.createLinkDuctBundleType = new ArrayList<>();
    }
    this.createLinkDuctBundleType.add(createLinkDuctBundleTypeItem);
    return this;
  }

   /**
   * Get createLinkDuctBundleType
   * @return createLinkDuctBundleType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_BUNDLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkDuctBundleTypeRequestData> getCreateLinkDuctBundleType() {
    return createLinkDuctBundleType;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DUCT_BUNDLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDuctBundleType(List<UpdateDuctBundleCreateLinkDuctBundleTypeRequestData> createLinkDuctBundleType) {
    this.createLinkDuctBundleType = createLinkDuctBundleType;
  }


  public UpdateDuctBundleRequestData createLinkFrameContract(List<UpdateDuctBundleCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkFrameContractItem(UpdateDuctBundleCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateDuctBundleCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateDuctBundleRequestData createLinkMaintenanceContract(List<UpdateDuctBundleCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkMaintenanceContractItem(UpdateDuctBundleCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateDuctBundleCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateDuctBundleRequestData createLinkOrganization(List<UpdateDuctBundleCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkOrganizationItem(UpdateDuctBundleCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateDuctBundleCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateDuctBundleRequestData createLinkPerson(List<UpdateDuctBundleCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkPersonItem(UpdateDuctBundleCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateDuctBundleCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateDuctBundleRequestData createLinkPersonGroup(List<UpdateDuctBundleCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateDuctBundleRequestData addCreateLinkPersonGroupItem(UpdateDuctBundleCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateDuctBundleCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateDuctBundleRequestData deleteLinkContract(List<UpdateDuctBundleDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkContractItem(UpdateDuctBundleDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateDuctBundleDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateDuctBundleRequestData deleteLinkDuct(List<UpdateDuctBundleDeleteLinkDuctRequestData> deleteLinkDuct) {
    
    this.deleteLinkDuct = deleteLinkDuct;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkDuctItem(UpdateDuctBundleDeleteLinkDuctRequestData deleteLinkDuctItem) {
    if (this.deleteLinkDuct == null) {
      this.deleteLinkDuct = new ArrayList<>();
    }
    this.deleteLinkDuct.add(deleteLinkDuctItem);
    return this;
  }

   /**
   * Get deleteLinkDuct
   * @return deleteLinkDuct
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkDuctRequestData> getDeleteLinkDuct() {
    return deleteLinkDuct;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDuct(List<UpdateDuctBundleDeleteLinkDuctRequestData> deleteLinkDuct) {
    this.deleteLinkDuct = deleteLinkDuct;
  }


  public UpdateDuctBundleRequestData deleteLinkDuctBundleType(List<UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData> deleteLinkDuctBundleType) {
    
    this.deleteLinkDuctBundleType = deleteLinkDuctBundleType;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkDuctBundleTypeItem(UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData deleteLinkDuctBundleTypeItem) {
    if (this.deleteLinkDuctBundleType == null) {
      this.deleteLinkDuctBundleType = new ArrayList<>();
    }
    this.deleteLinkDuctBundleType.add(deleteLinkDuctBundleTypeItem);
    return this;
  }

   /**
   * Get deleteLinkDuctBundleType
   * @return deleteLinkDuctBundleType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DUCT_BUNDLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData> getDeleteLinkDuctBundleType() {
    return deleteLinkDuctBundleType;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DUCT_BUNDLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDuctBundleType(List<UpdateDuctBundleDeleteLinkDuctBundleTypeRequestData> deleteLinkDuctBundleType) {
    this.deleteLinkDuctBundleType = deleteLinkDuctBundleType;
  }


  public UpdateDuctBundleRequestData deleteLinkFrameContract(List<UpdateDuctBundleDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkFrameContractItem(UpdateDuctBundleDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateDuctBundleDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateDuctBundleRequestData deleteLinkMaintenanceContract(List<UpdateDuctBundleDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkMaintenanceContractItem(UpdateDuctBundleDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateDuctBundleDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateDuctBundleRequestData deleteLinkOrganization(List<UpdateDuctBundleDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkOrganizationItem(UpdateDuctBundleDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateDuctBundleDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateDuctBundleRequestData deleteLinkPerson(List<UpdateDuctBundleDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkPersonItem(UpdateDuctBundleDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateDuctBundleDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateDuctBundleRequestData deleteLinkPersonGroup(List<UpdateDuctBundleDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateDuctBundleRequestData addDeleteLinkPersonGroupItem(UpdateDuctBundleDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateDuctBundleDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateDuctBundleRequestData updateLinkOrganization(List<UpdateDuctBundleUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateDuctBundleRequestData addUpdateLinkOrganizationItem(UpdateDuctBundleUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateDuctBundleUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateDuctBundleRequestData updateLinkPerson(List<UpdateDuctBundleUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateDuctBundleRequestData addUpdateLinkPersonItem(UpdateDuctBundleUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateDuctBundleUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateDuctBundleRequestData updateLinkPersonGroup(List<UpdateDuctBundleUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateDuctBundleRequestData addUpdateLinkPersonGroupItem(UpdateDuctBundleUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctBundleUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateDuctBundleUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDuctBundleRequestData updateDuctBundleRequestData = (UpdateDuctBundleRequestData) o;
    return Objects.equals(this.description, updateDuctBundleRequestData.description) &&
        Objects.equals(this.contextId, updateDuctBundleRequestData.contextId) &&
        Objects.equals(this.visibleId, updateDuctBundleRequestData.visibleId) &&
        Objects.equals(this.id, updateDuctBundleRequestData.id) &&
        Objects.equals(this.createLinkContract, updateDuctBundleRequestData.createLinkContract) &&
        Objects.equals(this.createLinkDuct, updateDuctBundleRequestData.createLinkDuct) &&
        Objects.equals(this.createLinkDuctBundleType, updateDuctBundleRequestData.createLinkDuctBundleType) &&
        Objects.equals(this.createLinkFrameContract, updateDuctBundleRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateDuctBundleRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateDuctBundleRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateDuctBundleRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateDuctBundleRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateDuctBundleRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkDuct, updateDuctBundleRequestData.deleteLinkDuct) &&
        Objects.equals(this.deleteLinkDuctBundleType, updateDuctBundleRequestData.deleteLinkDuctBundleType) &&
        Objects.equals(this.deleteLinkFrameContract, updateDuctBundleRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateDuctBundleRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateDuctBundleRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateDuctBundleRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateDuctBundleRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.updateLinkOrganization, updateDuctBundleRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateDuctBundleRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateDuctBundleRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, contextId, visibleId, id, createLinkContract, createLinkDuct, createLinkDuctBundleType, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkDuct, deleteLinkDuctBundleType, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDuctBundleRequestData {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkDuct: ").append(toIndentedString(createLinkDuct)).append("\n");
    sb.append("    createLinkDuctBundleType: ").append(toIndentedString(createLinkDuctBundleType)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkDuct: ").append(toIndentedString(deleteLinkDuct)).append("\n");
    sb.append("    deleteLinkDuctBundleType: ").append(toIndentedString(deleteLinkDuctBundleType)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

