/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkCustomBgpnbv4RequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkInterfaceRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkIpv4AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkStcipmV4IpAddress100048NRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkVirtualNasServerRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkVirtualServerRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressCreateLinkVirtualSwitchRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkInterfaceRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkIpv4AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkObjectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressSwapLinkHostnameRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressUpdateLinkCustomBgpnbv4RequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressUpdateLinkIpv4AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4AddressUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateIpv4AddressRequestData
 */
@JsonPropertyOrder({
  UpdateIpv4AddressRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_MULTIPLE_USAGE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_MAC_ADDRESS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DHCP_TYPE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_LOOKUP_ADDRESS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_H_INFO,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_REMARK,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_START_DATE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_DATE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_STATUS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_BGPNBV4,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_DEVICE_ALL,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_INTERFACE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_STCIPM_V4_IP_ADDRESS100048_N,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_SERVER,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_INTERFACE,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_OBJECT,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_SWAP_LINK_CONFIGURATION_DATA_CLASS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_SWAP_LINK_HOSTNAME,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_UPDATE_LINK_CUSTOM_BGPNBV4,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_UPDATE_LINK_IPV4_ADDRESS,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateIpv4AddressRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class UpdateIpv4AddressRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_MULTIPLE_USAGE = "multipleUsage";
  private Boolean multipleUsage;

  public static final String JSON_PROPERTY_MAC_ADDRESS = "macAddress";
  private String macAddress;

  public static final String JSON_PROPERTY_DHCP_TYPE = "dhcpType";
  private String dhcpType;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_LOOKUP_ADDRESS = "lookupAddress";
  private Boolean lookupAddress;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_H_INFO = "hInfo";
  private String hInfo;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private DateTime startDate;

  public static final String JSON_PROPERTY_DELETE_DATE = "deleteDate";
  private DateTime deleteDate;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateIpv4AddressCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_BGPNBV4 = "createLinkCustomBgpnbv4";
  private UpdateIpv4AddressCreateLinkCustomBgpnbv4RequestData createLinkCustomBgpnbv4;

  public static final String JSON_PROPERTY_CREATE_LINK_DEVICE_ALL = "createLinkDeviceAll";
  private List<UpdateIpv4AddressCreateLinkDeviceAllRequestData> createLinkDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateIpv4AddressCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_INTERFACE = "createLinkInterface";
  private List<UpdateIpv4AddressCreateLinkInterfaceRequestData> createLinkInterface;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS = "createLinkIpv4Address";
  private List<UpdateIpv4AddressCreateLinkIpv4AddressRequestData> createLinkIpv4Address;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateIpv4AddressCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateIpv4AddressCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateIpv4AddressCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateIpv4AddressCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA = "createLinkPhysicalPortData";
  private List<UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData;

  public static final String JSON_PROPERTY_CREATE_LINK_STCIPM_V4_IP_ADDRESS100048_N = "createLinkStcipmV4IpAddress100048N";
  private UpdateIpv4AddressCreateLinkStcipmV4IpAddress100048NRequestData createLinkStcipmV4IpAddress100048N;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER = "createLinkVirtualNasServer";
  private List<UpdateIpv4AddressCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_SERVER = "createLinkVirtualServer";
  private List<UpdateIpv4AddressCreateLinkVirtualServerRequestData> createLinkVirtualServer;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH = "createLinkVirtualSwitch";
  private List<UpdateIpv4AddressCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateIpv4AddressDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateIpv4AddressDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_INTERFACE = "deleteLinkInterface";
  private List<UpdateIpv4AddressDeleteLinkInterfaceRequestData> deleteLinkInterface;

  public static final String JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS = "deleteLinkIpv4Address";
  private List<UpdateIpv4AddressDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_OBJECT = "deleteLinkObject";
  private List<UpdateIpv4AddressDeleteLinkObjectRequestData> deleteLinkObject;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateIpv4AddressDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateIpv4AddressDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateIpv4AddressDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_SWAP_LINK_CONFIGURATION_DATA_CLASS = "swapLinkConfigurationDataClass";
  private List<UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData> swapLinkConfigurationDataClass;

  public static final String JSON_PROPERTY_SWAP_LINK_HOSTNAME = "swapLinkHostname";
  private UpdateIpv4AddressSwapLinkHostnameRequestData swapLinkHostname;

  public static final String JSON_PROPERTY_UPDATE_LINK_CUSTOM_BGPNBV4 = "updateLinkCustomBgpnbv4";
  private UpdateIpv4AddressUpdateLinkCustomBgpnbv4RequestData updateLinkCustomBgpnbv4;

  public static final String JSON_PROPERTY_UPDATE_LINK_IPV4_ADDRESS = "updateLinkIpv4Address";
  private List<UpdateIpv4AddressUpdateLinkIpv4AddressRequestData> updateLinkIpv4Address;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateIpv4AddressUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateIpv4AddressUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateIpv4AddressUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateIpv4AddressRequestData() {
  }

  public UpdateIpv4AddressRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateIpv4AddressRequestData multipleUsage(Boolean multipleUsage) {
    
    this.multipleUsage = multipleUsage;
    return this;
  }

   /**
   * Get multipleUsage
   * @return multipleUsage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTIPLE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMultipleUsage() {
    return multipleUsage;
  }


  @JsonProperty(JSON_PROPERTY_MULTIPLE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultipleUsage(Boolean multipleUsage) {
    this.multipleUsage = multipleUsage;
  }


  public UpdateIpv4AddressRequestData macAddress(String macAddress) {
    
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMacAddress() {
    return macAddress;
  }


  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }


  public UpdateIpv4AddressRequestData dhcpType(String dhcpType) {
    
    this.dhcpType = dhcpType;
    return this;
  }

   /**
   * Get dhcpType
   * @return dhcpType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpType() {
    return dhcpType;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpType(String dhcpType) {
    this.dhcpType = dhcpType;
  }


  public UpdateIpv4AddressRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateIpv4AddressRequestData lookupAddress(Boolean lookupAddress) {
    
    this.lookupAddress = lookupAddress;
    return this;
  }

   /**
   * Get lookupAddress
   * @return lookupAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOKUP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLookupAddress() {
    return lookupAddress;
  }


  @JsonProperty(JSON_PROPERTY_LOOKUP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLookupAddress(Boolean lookupAddress) {
    this.lookupAddress = lookupAddress;
  }


  public UpdateIpv4AddressRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateIpv4AddressRequestData hInfo(String hInfo) {
    
    this.hInfo = hInfo;
    return this;
  }

   /**
   * Get hInfo
   * @return hInfo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_H_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String gethInfo() {
    return hInfo;
  }


  @JsonProperty(JSON_PROPERTY_H_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void sethInfo(String hInfo) {
    this.hInfo = hInfo;
  }


  public UpdateIpv4AddressRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public UpdateIpv4AddressRequestData startDate(DateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(DateTime startDate) {
    this.startDate = startDate;
  }


  public UpdateIpv4AddressRequestData deleteDate(DateTime deleteDate) {
    
    this.deleteDate = deleteDate;
    return this;
  }

   /**
   * Get deleteDate
   * @return deleteDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getDeleteDate() {
    return deleteDate;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteDate(DateTime deleteDate) {
    this.deleteDate = deleteDate;
  }


  public UpdateIpv4AddressRequestData status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public UpdateIpv4AddressRequestData createLinkContract(List<UpdateIpv4AddressCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkContractItem(UpdateIpv4AddressCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateIpv4AddressCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateIpv4AddressRequestData createLinkCustomBgpnbv4(UpdateIpv4AddressCreateLinkCustomBgpnbv4RequestData createLinkCustomBgpnbv4) {
    
    this.createLinkCustomBgpnbv4 = createLinkCustomBgpnbv4;
    return this;
  }

   /**
   * Get createLinkCustomBgpnbv4
   * @return createLinkCustomBgpnbv4
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_BGPNBV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4AddressCreateLinkCustomBgpnbv4RequestData getCreateLinkCustomBgpnbv4() {
    return createLinkCustomBgpnbv4;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_BGPNBV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomBgpnbv4(UpdateIpv4AddressCreateLinkCustomBgpnbv4RequestData createLinkCustomBgpnbv4) {
    this.createLinkCustomBgpnbv4 = createLinkCustomBgpnbv4;
  }


  public UpdateIpv4AddressRequestData createLinkDeviceAll(List<UpdateIpv4AddressCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    
    this.createLinkDeviceAll = createLinkDeviceAll;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkDeviceAllItem(UpdateIpv4AddressCreateLinkDeviceAllRequestData createLinkDeviceAllItem) {
    if (this.createLinkDeviceAll == null) {
      this.createLinkDeviceAll = new ArrayList<>();
    }
    this.createLinkDeviceAll.add(createLinkDeviceAllItem);
    return this;
  }

   /**
   * Get createLinkDeviceAll
   * @return createLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkDeviceAllRequestData> getCreateLinkDeviceAll() {
    return createLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDeviceAll(List<UpdateIpv4AddressCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    this.createLinkDeviceAll = createLinkDeviceAll;
  }


  public UpdateIpv4AddressRequestData createLinkFrameContract(List<UpdateIpv4AddressCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkFrameContractItem(UpdateIpv4AddressCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateIpv4AddressCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateIpv4AddressRequestData createLinkInterface(List<UpdateIpv4AddressCreateLinkInterfaceRequestData> createLinkInterface) {
    
    this.createLinkInterface = createLinkInterface;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkInterfaceItem(UpdateIpv4AddressCreateLinkInterfaceRequestData createLinkInterfaceItem) {
    if (this.createLinkInterface == null) {
      this.createLinkInterface = new ArrayList<>();
    }
    this.createLinkInterface.add(createLinkInterfaceItem);
    return this;
  }

   /**
   * Get createLinkInterface
   * @return createLinkInterface
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkInterfaceRequestData> getCreateLinkInterface() {
    return createLinkInterface;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkInterface(List<UpdateIpv4AddressCreateLinkInterfaceRequestData> createLinkInterface) {
    this.createLinkInterface = createLinkInterface;
  }


  public UpdateIpv4AddressRequestData createLinkIpv4Address(List<UpdateIpv4AddressCreateLinkIpv4AddressRequestData> createLinkIpv4Address) {
    
    this.createLinkIpv4Address = createLinkIpv4Address;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkIpv4AddressItem(UpdateIpv4AddressCreateLinkIpv4AddressRequestData createLinkIpv4AddressItem) {
    if (this.createLinkIpv4Address == null) {
      this.createLinkIpv4Address = new ArrayList<>();
    }
    this.createLinkIpv4Address.add(createLinkIpv4AddressItem);
    return this;
  }

   /**
   * Get createLinkIpv4Address
   * @return createLinkIpv4Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkIpv4AddressRequestData> getCreateLinkIpv4Address() {
    return createLinkIpv4Address;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv4Address(List<UpdateIpv4AddressCreateLinkIpv4AddressRequestData> createLinkIpv4Address) {
    this.createLinkIpv4Address = createLinkIpv4Address;
  }


  public UpdateIpv4AddressRequestData createLinkMaintenanceContract(List<UpdateIpv4AddressCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkMaintenanceContractItem(UpdateIpv4AddressCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateIpv4AddressCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateIpv4AddressRequestData createLinkOrganization(List<UpdateIpv4AddressCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkOrganizationItem(UpdateIpv4AddressCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateIpv4AddressCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateIpv4AddressRequestData createLinkPerson(List<UpdateIpv4AddressCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkPersonItem(UpdateIpv4AddressCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateIpv4AddressCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateIpv4AddressRequestData createLinkPersonGroup(List<UpdateIpv4AddressCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkPersonGroupItem(UpdateIpv4AddressCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateIpv4AddressCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateIpv4AddressRequestData createLinkPhysicalPortData(List<UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData) {
    
    this.createLinkPhysicalPortData = createLinkPhysicalPortData;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkPhysicalPortDataItem(UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData createLinkPhysicalPortDataItem) {
    if (this.createLinkPhysicalPortData == null) {
      this.createLinkPhysicalPortData = new ArrayList<>();
    }
    this.createLinkPhysicalPortData.add(createLinkPhysicalPortDataItem);
    return this;
  }

   /**
   * Get createLinkPhysicalPortData
   * @return createLinkPhysicalPortData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData> getCreateLinkPhysicalPortData() {
    return createLinkPhysicalPortData;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PHYSICAL_PORT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPhysicalPortData(List<UpdateIpv4AddressCreateLinkPhysicalPortDataRequestData> createLinkPhysicalPortData) {
    this.createLinkPhysicalPortData = createLinkPhysicalPortData;
  }


  public UpdateIpv4AddressRequestData createLinkStcipmV4IpAddress100048N(UpdateIpv4AddressCreateLinkStcipmV4IpAddress100048NRequestData createLinkStcipmV4IpAddress100048N) {
    
    this.createLinkStcipmV4IpAddress100048N = createLinkStcipmV4IpAddress100048N;
    return this;
  }

   /**
   * Get createLinkStcipmV4IpAddress100048N
   * @return createLinkStcipmV4IpAddress100048N
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_STCIPM_V4_IP_ADDRESS100048_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4AddressCreateLinkStcipmV4IpAddress100048NRequestData getCreateLinkStcipmV4IpAddress100048N() {
    return createLinkStcipmV4IpAddress100048N;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_STCIPM_V4_IP_ADDRESS100048_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkStcipmV4IpAddress100048N(UpdateIpv4AddressCreateLinkStcipmV4IpAddress100048NRequestData createLinkStcipmV4IpAddress100048N) {
    this.createLinkStcipmV4IpAddress100048N = createLinkStcipmV4IpAddress100048N;
  }


  public UpdateIpv4AddressRequestData createLinkVirtualNasServer(List<UpdateIpv4AddressCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkVirtualNasServerItem(UpdateIpv4AddressCreateLinkVirtualNasServerRequestData createLinkVirtualNasServerItem) {
    if (this.createLinkVirtualNasServer == null) {
      this.createLinkVirtualNasServer = new ArrayList<>();
    }
    this.createLinkVirtualNasServer.add(createLinkVirtualNasServerItem);
    return this;
  }

   /**
   * Get createLinkVirtualNasServer
   * @return createLinkVirtualNasServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkVirtualNasServerRequestData> getCreateLinkVirtualNasServer() {
    return createLinkVirtualNasServer;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualNasServer(List<UpdateIpv4AddressCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
  }


  public UpdateIpv4AddressRequestData createLinkVirtualServer(List<UpdateIpv4AddressCreateLinkVirtualServerRequestData> createLinkVirtualServer) {
    
    this.createLinkVirtualServer = createLinkVirtualServer;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkVirtualServerItem(UpdateIpv4AddressCreateLinkVirtualServerRequestData createLinkVirtualServerItem) {
    if (this.createLinkVirtualServer == null) {
      this.createLinkVirtualServer = new ArrayList<>();
    }
    this.createLinkVirtualServer.add(createLinkVirtualServerItem);
    return this;
  }

   /**
   * Get createLinkVirtualServer
   * @return createLinkVirtualServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkVirtualServerRequestData> getCreateLinkVirtualServer() {
    return createLinkVirtualServer;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualServer(List<UpdateIpv4AddressCreateLinkVirtualServerRequestData> createLinkVirtualServer) {
    this.createLinkVirtualServer = createLinkVirtualServer;
  }


  public UpdateIpv4AddressRequestData createLinkVirtualSwitch(List<UpdateIpv4AddressCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
    return this;
  }

  public UpdateIpv4AddressRequestData addCreateLinkVirtualSwitchItem(UpdateIpv4AddressCreateLinkVirtualSwitchRequestData createLinkVirtualSwitchItem) {
    if (this.createLinkVirtualSwitch == null) {
      this.createLinkVirtualSwitch = new ArrayList<>();
    }
    this.createLinkVirtualSwitch.add(createLinkVirtualSwitchItem);
    return this;
  }

   /**
   * Get createLinkVirtualSwitch
   * @return createLinkVirtualSwitch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressCreateLinkVirtualSwitchRequestData> getCreateLinkVirtualSwitch() {
    return createLinkVirtualSwitch;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualSwitch(List<UpdateIpv4AddressCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
  }


  public UpdateIpv4AddressRequestData deleteLinkContract(List<UpdateIpv4AddressDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkContractItem(UpdateIpv4AddressDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateIpv4AddressDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateIpv4AddressRequestData deleteLinkFrameContract(List<UpdateIpv4AddressDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkFrameContractItem(UpdateIpv4AddressDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateIpv4AddressDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateIpv4AddressRequestData deleteLinkInterface(List<UpdateIpv4AddressDeleteLinkInterfaceRequestData> deleteLinkInterface) {
    
    this.deleteLinkInterface = deleteLinkInterface;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkInterfaceItem(UpdateIpv4AddressDeleteLinkInterfaceRequestData deleteLinkInterfaceItem) {
    if (this.deleteLinkInterface == null) {
      this.deleteLinkInterface = new ArrayList<>();
    }
    this.deleteLinkInterface.add(deleteLinkInterfaceItem);
    return this;
  }

   /**
   * Get deleteLinkInterface
   * @return deleteLinkInterface
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkInterfaceRequestData> getDeleteLinkInterface() {
    return deleteLinkInterface;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkInterface(List<UpdateIpv4AddressDeleteLinkInterfaceRequestData> deleteLinkInterface) {
    this.deleteLinkInterface = deleteLinkInterface;
  }


  public UpdateIpv4AddressRequestData deleteLinkIpv4Address(List<UpdateIpv4AddressDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address) {
    
    this.deleteLinkIpv4Address = deleteLinkIpv4Address;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkIpv4AddressItem(UpdateIpv4AddressDeleteLinkIpv4AddressRequestData deleteLinkIpv4AddressItem) {
    if (this.deleteLinkIpv4Address == null) {
      this.deleteLinkIpv4Address = new ArrayList<>();
    }
    this.deleteLinkIpv4Address.add(deleteLinkIpv4AddressItem);
    return this;
  }

   /**
   * Get deleteLinkIpv4Address
   * @return deleteLinkIpv4Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkIpv4AddressRequestData> getDeleteLinkIpv4Address() {
    return deleteLinkIpv4Address;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkIpv4Address(List<UpdateIpv4AddressDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address) {
    this.deleteLinkIpv4Address = deleteLinkIpv4Address;
  }


  public UpdateIpv4AddressRequestData deleteLinkMaintenanceContract(List<UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkMaintenanceContractItem(UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateIpv4AddressDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateIpv4AddressRequestData deleteLinkObject(List<UpdateIpv4AddressDeleteLinkObjectRequestData> deleteLinkObject) {
    
    this.deleteLinkObject = deleteLinkObject;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkObjectItem(UpdateIpv4AddressDeleteLinkObjectRequestData deleteLinkObjectItem) {
    if (this.deleteLinkObject == null) {
      this.deleteLinkObject = new ArrayList<>();
    }
    this.deleteLinkObject.add(deleteLinkObjectItem);
    return this;
  }

   /**
   * Get deleteLinkObject
   * @return deleteLinkObject
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkObjectRequestData> getDeleteLinkObject() {
    return deleteLinkObject;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkObject(List<UpdateIpv4AddressDeleteLinkObjectRequestData> deleteLinkObject) {
    this.deleteLinkObject = deleteLinkObject;
  }


  public UpdateIpv4AddressRequestData deleteLinkOrganization(List<UpdateIpv4AddressDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkOrganizationItem(UpdateIpv4AddressDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateIpv4AddressDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateIpv4AddressRequestData deleteLinkPerson(List<UpdateIpv4AddressDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkPersonItem(UpdateIpv4AddressDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateIpv4AddressDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateIpv4AddressRequestData deleteLinkPersonGroup(List<UpdateIpv4AddressDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateIpv4AddressRequestData addDeleteLinkPersonGroupItem(UpdateIpv4AddressDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateIpv4AddressDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateIpv4AddressRequestData swapLinkConfigurationDataClass(List<UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData> swapLinkConfigurationDataClass) {
    
    this.swapLinkConfigurationDataClass = swapLinkConfigurationDataClass;
    return this;
  }

  public UpdateIpv4AddressRequestData addSwapLinkConfigurationDataClassItem(UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData swapLinkConfigurationDataClassItem) {
    if (this.swapLinkConfigurationDataClass == null) {
      this.swapLinkConfigurationDataClass = new ArrayList<>();
    }
    this.swapLinkConfigurationDataClass.add(swapLinkConfigurationDataClassItem);
    return this;
  }

   /**
   * Get swapLinkConfigurationDataClass
   * @return swapLinkConfigurationDataClass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_CONFIGURATION_DATA_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData> getSwapLinkConfigurationDataClass() {
    return swapLinkConfigurationDataClass;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_CONFIGURATION_DATA_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkConfigurationDataClass(List<UpdateIpv4AddressSwapLinkConfigurationDataClassRequestData> swapLinkConfigurationDataClass) {
    this.swapLinkConfigurationDataClass = swapLinkConfigurationDataClass;
  }


  public UpdateIpv4AddressRequestData swapLinkHostname(UpdateIpv4AddressSwapLinkHostnameRequestData swapLinkHostname) {
    
    this.swapLinkHostname = swapLinkHostname;
    return this;
  }

   /**
   * Get swapLinkHostname
   * @return swapLinkHostname
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4AddressSwapLinkHostnameRequestData getSwapLinkHostname() {
    return swapLinkHostname;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkHostname(UpdateIpv4AddressSwapLinkHostnameRequestData swapLinkHostname) {
    this.swapLinkHostname = swapLinkHostname;
  }


  public UpdateIpv4AddressRequestData updateLinkCustomBgpnbv4(UpdateIpv4AddressUpdateLinkCustomBgpnbv4RequestData updateLinkCustomBgpnbv4) {
    
    this.updateLinkCustomBgpnbv4 = updateLinkCustomBgpnbv4;
    return this;
  }

   /**
   * Get updateLinkCustomBgpnbv4
   * @return updateLinkCustomBgpnbv4
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_BGPNBV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4AddressUpdateLinkCustomBgpnbv4RequestData getUpdateLinkCustomBgpnbv4() {
    return updateLinkCustomBgpnbv4;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_BGPNBV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkCustomBgpnbv4(UpdateIpv4AddressUpdateLinkCustomBgpnbv4RequestData updateLinkCustomBgpnbv4) {
    this.updateLinkCustomBgpnbv4 = updateLinkCustomBgpnbv4;
  }


  public UpdateIpv4AddressRequestData updateLinkIpv4Address(List<UpdateIpv4AddressUpdateLinkIpv4AddressRequestData> updateLinkIpv4Address) {
    
    this.updateLinkIpv4Address = updateLinkIpv4Address;
    return this;
  }

  public UpdateIpv4AddressRequestData addUpdateLinkIpv4AddressItem(UpdateIpv4AddressUpdateLinkIpv4AddressRequestData updateLinkIpv4AddressItem) {
    if (this.updateLinkIpv4Address == null) {
      this.updateLinkIpv4Address = new ArrayList<>();
    }
    this.updateLinkIpv4Address.add(updateLinkIpv4AddressItem);
    return this;
  }

   /**
   * Get updateLinkIpv4Address
   * @return updateLinkIpv4Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressUpdateLinkIpv4AddressRequestData> getUpdateLinkIpv4Address() {
    return updateLinkIpv4Address;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkIpv4Address(List<UpdateIpv4AddressUpdateLinkIpv4AddressRequestData> updateLinkIpv4Address) {
    this.updateLinkIpv4Address = updateLinkIpv4Address;
  }


  public UpdateIpv4AddressRequestData updateLinkOrganization(List<UpdateIpv4AddressUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateIpv4AddressRequestData addUpdateLinkOrganizationItem(UpdateIpv4AddressUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateIpv4AddressUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateIpv4AddressRequestData updateLinkPerson(List<UpdateIpv4AddressUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateIpv4AddressRequestData addUpdateLinkPersonItem(UpdateIpv4AddressUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateIpv4AddressUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateIpv4AddressRequestData updateLinkPersonGroup(List<UpdateIpv4AddressUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateIpv4AddressRequestData addUpdateLinkPersonGroupItem(UpdateIpv4AddressUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4AddressUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateIpv4AddressUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIpv4AddressRequestData updateIpv4AddressRequestData = (UpdateIpv4AddressRequestData) o;
    return Objects.equals(this.sourceId, updateIpv4AddressRequestData.sourceId) &&
        Objects.equals(this.multipleUsage, updateIpv4AddressRequestData.multipleUsage) &&
        Objects.equals(this.macAddress, updateIpv4AddressRequestData.macAddress) &&
        Objects.equals(this.dhcpType, updateIpv4AddressRequestData.dhcpType) &&
        Objects.equals(this.sourceSystem, updateIpv4AddressRequestData.sourceSystem) &&
        Objects.equals(this.lookupAddress, updateIpv4AddressRequestData.lookupAddress) &&
        Objects.equals(this.contextId, updateIpv4AddressRequestData.contextId) &&
        Objects.equals(this.hInfo, updateIpv4AddressRequestData.hInfo) &&
        Objects.equals(this.remark, updateIpv4AddressRequestData.remark) &&
        Objects.equals(this.startDate, updateIpv4AddressRequestData.startDate) &&
        Objects.equals(this.deleteDate, updateIpv4AddressRequestData.deleteDate) &&
        Objects.equals(this.status, updateIpv4AddressRequestData.status) &&
        Objects.equals(this.createLinkContract, updateIpv4AddressRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomBgpnbv4, updateIpv4AddressRequestData.createLinkCustomBgpnbv4) &&
        Objects.equals(this.createLinkDeviceAll, updateIpv4AddressRequestData.createLinkDeviceAll) &&
        Objects.equals(this.createLinkFrameContract, updateIpv4AddressRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkInterface, updateIpv4AddressRequestData.createLinkInterface) &&
        Objects.equals(this.createLinkIpv4Address, updateIpv4AddressRequestData.createLinkIpv4Address) &&
        Objects.equals(this.createLinkMaintenanceContract, updateIpv4AddressRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateIpv4AddressRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateIpv4AddressRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateIpv4AddressRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkPhysicalPortData, updateIpv4AddressRequestData.createLinkPhysicalPortData) &&
        Objects.equals(this.createLinkStcipmV4IpAddress100048N, updateIpv4AddressRequestData.createLinkStcipmV4IpAddress100048N) &&
        Objects.equals(this.createLinkVirtualNasServer, updateIpv4AddressRequestData.createLinkVirtualNasServer) &&
        Objects.equals(this.createLinkVirtualServer, updateIpv4AddressRequestData.createLinkVirtualServer) &&
        Objects.equals(this.createLinkVirtualSwitch, updateIpv4AddressRequestData.createLinkVirtualSwitch) &&
        Objects.equals(this.deleteLinkContract, updateIpv4AddressRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateIpv4AddressRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkInterface, updateIpv4AddressRequestData.deleteLinkInterface) &&
        Objects.equals(this.deleteLinkIpv4Address, updateIpv4AddressRequestData.deleteLinkIpv4Address) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateIpv4AddressRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkObject, updateIpv4AddressRequestData.deleteLinkObject) &&
        Objects.equals(this.deleteLinkOrganization, updateIpv4AddressRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateIpv4AddressRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateIpv4AddressRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.swapLinkConfigurationDataClass, updateIpv4AddressRequestData.swapLinkConfigurationDataClass) &&
        Objects.equals(this.swapLinkHostname, updateIpv4AddressRequestData.swapLinkHostname) &&
        Objects.equals(this.updateLinkCustomBgpnbv4, updateIpv4AddressRequestData.updateLinkCustomBgpnbv4) &&
        Objects.equals(this.updateLinkIpv4Address, updateIpv4AddressRequestData.updateLinkIpv4Address) &&
        Objects.equals(this.updateLinkOrganization, updateIpv4AddressRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateIpv4AddressRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateIpv4AddressRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, multipleUsage, macAddress, dhcpType, sourceSystem, lookupAddress, contextId, hInfo, remark, startDate, deleteDate, status, createLinkContract, createLinkCustomBgpnbv4, createLinkDeviceAll, createLinkFrameContract, createLinkInterface, createLinkIpv4Address, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkPhysicalPortData, createLinkStcipmV4IpAddress100048N, createLinkVirtualNasServer, createLinkVirtualServer, createLinkVirtualSwitch, deleteLinkContract, deleteLinkFrameContract, deleteLinkInterface, deleteLinkIpv4Address, deleteLinkMaintenanceContract, deleteLinkObject, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, swapLinkConfigurationDataClass, swapLinkHostname, updateLinkCustomBgpnbv4, updateLinkIpv4Address, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIpv4AddressRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    multipleUsage: ").append(toIndentedString(multipleUsage)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    dhcpType: ").append(toIndentedString(dhcpType)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    lookupAddress: ").append(toIndentedString(lookupAddress)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    hInfo: ").append(toIndentedString(hInfo)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    deleteDate: ").append(toIndentedString(deleteDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomBgpnbv4: ").append(toIndentedString(createLinkCustomBgpnbv4)).append("\n");
    sb.append("    createLinkDeviceAll: ").append(toIndentedString(createLinkDeviceAll)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkInterface: ").append(toIndentedString(createLinkInterface)).append("\n");
    sb.append("    createLinkIpv4Address: ").append(toIndentedString(createLinkIpv4Address)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkPhysicalPortData: ").append(toIndentedString(createLinkPhysicalPortData)).append("\n");
    sb.append("    createLinkStcipmV4IpAddress100048N: ").append(toIndentedString(createLinkStcipmV4IpAddress100048N)).append("\n");
    sb.append("    createLinkVirtualNasServer: ").append(toIndentedString(createLinkVirtualNasServer)).append("\n");
    sb.append("    createLinkVirtualServer: ").append(toIndentedString(createLinkVirtualServer)).append("\n");
    sb.append("    createLinkVirtualSwitch: ").append(toIndentedString(createLinkVirtualSwitch)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkInterface: ").append(toIndentedString(deleteLinkInterface)).append("\n");
    sb.append("    deleteLinkIpv4Address: ").append(toIndentedString(deleteLinkIpv4Address)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkObject: ").append(toIndentedString(deleteLinkObject)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    swapLinkConfigurationDataClass: ").append(toIndentedString(swapLinkConfigurationDataClass)).append("\n");
    sb.append("    swapLinkHostname: ").append(toIndentedString(swapLinkHostname)).append("\n");
    sb.append("    updateLinkCustomBgpnbv4: ").append(toIndentedString(updateLinkCustomBgpnbv4)).append("\n");
    sb.append("    updateLinkIpv4Address: ").append(toIndentedString(updateLinkIpv4Address)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

