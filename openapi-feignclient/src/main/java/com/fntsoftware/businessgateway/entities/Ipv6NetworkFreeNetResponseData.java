/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ipv6NetworkFreeNetResponseData
 */
@JsonPropertyOrder({
  Ipv6NetworkFreeNetResponseData.JSON_PROPERTY_END_IP,
  Ipv6NetworkFreeNetResponseData.JSON_PROPERTY_START_IP,
  Ipv6NetworkFreeNetResponseData.JSON_PROPERTY_NET_ID,
  Ipv6NetworkFreeNetResponseData.JSON_PROPERTY_NET_MANDATOR,
  Ipv6NetworkFreeNetResponseData.JSON_PROPERTY_NET_SIZE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class Ipv6NetworkFreeNetResponseData {
  public static final String JSON_PROPERTY_END_IP = "endIp";
  private String endIp;

  public static final String JSON_PROPERTY_START_IP = "startIp";
  private String startIp;

  public static final String JSON_PROPERTY_NET_ID = "netId";
  private String netId;

  public static final String JSON_PROPERTY_NET_MANDATOR = "netMandator";
  private String netMandator;

  public static final String JSON_PROPERTY_NET_SIZE = "netSize";
  private BigDecimal netSize;

  public Ipv6NetworkFreeNetResponseData() {
  }

  public Ipv6NetworkFreeNetResponseData endIp(String endIp) {
    
    this.endIp = endIp;
    return this;
  }

   /**
   * Get endIp
   * @return endIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndIp() {
    return endIp;
  }


  @JsonProperty(JSON_PROPERTY_END_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndIp(String endIp) {
    this.endIp = endIp;
  }


  public Ipv6NetworkFreeNetResponseData startIp(String startIp) {
    
    this.startIp = startIp;
    return this;
  }

   /**
   * Get startIp
   * @return startIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartIp() {
    return startIp;
  }


  @JsonProperty(JSON_PROPERTY_START_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartIp(String startIp) {
    this.startIp = startIp;
  }


  public Ipv6NetworkFreeNetResponseData netId(String netId) {
    
    this.netId = netId;
    return this;
  }

   /**
   * Get netId
   * @return netId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetId() {
    return netId;
  }


  @JsonProperty(JSON_PROPERTY_NET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetId(String netId) {
    this.netId = netId;
  }


  public Ipv6NetworkFreeNetResponseData netMandator(String netMandator) {
    
    this.netMandator = netMandator;
    return this;
  }

   /**
   * Get netMandator
   * @return netMandator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetMandator() {
    return netMandator;
  }


  @JsonProperty(JSON_PROPERTY_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetMandator(String netMandator) {
    this.netMandator = netMandator;
  }


  public Ipv6NetworkFreeNetResponseData netSize(BigDecimal netSize) {
    
    this.netSize = netSize;
    return this;
  }

   /**
   * Get netSize
   * @return netSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNetSize() {
    return netSize;
  }


  @JsonProperty(JSON_PROPERTY_NET_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetSize(BigDecimal netSize) {
    this.netSize = netSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ipv6NetworkFreeNetResponseData ipv6NetworkFreeNetResponseData = (Ipv6NetworkFreeNetResponseData) o;
    return Objects.equals(this.endIp, ipv6NetworkFreeNetResponseData.endIp) &&
        Objects.equals(this.startIp, ipv6NetworkFreeNetResponseData.startIp) &&
        Objects.equals(this.netId, ipv6NetworkFreeNetResponseData.netId) &&
        Objects.equals(this.netMandator, ipv6NetworkFreeNetResponseData.netMandator) &&
        Objects.equals(this.netSize, ipv6NetworkFreeNetResponseData.netSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endIp, startIp, netId, netMandator, netSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ipv6NetworkFreeNetResponseData {\n");
    sb.append("    endIp: ").append(toIndentedString(endIp)).append("\n");
    sb.append("    startIp: ").append(toIndentedString(startIp)).append("\n");
    sb.append("    netId: ").append(toIndentedString(netId)).append("\n");
    sb.append("    netMandator: ").append(toIndentedString(netMandator)).append("\n");
    sb.append("    netSize: ").append(toIndentedString(netSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

