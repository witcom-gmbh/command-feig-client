/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SignalTraceconnectionBaseInfo
 */
@JsonPropertyOrder({
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_VISIBLE_ID,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_ENTITY_ID,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_LENGTH,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_ATTENUATION,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_ID,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_NUM_LINES,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_CABLE_TYPE_ELID,
  SignalTraceconnectionBaseInfo.JSON_PROPERTY_PLAN_VIEW
})
@JsonTypeName("signalTraceconnectionBaseInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class SignalTraceconnectionBaseInfo {
  public static final String JSON_PROPERTY_CABLE_VISIBLE_ID = "cableVisibleId";
  private String cableVisibleId;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_CABLE_LENGTH = "cableLength";
  private BigDecimal cableLength;

  public static final String JSON_PROPERTY_CABLE_ATTENUATION = "cableAttenuation";
  private BigDecimal cableAttenuation;

  public static final String JSON_PROPERTY_CABLE_ID = "cableId";
  private String cableId;

  public static final String JSON_PROPERTY_CABLE_NUM_LINES = "cableNumLines";
  private BigDecimal cableNumLines;

  public static final String JSON_PROPERTY_CABLE_TYPE_ELID = "cableTypeElid";
  private String cableTypeElid;

  public static final String JSON_PROPERTY_PLAN_VIEW = "planView";
  private Boolean planView;

  public SignalTraceconnectionBaseInfo() {
  }

  public SignalTraceconnectionBaseInfo cableVisibleId(String cableVisibleId) {
    
    this.cableVisibleId = cableVisibleId;
    return this;
  }

   /**
   * Get cableVisibleId
   * @return cableVisibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableVisibleId() {
    return cableVisibleId;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableVisibleId(String cableVisibleId) {
    this.cableVisibleId = cableVisibleId;
  }


  public SignalTraceconnectionBaseInfo entityId(String entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public SignalTraceconnectionBaseInfo cableLength(BigDecimal cableLength) {
    
    this.cableLength = cableLength;
    return this;
  }

   /**
   * Get cableLength
   * @return cableLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCableLength() {
    return cableLength;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableLength(BigDecimal cableLength) {
    this.cableLength = cableLength;
  }


  public SignalTraceconnectionBaseInfo cableAttenuation(BigDecimal cableAttenuation) {
    
    this.cableAttenuation = cableAttenuation;
    return this;
  }

   /**
   * Get cableAttenuation
   * @return cableAttenuation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_ATTENUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCableAttenuation() {
    return cableAttenuation;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_ATTENUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableAttenuation(BigDecimal cableAttenuation) {
    this.cableAttenuation = cableAttenuation;
  }


  public SignalTraceconnectionBaseInfo cableId(String cableId) {
    
    this.cableId = cableId;
    return this;
  }

   /**
   * Get cableId
   * @return cableId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableId() {
    return cableId;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableId(String cableId) {
    this.cableId = cableId;
  }


  public SignalTraceconnectionBaseInfo cableNumLines(BigDecimal cableNumLines) {
    
    this.cableNumLines = cableNumLines;
    return this;
  }

   /**
   * Get cableNumLines
   * @return cableNumLines
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_NUM_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCableNumLines() {
    return cableNumLines;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_NUM_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableNumLines(BigDecimal cableNumLines) {
    this.cableNumLines = cableNumLines;
  }


  public SignalTraceconnectionBaseInfo cableTypeElid(String cableTypeElid) {
    
    this.cableTypeElid = cableTypeElid;
    return this;
  }

   /**
   * Get cableTypeElid
   * @return cableTypeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableTypeElid() {
    return cableTypeElid;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_TYPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableTypeElid(String cableTypeElid) {
    this.cableTypeElid = cableTypeElid;
  }


  public SignalTraceconnectionBaseInfo planView(Boolean planView) {
    
    this.planView = planView;
    return this;
  }

   /**
   * Get planView
   * @return planView
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPlanView() {
    return planView;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanView(Boolean planView) {
    this.planView = planView;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalTraceconnectionBaseInfo signalTraceconnectionBaseInfo = (SignalTraceconnectionBaseInfo) o;
    return Objects.equals(this.cableVisibleId, signalTraceconnectionBaseInfo.cableVisibleId) &&
        Objects.equals(this.entityId, signalTraceconnectionBaseInfo.entityId) &&
        Objects.equals(this.cableLength, signalTraceconnectionBaseInfo.cableLength) &&
        Objects.equals(this.cableAttenuation, signalTraceconnectionBaseInfo.cableAttenuation) &&
        Objects.equals(this.cableId, signalTraceconnectionBaseInfo.cableId) &&
        Objects.equals(this.cableNumLines, signalTraceconnectionBaseInfo.cableNumLines) &&
        Objects.equals(this.cableTypeElid, signalTraceconnectionBaseInfo.cableTypeElid) &&
        Objects.equals(this.planView, signalTraceconnectionBaseInfo.planView);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cableVisibleId, entityId, cableLength, cableAttenuation, cableId, cableNumLines, cableTypeElid, planView);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalTraceconnectionBaseInfo {\n");
    sb.append("    cableVisibleId: ").append(toIndentedString(cableVisibleId)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    cableLength: ").append(toIndentedString(cableLength)).append("\n");
    sb.append("    cableAttenuation: ").append(toIndentedString(cableAttenuation)).append("\n");
    sb.append("    cableId: ").append(toIndentedString(cableId)).append("\n");
    sb.append("    cableNumLines: ").append(toIndentedString(cableNumLines)).append("\n");
    sb.append("    cableTypeElid: ").append(toIndentedString(cableTypeElid)).append("\n");
    sb.append("    planView: ").append(toIndentedString(planView)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

