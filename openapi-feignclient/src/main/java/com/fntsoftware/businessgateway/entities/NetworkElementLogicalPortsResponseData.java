/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NetworkElementLogicalPortsResponseData
 */
@JsonPropertyOrder({
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_ELID,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PHYS_PORT2,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_STATUS,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_NAME,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PTOLP,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_NO,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_ATM,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_NAME_ORG,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_SIGNAL_RATE,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_ACTIVE_FROM,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_NOMINAL_UTILIZATION,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_RX_SERVICE_ELID,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_DEVICE_ALL_ELID,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_OVERLOAD_WARNING,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_BANDWIDTH,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_TX_SERVICE_ELID,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_CATEGORY,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PHYS_PORT2_SIDE,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_TYPE,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PHYS_PORT,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PHYS_PORT_SIDE,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_DEVICE_ALL_ID,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_PORT_FUNCTION,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_IMA,
  NetworkElementLogicalPortsResponseData.JSON_PROPERTY_ACTIVE_UNTIL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class NetworkElementLogicalPortsResponseData {
  public static final String JSON_PROPERTY_PORT_ELID = "portElid";
  private String portElid;

  public static final String JSON_PROPERTY_PHYS_PORT2 = "physPort2";
  private BigDecimal physPort2;

  public static final String JSON_PROPERTY_PORT_STATUS = "portStatus";
  private String portStatus;

  public static final String JSON_PROPERTY_PORT_NAME = "portName";
  private String portName;

  public static final String JSON_PROPERTY_PTOLP = "ptolp";
  private BigDecimal ptolp;

  public static final String JSON_PROPERTY_PORT_NO = "portNo";
  private BigDecimal portNo;

  public static final String JSON_PROPERTY_ATM = "atm";
  private Boolean atm;

  public static final String JSON_PROPERTY_PORT_NAME_ORG = "portNameOrg";
  private String portNameOrg;

  public static final String JSON_PROPERTY_SIGNAL_RATE = "signalRate";
  private String signalRate;

  public static final String JSON_PROPERTY_ACTIVE_FROM = "activeFrom";
  private DateTime activeFrom;

  public static final String JSON_PROPERTY_NOMINAL_UTILIZATION = "nominalUtilization";
  private BigDecimal nominalUtilization;

  public static final String JSON_PROPERTY_RX_SERVICE_ELID = "rxServiceElid";
  private String rxServiceElid;

  public static final String JSON_PROPERTY_DEVICE_ALL_ELID = "deviceAllElid";
  private String deviceAllElid;

  public static final String JSON_PROPERTY_OVERLOAD_WARNING = "overloadWarning";
  private String overloadWarning;

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private BigDecimal bandwidth;

  public static final String JSON_PROPERTY_TX_SERVICE_ELID = "txServiceElid";
  private String txServiceElid;

  public static final String JSON_PROPERTY_PORT_CATEGORY = "portCategory";
  private String portCategory;

  public static final String JSON_PROPERTY_PHYS_PORT2_SIDE = "physPort2Side";
  private String physPort2Side;

  public static final String JSON_PROPERTY_PORT_TYPE = "portType";
  private String portType;

  public static final String JSON_PROPERTY_PHYS_PORT = "physPort";
  private BigDecimal physPort;

  public static final String JSON_PROPERTY_PHYS_PORT_SIDE = "physPortSide";
  private String physPortSide;

  public static final String JSON_PROPERTY_DEVICE_ALL_ID = "deviceAllId";
  private String deviceAllId;

  public static final String JSON_PROPERTY_PORT_FUNCTION = "portFunction";
  private String portFunction;

  public static final String JSON_PROPERTY_IMA = "ima";
  private Boolean ima;

  public static final String JSON_PROPERTY_ACTIVE_UNTIL = "activeUntil";
  private DateTime activeUntil;

  public NetworkElementLogicalPortsResponseData() {
  }

  public NetworkElementLogicalPortsResponseData portElid(String portElid) {
    
    this.portElid = portElid;
    return this;
  }

   /**
   * Get portElid
   * @return portElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortElid() {
    return portElid;
  }


  @JsonProperty(JSON_PROPERTY_PORT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortElid(String portElid) {
    this.portElid = portElid;
  }


  public NetworkElementLogicalPortsResponseData physPort2(BigDecimal physPort2) {
    
    this.physPort2 = physPort2;
    return this;
  }

   /**
   * Get physPort2
   * @return physPort2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhysPort2() {
    return physPort2;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort2(BigDecimal physPort2) {
    this.physPort2 = physPort2;
  }


  public NetworkElementLogicalPortsResponseData portStatus(String portStatus) {
    
    this.portStatus = portStatus;
    return this;
  }

   /**
   * Get portStatus
   * @return portStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortStatus() {
    return portStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortStatus(String portStatus) {
    this.portStatus = portStatus;
  }


  public NetworkElementLogicalPortsResponseData portName(String portName) {
    
    this.portName = portName;
    return this;
  }

   /**
   * Get portName
   * @return portName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortName() {
    return portName;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortName(String portName) {
    this.portName = portName;
  }


  public NetworkElementLogicalPortsResponseData ptolp(BigDecimal ptolp) {
    
    this.ptolp = ptolp;
    return this;
  }

   /**
   * Get ptolp
   * @return ptolp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PTOLP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPtolp() {
    return ptolp;
  }


  @JsonProperty(JSON_PROPERTY_PTOLP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPtolp(BigDecimal ptolp) {
    this.ptolp = ptolp;
  }


  public NetworkElementLogicalPortsResponseData portNo(BigDecimal portNo) {
    
    this.portNo = portNo;
    return this;
  }

   /**
   * Get portNo
   * @return portNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPortNo() {
    return portNo;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNo(BigDecimal portNo) {
    this.portNo = portNo;
  }


  public NetworkElementLogicalPortsResponseData atm(Boolean atm) {
    
    this.atm = atm;
    return this;
  }

   /**
   * Get atm
   * @return atm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAtm() {
    return atm;
  }


  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtm(Boolean atm) {
    this.atm = atm;
  }


  public NetworkElementLogicalPortsResponseData portNameOrg(String portNameOrg) {
    
    this.portNameOrg = portNameOrg;
    return this;
  }

   /**
   * Get portNameOrg
   * @return portNameOrg
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortNameOrg() {
    return portNameOrg;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNameOrg(String portNameOrg) {
    this.portNameOrg = portNameOrg;
  }


  public NetworkElementLogicalPortsResponseData signalRate(String signalRate) {
    
    this.signalRate = signalRate;
    return this;
  }

   /**
   * Get signalRate
   * @return signalRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignalRate() {
    return signalRate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignalRate(String signalRate) {
    this.signalRate = signalRate;
  }


  public NetworkElementLogicalPortsResponseData activeFrom(DateTime activeFrom) {
    
    this.activeFrom = activeFrom;
    return this;
  }

   /**
   * Get activeFrom
   * @return activeFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveFrom() {
    return activeFrom;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFrom(DateTime activeFrom) {
    this.activeFrom = activeFrom;
  }


  public NetworkElementLogicalPortsResponseData nominalUtilization(BigDecimal nominalUtilization) {
    
    this.nominalUtilization = nominalUtilization;
    return this;
  }

   /**
   * Get nominalUtilization
   * @return nominalUtilization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalUtilization() {
    return nominalUtilization;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalUtilization(BigDecimal nominalUtilization) {
    this.nominalUtilization = nominalUtilization;
  }


  public NetworkElementLogicalPortsResponseData rxServiceElid(String rxServiceElid) {
    
    this.rxServiceElid = rxServiceElid;
    return this;
  }

   /**
   * Get rxServiceElid
   * @return rxServiceElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RX_SERVICE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRxServiceElid() {
    return rxServiceElid;
  }


  @JsonProperty(JSON_PROPERTY_RX_SERVICE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRxServiceElid(String rxServiceElid) {
    this.rxServiceElid = rxServiceElid;
  }


  public NetworkElementLogicalPortsResponseData deviceAllElid(String deviceAllElid) {
    
    this.deviceAllElid = deviceAllElid;
    return this;
  }

   /**
   * Get deviceAllElid
   * @return deviceAllElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceAllElid() {
    return deviceAllElid;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAllElid(String deviceAllElid) {
    this.deviceAllElid = deviceAllElid;
  }


  public NetworkElementLogicalPortsResponseData overloadWarning(String overloadWarning) {
    
    this.overloadWarning = overloadWarning;
    return this;
  }

   /**
   * Get overloadWarning
   * @return overloadWarning
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverloadWarning() {
    return overloadWarning;
  }


  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverloadWarning(String overloadWarning) {
    this.overloadWarning = overloadWarning;
  }


  public NetworkElementLogicalPortsResponseData bandwidth(BigDecimal bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }


  public NetworkElementLogicalPortsResponseData txServiceElid(String txServiceElid) {
    
    this.txServiceElid = txServiceElid;
    return this;
  }

   /**
   * Get txServiceElid
   * @return txServiceElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TX_SERVICE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTxServiceElid() {
    return txServiceElid;
  }


  @JsonProperty(JSON_PROPERTY_TX_SERVICE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxServiceElid(String txServiceElid) {
    this.txServiceElid = txServiceElid;
  }


  public NetworkElementLogicalPortsResponseData portCategory(String portCategory) {
    
    this.portCategory = portCategory;
    return this;
  }

   /**
   * Get portCategory
   * @return portCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortCategory() {
    return portCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortCategory(String portCategory) {
    this.portCategory = portCategory;
  }


  public NetworkElementLogicalPortsResponseData physPort2Side(String physPort2Side) {
    
    this.physPort2Side = physPort2Side;
    return this;
  }

   /**
   * Get physPort2Side
   * @return physPort2Side
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT2_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysPort2Side() {
    return physPort2Side;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT2_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort2Side(String physPort2Side) {
    this.physPort2Side = physPort2Side;
  }


  public NetworkElementLogicalPortsResponseData portType(String portType) {
    
    this.portType = portType;
    return this;
  }

   /**
   * Get portType
   * @return portType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortType() {
    return portType;
  }


  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortType(String portType) {
    this.portType = portType;
  }


  public NetworkElementLogicalPortsResponseData physPort(BigDecimal physPort) {
    
    this.physPort = physPort;
    return this;
  }

   /**
   * Get physPort
   * @return physPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhysPort() {
    return physPort;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort(BigDecimal physPort) {
    this.physPort = physPort;
  }


  public NetworkElementLogicalPortsResponseData physPortSide(String physPortSide) {
    
    this.physPortSide = physPortSide;
    return this;
  }

   /**
   * Get physPortSide
   * @return physPortSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysPortSide() {
    return physPortSide;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPortSide(String physPortSide) {
    this.physPortSide = physPortSide;
  }


  public NetworkElementLogicalPortsResponseData deviceAllId(String deviceAllId) {
    
    this.deviceAllId = deviceAllId;
    return this;
  }

   /**
   * Get deviceAllId
   * @return deviceAllId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceAllId() {
    return deviceAllId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAllId(String deviceAllId) {
    this.deviceAllId = deviceAllId;
  }


  public NetworkElementLogicalPortsResponseData portFunction(String portFunction) {
    
    this.portFunction = portFunction;
    return this;
  }

   /**
   * Get portFunction
   * @return portFunction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortFunction() {
    return portFunction;
  }


  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortFunction(String portFunction) {
    this.portFunction = portFunction;
  }


  public NetworkElementLogicalPortsResponseData ima(Boolean ima) {
    
    this.ima = ima;
    return this;
  }

   /**
   * Get ima
   * @return ima
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIma() {
    return ima;
  }


  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIma(Boolean ima) {
    this.ima = ima;
  }


  public NetworkElementLogicalPortsResponseData activeUntil(DateTime activeUntil) {
    
    this.activeUntil = activeUntil;
    return this;
  }

   /**
   * Get activeUntil
   * @return activeUntil
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveUntil() {
    return activeUntil;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveUntil(DateTime activeUntil) {
    this.activeUntil = activeUntil;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkElementLogicalPortsResponseData networkElementLogicalPortsResponseData = (NetworkElementLogicalPortsResponseData) o;
    return Objects.equals(this.portElid, networkElementLogicalPortsResponseData.portElid) &&
        Objects.equals(this.physPort2, networkElementLogicalPortsResponseData.physPort2) &&
        Objects.equals(this.portStatus, networkElementLogicalPortsResponseData.portStatus) &&
        Objects.equals(this.portName, networkElementLogicalPortsResponseData.portName) &&
        Objects.equals(this.ptolp, networkElementLogicalPortsResponseData.ptolp) &&
        Objects.equals(this.portNo, networkElementLogicalPortsResponseData.portNo) &&
        Objects.equals(this.atm, networkElementLogicalPortsResponseData.atm) &&
        Objects.equals(this.portNameOrg, networkElementLogicalPortsResponseData.portNameOrg) &&
        Objects.equals(this.signalRate, networkElementLogicalPortsResponseData.signalRate) &&
        Objects.equals(this.activeFrom, networkElementLogicalPortsResponseData.activeFrom) &&
        Objects.equals(this.nominalUtilization, networkElementLogicalPortsResponseData.nominalUtilization) &&
        Objects.equals(this.rxServiceElid, networkElementLogicalPortsResponseData.rxServiceElid) &&
        Objects.equals(this.deviceAllElid, networkElementLogicalPortsResponseData.deviceAllElid) &&
        Objects.equals(this.overloadWarning, networkElementLogicalPortsResponseData.overloadWarning) &&
        Objects.equals(this.bandwidth, networkElementLogicalPortsResponseData.bandwidth) &&
        Objects.equals(this.txServiceElid, networkElementLogicalPortsResponseData.txServiceElid) &&
        Objects.equals(this.portCategory, networkElementLogicalPortsResponseData.portCategory) &&
        Objects.equals(this.physPort2Side, networkElementLogicalPortsResponseData.physPort2Side) &&
        Objects.equals(this.portType, networkElementLogicalPortsResponseData.portType) &&
        Objects.equals(this.physPort, networkElementLogicalPortsResponseData.physPort) &&
        Objects.equals(this.physPortSide, networkElementLogicalPortsResponseData.physPortSide) &&
        Objects.equals(this.deviceAllId, networkElementLogicalPortsResponseData.deviceAllId) &&
        Objects.equals(this.portFunction, networkElementLogicalPortsResponseData.portFunction) &&
        Objects.equals(this.ima, networkElementLogicalPortsResponseData.ima) &&
        Objects.equals(this.activeUntil, networkElementLogicalPortsResponseData.activeUntil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portElid, physPort2, portStatus, portName, ptolp, portNo, atm, portNameOrg, signalRate, activeFrom, nominalUtilization, rxServiceElid, deviceAllElid, overloadWarning, bandwidth, txServiceElid, portCategory, physPort2Side, portType, physPort, physPortSide, deviceAllId, portFunction, ima, activeUntil);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkElementLogicalPortsResponseData {\n");
    sb.append("    portElid: ").append(toIndentedString(portElid)).append("\n");
    sb.append("    physPort2: ").append(toIndentedString(physPort2)).append("\n");
    sb.append("    portStatus: ").append(toIndentedString(portStatus)).append("\n");
    sb.append("    portName: ").append(toIndentedString(portName)).append("\n");
    sb.append("    ptolp: ").append(toIndentedString(ptolp)).append("\n");
    sb.append("    portNo: ").append(toIndentedString(portNo)).append("\n");
    sb.append("    atm: ").append(toIndentedString(atm)).append("\n");
    sb.append("    portNameOrg: ").append(toIndentedString(portNameOrg)).append("\n");
    sb.append("    signalRate: ").append(toIndentedString(signalRate)).append("\n");
    sb.append("    activeFrom: ").append(toIndentedString(activeFrom)).append("\n");
    sb.append("    nominalUtilization: ").append(toIndentedString(nominalUtilization)).append("\n");
    sb.append("    rxServiceElid: ").append(toIndentedString(rxServiceElid)).append("\n");
    sb.append("    deviceAllElid: ").append(toIndentedString(deviceAllElid)).append("\n");
    sb.append("    overloadWarning: ").append(toIndentedString(overloadWarning)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    txServiceElid: ").append(toIndentedString(txServiceElid)).append("\n");
    sb.append("    portCategory: ").append(toIndentedString(portCategory)).append("\n");
    sb.append("    physPort2Side: ").append(toIndentedString(physPort2Side)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    physPort: ").append(toIndentedString(physPort)).append("\n");
    sb.append("    physPortSide: ").append(toIndentedString(physPortSide)).append("\n");
    sb.append("    deviceAllId: ").append(toIndentedString(deviceAllId)).append("\n");
    sb.append("    portFunction: ").append(toIndentedString(portFunction)).append("\n");
    sb.append("    ima: ").append(toIndentedString(ima)).append("\n");
    sb.append("    activeUntil: ").append(toIndentedString(activeUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

