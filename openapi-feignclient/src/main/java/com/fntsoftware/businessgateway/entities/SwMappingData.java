/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SwMappingData
 */
@JsonPropertyOrder({
  SwMappingData.JSON_PROPERTY_SOFTWARE_PRODUCT_ID,
  SwMappingData.JSON_PROPERTY_SOFTWARE,
  SwMappingData.JSON_PROPERTY_ID,
  SwMappingData.JSON_PROPERTY_LANGUAGE_CODE,
  SwMappingData.JSON_PROPERTY_ELID,
  SwMappingData.JSON_PROPERTY_VERSION
})
@JsonTypeName("swMappingData")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class SwMappingData {
  public static final String JSON_PROPERTY_SOFTWARE_PRODUCT_ID = "softwareProductId";
  private String softwareProductId;

  public static final String JSON_PROPERTY_SOFTWARE = "software";
  private String software;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "languageCode";
  private String languageCode;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public SwMappingData() {
  }

  public SwMappingData softwareProductId(String softwareProductId) {
    
    this.softwareProductId = softwareProductId;
    return this;
  }

   /**
   * Get softwareProductId
   * @return softwareProductId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOFTWARE_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSoftwareProductId() {
    return softwareProductId;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareProductId(String softwareProductId) {
    this.softwareProductId = softwareProductId;
  }


  public SwMappingData software(String software) {
    
    this.software = software;
    return this;
  }

   /**
   * Get software
   * @return software
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOFTWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSoftware() {
    return software;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftware(String software) {
    this.software = software;
  }


  public SwMappingData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SwMappingData languageCode(String languageCode) {
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguageCode() {
    return languageCode;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public SwMappingData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public SwMappingData version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwMappingData swMappingData = (SwMappingData) o;
    return Objects.equals(this.softwareProductId, swMappingData.softwareProductId) &&
        Objects.equals(this.software, swMappingData.software) &&
        Objects.equals(this.id, swMappingData.id) &&
        Objects.equals(this.languageCode, swMappingData.languageCode) &&
        Objects.equals(this.elid, swMappingData.elid) &&
        Objects.equals(this.version, swMappingData.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(softwareProductId, software, id, languageCode, elid, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwMappingData {\n");
    sb.append("    softwareProductId: ").append(toIndentedString(softwareProductId)).append("\n");
    sb.append("    software: ").append(toIndentedString(software)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

