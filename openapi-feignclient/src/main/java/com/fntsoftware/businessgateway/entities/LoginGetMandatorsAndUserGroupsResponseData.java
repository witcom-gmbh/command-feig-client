/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.LoginmandatorGroup;
import com.fntsoftware.businessgateway.entities.LoginmandatorUser;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoginGetMandatorsAndUserGroupsResponseData
 */
@JsonPropertyOrder({
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_MAN_ID,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_DESCRIPTION,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_GROUPS,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_PLAN_ID,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_LOCALE,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_PLAN_MASTER_ELID,
  LoginGetMandatorsAndUserGroupsResponseData.JSON_PROPERTY_USERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class LoginGetMandatorsAndUserGroupsResponseData {
  public static final String JSON_PROPERTY_MAN_ID = "manId";
  private BigDecimal manId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<LoginmandatorGroup> groups;

  public static final String JSON_PROPERTY_PLAN_ID = "planId";
  private BigDecimal planId;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;

  public static final String JSON_PROPERTY_PLAN_MASTER_ELID = "planMasterElid";
  private String planMasterElid;

  public static final String JSON_PROPERTY_USERS = "users";
  private List<LoginmandatorUser> users;

  public LoginGetMandatorsAndUserGroupsResponseData() {
  }

  public LoginGetMandatorsAndUserGroupsResponseData manId(BigDecimal manId) {
    
    this.manId = manId;
    return this;
  }

   /**
   * Get manId
   * @return manId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getManId() {
    return manId;
  }


  @JsonProperty(JSON_PROPERTY_MAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManId(BigDecimal manId) {
    this.manId = manId;
  }


  public LoginGetMandatorsAndUserGroupsResponseData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public LoginGetMandatorsAndUserGroupsResponseData groups(List<LoginmandatorGroup> groups) {
    
    this.groups = groups;
    return this;
  }

  public LoginGetMandatorsAndUserGroupsResponseData addGroupsItem(LoginmandatorGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LoginmandatorGroup> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(List<LoginmandatorGroup> groups) {
    this.groups = groups;
  }


  public LoginGetMandatorsAndUserGroupsResponseData planId(BigDecimal planId) {
    
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPlanId() {
    return planId;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanId(BigDecimal planId) {
    this.planId = planId;
  }


  public LoginGetMandatorsAndUserGroupsResponseData locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
  }


  public LoginGetMandatorsAndUserGroupsResponseData planMasterElid(String planMasterElid) {
    
    this.planMasterElid = planMasterElid;
    return this;
  }

   /**
   * Get planMasterElid
   * @return planMasterElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAN_MASTER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanMasterElid() {
    return planMasterElid;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_MASTER_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanMasterElid(String planMasterElid) {
    this.planMasterElid = planMasterElid;
  }


  public LoginGetMandatorsAndUserGroupsResponseData users(List<LoginmandatorUser> users) {
    
    this.users = users;
    return this;
  }

  public LoginGetMandatorsAndUserGroupsResponseData addUsersItem(LoginmandatorUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LoginmandatorUser> getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsers(List<LoginmandatorUser> users) {
    this.users = users;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginGetMandatorsAndUserGroupsResponseData loginGetMandatorsAndUserGroupsResponseData = (LoginGetMandatorsAndUserGroupsResponseData) o;
    return Objects.equals(this.manId, loginGetMandatorsAndUserGroupsResponseData.manId) &&
        Objects.equals(this.description, loginGetMandatorsAndUserGroupsResponseData.description) &&
        Objects.equals(this.groups, loginGetMandatorsAndUserGroupsResponseData.groups) &&
        Objects.equals(this.planId, loginGetMandatorsAndUserGroupsResponseData.planId) &&
        Objects.equals(this.locale, loginGetMandatorsAndUserGroupsResponseData.locale) &&
        Objects.equals(this.planMasterElid, loginGetMandatorsAndUserGroupsResponseData.planMasterElid) &&
        Objects.equals(this.users, loginGetMandatorsAndUserGroupsResponseData.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(manId, description, groups, planId, locale, planMasterElid, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginGetMandatorsAndUserGroupsResponseData {\n");
    sb.append("    manId: ").append(toIndentedString(manId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    planMasterElid: ").append(toIndentedString(planMasterElid)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

