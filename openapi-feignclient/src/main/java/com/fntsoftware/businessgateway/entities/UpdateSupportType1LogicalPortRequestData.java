/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkCustomSvidRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortUpdateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType1LogicalPortUpdateLinkPersonRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSupportType1LogicalPortRequestData
 */
@JsonPropertyOrder({
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_RX_BLOCK_FLAG,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_ID,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PHYS_PORT2,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_STATUS,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_TX_BLOCK_FLAG,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_NO,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_ATM,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_NAME_ORG,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_SIGNAL_RATE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_ACTIVE_FROM,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_NOMINAL_UTILIZATION,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_DELETED,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_C_SERVICE_SIDE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_OVERLOAD_WARNING,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_BANDWIDTH,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_CATEGORY,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PHYS_PORT2_SIDE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_TYPE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PHYS_PORT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PHYS_PORT_SIDE,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_PORT_FUNCTION,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_IMA,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_ACTIVE_UNTIL,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSupportType1LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class UpdateSupportType1LogicalPortRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_RX_BLOCK_FLAG = "rxBlockFlag";
  private Boolean rxBlockFlag;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_ID = "cDataSourceId";
  private String cDataSourceId;

  public static final String JSON_PROPERTY_PHYS_PORT2 = "physPort2";
  private BigDecimal physPort2;

  public static final String JSON_PROPERTY_PORT_STATUS = "portStatus";
  private String portStatus;

  public static final String JSON_PROPERTY_TX_BLOCK_FLAG = "txBlockFlag";
  private Boolean txBlockFlag;

  public static final String JSON_PROPERTY_PORT_NO = "portNo";
  private BigDecimal portNo;

  public static final String JSON_PROPERTY_ATM = "atm";
  private Boolean atm;

  public static final String JSON_PROPERTY_PORT_NAME_ORG = "portNameOrg";
  private String portNameOrg;

  public static final String JSON_PROPERTY_SIGNAL_RATE = "signalRate";
  private String signalRate;

  public static final String JSON_PROPERTY_ACTIVE_FROM = "activeFrom";
  private DateTime activeFrom;

  public static final String JSON_PROPERTY_NOMINAL_UTILIZATION = "nominalUtilization";
  private BigDecimal nominalUtilization;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_DELETED = "cDataSourceDeleted";
  private String cDataSourceDeleted;

  public static final String JSON_PROPERTY_C_SERVICE_SIDE = "cServiceSide";
  private String cServiceSide;

  public static final String JSON_PROPERTY_OVERLOAD_WARNING = "overloadWarning";
  private String overloadWarning;

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private BigDecimal bandwidth;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_PORT_CATEGORY = "portCategory";
  private String portCategory;

  public static final String JSON_PROPERTY_PHYS_PORT2_SIDE = "physPort2Side";
  private String physPort2Side;

  public static final String JSON_PROPERTY_PORT_TYPE = "portType";
  private String portType;

  public static final String JSON_PROPERTY_C_DATA_SOURCE = "cDataSource";
  private String cDataSource;

  public static final String JSON_PROPERTY_PHYS_PORT = "physPort";
  private BigDecimal physPort;

  public static final String JSON_PROPERTY_PHYS_PORT_SIDE = "physPortSide";
  private String physPortSide;

  public static final String JSON_PROPERTY_PORT_FUNCTION = "portFunction";
  private String portFunction;

  public static final String JSON_PROPERTY_IMA = "ima";
  private Boolean ima;

  public static final String JSON_PROPERTY_ACTIVE_UNTIL = "activeUntil";
  private DateTime activeUntil;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSupportType1LogicalPortCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC = "createLinkCustomIpaccessSvc";
  private UpdateSupportType1LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID = "createLinkCustomSvid";
  private UpdateSupportType1LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT = "createLinkCustomTcoInterconnect";
  private UpdateSupportType1LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSupportType1LogicalPortCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSupportType1LogicalPortDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSupportType1LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS = "deleteLinkSubdividedPorts";
  private List<UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts;

  public static final String JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT = "updateLinkCustomTcoInterconnect";
  private UpdateSupportType1LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSupportType1LogicalPortUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSupportType1LogicalPortRequestData() {
  }

  public UpdateSupportType1LogicalPortRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateSupportType1LogicalPortRequestData rxBlockFlag(Boolean rxBlockFlag) {
    
    this.rxBlockFlag = rxBlockFlag;
    return this;
  }

   /**
   * Get rxBlockFlag
   * @return rxBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRxBlockFlag() {
    return rxBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRxBlockFlag(Boolean rxBlockFlag) {
    this.rxBlockFlag = rxBlockFlag;
  }


  public UpdateSupportType1LogicalPortRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateSupportType1LogicalPortRequestData cDataSourceId(String cDataSourceId) {
    
    this.cDataSourceId = cDataSourceId;
    return this;
  }

   /**
   * Get cDataSourceId
   * @return cDataSourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceId() {
    return cDataSourceId;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceId(String cDataSourceId) {
    this.cDataSourceId = cDataSourceId;
  }


  public UpdateSupportType1LogicalPortRequestData physPort2(BigDecimal physPort2) {
    
    this.physPort2 = physPort2;
    return this;
  }

   /**
   * Get physPort2
   * @return physPort2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhysPort2() {
    return physPort2;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort2(BigDecimal physPort2) {
    this.physPort2 = physPort2;
  }


  public UpdateSupportType1LogicalPortRequestData portStatus(String portStatus) {
    
    this.portStatus = portStatus;
    return this;
  }

   /**
   * Get portStatus
   * @return portStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortStatus() {
    return portStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortStatus(String portStatus) {
    this.portStatus = portStatus;
  }


  public UpdateSupportType1LogicalPortRequestData txBlockFlag(Boolean txBlockFlag) {
    
    this.txBlockFlag = txBlockFlag;
    return this;
  }

   /**
   * Get txBlockFlag
   * @return txBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTxBlockFlag() {
    return txBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxBlockFlag(Boolean txBlockFlag) {
    this.txBlockFlag = txBlockFlag;
  }


  public UpdateSupportType1LogicalPortRequestData portNo(BigDecimal portNo) {
    
    this.portNo = portNo;
    return this;
  }

   /**
   * Get portNo
   * @return portNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPortNo() {
    return portNo;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNo(BigDecimal portNo) {
    this.portNo = portNo;
  }


  public UpdateSupportType1LogicalPortRequestData atm(Boolean atm) {
    
    this.atm = atm;
    return this;
  }

   /**
   * Get atm
   * @return atm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAtm() {
    return atm;
  }


  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtm(Boolean atm) {
    this.atm = atm;
  }


  public UpdateSupportType1LogicalPortRequestData portNameOrg(String portNameOrg) {
    
    this.portNameOrg = portNameOrg;
    return this;
  }

   /**
   * Get portNameOrg
   * @return portNameOrg
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortNameOrg() {
    return portNameOrg;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNameOrg(String portNameOrg) {
    this.portNameOrg = portNameOrg;
  }


  public UpdateSupportType1LogicalPortRequestData signalRate(String signalRate) {
    
    this.signalRate = signalRate;
    return this;
  }

   /**
   * Get signalRate
   * @return signalRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignalRate() {
    return signalRate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignalRate(String signalRate) {
    this.signalRate = signalRate;
  }


  public UpdateSupportType1LogicalPortRequestData activeFrom(DateTime activeFrom) {
    
    this.activeFrom = activeFrom;
    return this;
  }

   /**
   * Get activeFrom
   * @return activeFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveFrom() {
    return activeFrom;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFrom(DateTime activeFrom) {
    this.activeFrom = activeFrom;
  }


  public UpdateSupportType1LogicalPortRequestData nominalUtilization(BigDecimal nominalUtilization) {
    
    this.nominalUtilization = nominalUtilization;
    return this;
  }

   /**
   * Get nominalUtilization
   * @return nominalUtilization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalUtilization() {
    return nominalUtilization;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalUtilization(BigDecimal nominalUtilization) {
    this.nominalUtilization = nominalUtilization;
  }


  public UpdateSupportType1LogicalPortRequestData cDataSourceDeleted(String cDataSourceDeleted) {
    
    this.cDataSourceDeleted = cDataSourceDeleted;
    return this;
  }

   /**
   * Get cDataSourceDeleted
   * @return cDataSourceDeleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceDeleted() {
    return cDataSourceDeleted;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceDeleted(String cDataSourceDeleted) {
    this.cDataSourceDeleted = cDataSourceDeleted;
  }


  public UpdateSupportType1LogicalPortRequestData cServiceSide(String cServiceSide) {
    
    this.cServiceSide = cServiceSide;
    return this;
  }

   /**
   * Get cServiceSide
   * @return cServiceSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcServiceSide() {
    return cServiceSide;
  }


  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcServiceSide(String cServiceSide) {
    this.cServiceSide = cServiceSide;
  }


  public UpdateSupportType1LogicalPortRequestData overloadWarning(String overloadWarning) {
    
    this.overloadWarning = overloadWarning;
    return this;
  }

   /**
   * Get overloadWarning
   * @return overloadWarning
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverloadWarning() {
    return overloadWarning;
  }


  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverloadWarning(String overloadWarning) {
    this.overloadWarning = overloadWarning;
  }


  public UpdateSupportType1LogicalPortRequestData bandwidth(BigDecimal bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }


  public UpdateSupportType1LogicalPortRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSupportType1LogicalPortRequestData portCategory(String portCategory) {
    
    this.portCategory = portCategory;
    return this;
  }

   /**
   * Get portCategory
   * @return portCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortCategory() {
    return portCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortCategory(String portCategory) {
    this.portCategory = portCategory;
  }


  public UpdateSupportType1LogicalPortRequestData physPort2Side(String physPort2Side) {
    
    this.physPort2Side = physPort2Side;
    return this;
  }

   /**
   * Get physPort2Side
   * @return physPort2Side
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT2_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysPort2Side() {
    return physPort2Side;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT2_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort2Side(String physPort2Side) {
    this.physPort2Side = physPort2Side;
  }


  public UpdateSupportType1LogicalPortRequestData portType(String portType) {
    
    this.portType = portType;
    return this;
  }

   /**
   * Get portType
   * @return portType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortType() {
    return portType;
  }


  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortType(String portType) {
    this.portType = portType;
  }


  public UpdateSupportType1LogicalPortRequestData cDataSource(String cDataSource) {
    
    this.cDataSource = cDataSource;
    return this;
  }

   /**
   * Get cDataSource
   * @return cDataSource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSource() {
    return cDataSource;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSource(String cDataSource) {
    this.cDataSource = cDataSource;
  }


  public UpdateSupportType1LogicalPortRequestData physPort(BigDecimal physPort) {
    
    this.physPort = physPort;
    return this;
  }

   /**
   * Get physPort
   * @return physPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPhysPort() {
    return physPort;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPort(BigDecimal physPort) {
    this.physPort = physPort;
  }


  public UpdateSupportType1LogicalPortRequestData physPortSide(String physPortSide) {
    
    this.physPortSide = physPortSide;
    return this;
  }

   /**
   * Get physPortSide
   * @return physPortSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_PORT_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysPortSide() {
    return physPortSide;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_PORT_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysPortSide(String physPortSide) {
    this.physPortSide = physPortSide;
  }


  public UpdateSupportType1LogicalPortRequestData portFunction(String portFunction) {
    
    this.portFunction = portFunction;
    return this;
  }

   /**
   * Get portFunction
   * @return portFunction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortFunction() {
    return portFunction;
  }


  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortFunction(String portFunction) {
    this.portFunction = portFunction;
  }


  public UpdateSupportType1LogicalPortRequestData ima(Boolean ima) {
    
    this.ima = ima;
    return this;
  }

   /**
   * Get ima
   * @return ima
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIma() {
    return ima;
  }


  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIma(Boolean ima) {
    this.ima = ima;
  }


  public UpdateSupportType1LogicalPortRequestData activeUntil(DateTime activeUntil) {
    
    this.activeUntil = activeUntil;
    return this;
  }

   /**
   * Get activeUntil
   * @return activeUntil
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveUntil() {
    return activeUntil;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveUntil(DateTime activeUntil) {
    this.activeUntil = activeUntil;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkContract(List<UpdateSupportType1LogicalPortCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkContractItem(UpdateSupportType1LogicalPortCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSupportType1LogicalPortCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkCustomIpaccessSvc(UpdateSupportType1LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
    return this;
  }

   /**
   * Get createLinkCustomIpaccessSvc
   * @return createLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType1LogicalPortCreateLinkCustomIpaccessSvcRequestData getCreateLinkCustomIpaccessSvc() {
    return createLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomIpaccessSvc(UpdateSupportType1LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkCustomSvid(UpdateSupportType1LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid) {
    
    this.createLinkCustomSvid = createLinkCustomSvid;
    return this;
  }

   /**
   * Get createLinkCustomSvid
   * @return createLinkCustomSvid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType1LogicalPortCreateLinkCustomSvidRequestData getCreateLinkCustomSvid() {
    return createLinkCustomSvid;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomSvid(UpdateSupportType1LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid) {
    this.createLinkCustomSvid = createLinkCustomSvid;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkCustomTcoInterconnect(UpdateSupportType1LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get createLinkCustomTcoInterconnect
   * @return createLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType1LogicalPortCreateLinkCustomTcoInterconnectRequestData getCreateLinkCustomTcoInterconnect() {
    return createLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomTcoInterconnect(UpdateSupportType1LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkFrameContract(List<UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkFrameContractItem(UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSupportType1LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkMaintenanceContract(List<UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkMaintenanceContractItem(UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateSupportType1LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkOrganization(List<UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkOrganizationItem(UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSupportType1LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkPerson(List<UpdateSupportType1LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkPersonItem(UpdateSupportType1LogicalPortCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSupportType1LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSupportType1LogicalPortRequestData createLinkPersonGroup(List<UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addCreateLinkPersonGroupItem(UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSupportType1LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkContract(List<UpdateSupportType1LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkContractItem(UpdateSupportType1LogicalPortDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSupportType1LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkFrameContract(List<UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkFrameContractItem(UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSupportType1LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkMaintenanceContract(List<UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkMaintenanceContractItem(UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateSupportType1LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkOrganization(List<UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkOrganizationItem(UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSupportType1LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkPerson(List<UpdateSupportType1LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkPersonItem(UpdateSupportType1LogicalPortDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSupportType1LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkPersonGroup(List<UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkPersonGroupItem(UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSupportType1LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSupportType1LogicalPortRequestData deleteLinkSubdividedPorts(List<UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addDeleteLinkSubdividedPortsItem(UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData deleteLinkSubdividedPortsItem) {
    if (this.deleteLinkSubdividedPorts == null) {
      this.deleteLinkSubdividedPorts = new ArrayList<>();
    }
    this.deleteLinkSubdividedPorts.add(deleteLinkSubdividedPortsItem);
    return this;
  }

   /**
   * Get deleteLinkSubdividedPorts
   * @return deleteLinkSubdividedPorts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData> getDeleteLinkSubdividedPorts() {
    return deleteLinkSubdividedPorts;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkSubdividedPorts(List<UpdateSupportType1LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
  }


  public UpdateSupportType1LogicalPortRequestData updateLinkCustomTcoInterconnect(UpdateSupportType1LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get updateLinkCustomTcoInterconnect
   * @return updateLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType1LogicalPortUpdateLinkCustomTcoInterconnectRequestData getUpdateLinkCustomTcoInterconnect() {
    return updateLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkCustomTcoInterconnect(UpdateSupportType1LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
  }


  public UpdateSupportType1LogicalPortRequestData updateLinkOrganization(List<UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addUpdateLinkOrganizationItem(UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSupportType1LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSupportType1LogicalPortRequestData updateLinkPerson(List<UpdateSupportType1LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addUpdateLinkPersonItem(UpdateSupportType1LogicalPortUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSupportType1LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSupportType1LogicalPortRequestData updateLinkPersonGroup(List<UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSupportType1LogicalPortRequestData addUpdateLinkPersonGroupItem(UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSupportType1LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSupportType1LogicalPortRequestData updateSupportType1LogicalPortRequestData = (UpdateSupportType1LogicalPortRequestData) o;
    return Objects.equals(this.sourceId, updateSupportType1LogicalPortRequestData.sourceId) &&
        Objects.equals(this.rxBlockFlag, updateSupportType1LogicalPortRequestData.rxBlockFlag) &&
        Objects.equals(this.sourceSystem, updateSupportType1LogicalPortRequestData.sourceSystem) &&
        Objects.equals(this.cDataSourceId, updateSupportType1LogicalPortRequestData.cDataSourceId) &&
        Objects.equals(this.physPort2, updateSupportType1LogicalPortRequestData.physPort2) &&
        Objects.equals(this.portStatus, updateSupportType1LogicalPortRequestData.portStatus) &&
        Objects.equals(this.txBlockFlag, updateSupportType1LogicalPortRequestData.txBlockFlag) &&
        Objects.equals(this.portNo, updateSupportType1LogicalPortRequestData.portNo) &&
        Objects.equals(this.atm, updateSupportType1LogicalPortRequestData.atm) &&
        Objects.equals(this.portNameOrg, updateSupportType1LogicalPortRequestData.portNameOrg) &&
        Objects.equals(this.signalRate, updateSupportType1LogicalPortRequestData.signalRate) &&
        Objects.equals(this.activeFrom, updateSupportType1LogicalPortRequestData.activeFrom) &&
        Objects.equals(this.nominalUtilization, updateSupportType1LogicalPortRequestData.nominalUtilization) &&
        Objects.equals(this.cDataSourceDeleted, updateSupportType1LogicalPortRequestData.cDataSourceDeleted) &&
        Objects.equals(this.cServiceSide, updateSupportType1LogicalPortRequestData.cServiceSide) &&
        Objects.equals(this.overloadWarning, updateSupportType1LogicalPortRequestData.overloadWarning) &&
        Objects.equals(this.bandwidth, updateSupportType1LogicalPortRequestData.bandwidth) &&
        Objects.equals(this.contextId, updateSupportType1LogicalPortRequestData.contextId) &&
        Objects.equals(this.portCategory, updateSupportType1LogicalPortRequestData.portCategory) &&
        Objects.equals(this.physPort2Side, updateSupportType1LogicalPortRequestData.physPort2Side) &&
        Objects.equals(this.portType, updateSupportType1LogicalPortRequestData.portType) &&
        Objects.equals(this.cDataSource, updateSupportType1LogicalPortRequestData.cDataSource) &&
        Objects.equals(this.physPort, updateSupportType1LogicalPortRequestData.physPort) &&
        Objects.equals(this.physPortSide, updateSupportType1LogicalPortRequestData.physPortSide) &&
        Objects.equals(this.portFunction, updateSupportType1LogicalPortRequestData.portFunction) &&
        Objects.equals(this.ima, updateSupportType1LogicalPortRequestData.ima) &&
        Objects.equals(this.activeUntil, updateSupportType1LogicalPortRequestData.activeUntil) &&
        Objects.equals(this.createLinkContract, updateSupportType1LogicalPortRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomIpaccessSvc, updateSupportType1LogicalPortRequestData.createLinkCustomIpaccessSvc) &&
        Objects.equals(this.createLinkCustomSvid, updateSupportType1LogicalPortRequestData.createLinkCustomSvid) &&
        Objects.equals(this.createLinkCustomTcoInterconnect, updateSupportType1LogicalPortRequestData.createLinkCustomTcoInterconnect) &&
        Objects.equals(this.createLinkFrameContract, updateSupportType1LogicalPortRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateSupportType1LogicalPortRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateSupportType1LogicalPortRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSupportType1LogicalPortRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSupportType1LogicalPortRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateSupportType1LogicalPortRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSupportType1LogicalPortRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateSupportType1LogicalPortRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSupportType1LogicalPortRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSupportType1LogicalPortRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSupportType1LogicalPortRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkSubdividedPorts, updateSupportType1LogicalPortRequestData.deleteLinkSubdividedPorts) &&
        Objects.equals(this.updateLinkCustomTcoInterconnect, updateSupportType1LogicalPortRequestData.updateLinkCustomTcoInterconnect) &&
        Objects.equals(this.updateLinkOrganization, updateSupportType1LogicalPortRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSupportType1LogicalPortRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSupportType1LogicalPortRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, rxBlockFlag, sourceSystem, cDataSourceId, physPort2, portStatus, txBlockFlag, portNo, atm, portNameOrg, signalRate, activeFrom, nominalUtilization, cDataSourceDeleted, cServiceSide, overloadWarning, bandwidth, contextId, portCategory, physPort2Side, portType, cDataSource, physPort, physPortSide, portFunction, ima, activeUntil, createLinkContract, createLinkCustomIpaccessSvc, createLinkCustomSvid, createLinkCustomTcoInterconnect, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkSubdividedPorts, updateLinkCustomTcoInterconnect, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSupportType1LogicalPortRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    rxBlockFlag: ").append(toIndentedString(rxBlockFlag)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    cDataSourceId: ").append(toIndentedString(cDataSourceId)).append("\n");
    sb.append("    physPort2: ").append(toIndentedString(physPort2)).append("\n");
    sb.append("    portStatus: ").append(toIndentedString(portStatus)).append("\n");
    sb.append("    txBlockFlag: ").append(toIndentedString(txBlockFlag)).append("\n");
    sb.append("    portNo: ").append(toIndentedString(portNo)).append("\n");
    sb.append("    atm: ").append(toIndentedString(atm)).append("\n");
    sb.append("    portNameOrg: ").append(toIndentedString(portNameOrg)).append("\n");
    sb.append("    signalRate: ").append(toIndentedString(signalRate)).append("\n");
    sb.append("    activeFrom: ").append(toIndentedString(activeFrom)).append("\n");
    sb.append("    nominalUtilization: ").append(toIndentedString(nominalUtilization)).append("\n");
    sb.append("    cDataSourceDeleted: ").append(toIndentedString(cDataSourceDeleted)).append("\n");
    sb.append("    cServiceSide: ").append(toIndentedString(cServiceSide)).append("\n");
    sb.append("    overloadWarning: ").append(toIndentedString(overloadWarning)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    portCategory: ").append(toIndentedString(portCategory)).append("\n");
    sb.append("    physPort2Side: ").append(toIndentedString(physPort2Side)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    cDataSource: ").append(toIndentedString(cDataSource)).append("\n");
    sb.append("    physPort: ").append(toIndentedString(physPort)).append("\n");
    sb.append("    physPortSide: ").append(toIndentedString(physPortSide)).append("\n");
    sb.append("    portFunction: ").append(toIndentedString(portFunction)).append("\n");
    sb.append("    ima: ").append(toIndentedString(ima)).append("\n");
    sb.append("    activeUntil: ").append(toIndentedString(activeUntil)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomIpaccessSvc: ").append(toIndentedString(createLinkCustomIpaccessSvc)).append("\n");
    sb.append("    createLinkCustomSvid: ").append(toIndentedString(createLinkCustomSvid)).append("\n");
    sb.append("    createLinkCustomTcoInterconnect: ").append(toIndentedString(createLinkCustomTcoInterconnect)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkSubdividedPorts: ").append(toIndentedString(deleteLinkSubdividedPorts)).append("\n");
    sb.append("    updateLinkCustomTcoInterconnect: ").append(toIndentedString(updateLinkCustomTcoInterconnect)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

