/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebCreateLinkSoftwareInstallationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSoftwareInstanceWebUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSoftwareInstanceWebRequestData
 */
@JsonPropertyOrder({
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_LOADBALANCED,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DOC_ROOT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_SSL_PORT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_URL,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_PORT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_NAME,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_ADMIN_SERVER,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_ADMIN_PORT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_ID,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_REDIRECTION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_STATUS,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_CREATE_LINK_SOFTWARE_INSTALLATION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSoftwareInstanceWebRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class UpdateSoftwareInstanceWebRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_LOADBALANCED = "loadbalanced";
  private Boolean loadbalanced;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DOC_ROOT = "docRoot";
  private String docRoot;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_SSL_PORT = "sslPort";
  private String sslPort;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_PORT = "port";
  private String port;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ADMIN_SERVER = "adminServer";
  private String adminServer;

  public static final String JSON_PROPERTY_ADMIN_PORT = "adminPort";
  private String adminPort;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_REDIRECTION = "redirection";
  private String redirection;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSoftwareInstanceWebCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSoftwareInstanceWebCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_SOFTWARE_INSTALLATION = "createLinkSoftwareInstallation";
  private UpdateSoftwareInstanceWebCreateLinkSoftwareInstallationRequestData createLinkSoftwareInstallation;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSoftwareInstanceWebDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSoftwareInstanceWebDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSoftwareInstanceWebUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSoftwareInstanceWebRequestData() {
  }

  public UpdateSoftwareInstanceWebRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateSoftwareInstanceWebRequestData loadbalanced(Boolean loadbalanced) {
    
    this.loadbalanced = loadbalanced;
    return this;
  }

   /**
   * Get loadbalanced
   * @return loadbalanced
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOADBALANCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoadbalanced() {
    return loadbalanced;
  }


  @JsonProperty(JSON_PROPERTY_LOADBALANCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadbalanced(Boolean loadbalanced) {
    this.loadbalanced = loadbalanced;
  }


  public UpdateSoftwareInstanceWebRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateSoftwareInstanceWebRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSoftwareInstanceWebRequestData docRoot(String docRoot) {
    
    this.docRoot = docRoot;
    return this;
  }

   /**
   * Get docRoot
   * @return docRoot
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOC_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocRoot() {
    return docRoot;
  }


  @JsonProperty(JSON_PROPERTY_DOC_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocRoot(String docRoot) {
    this.docRoot = docRoot;
  }


  public UpdateSoftwareInstanceWebRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSoftwareInstanceWebRequestData sslPort(String sslPort) {
    
    this.sslPort = sslPort;
    return this;
  }

   /**
   * Get sslPort
   * @return sslPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSslPort() {
    return sslPort;
  }


  @JsonProperty(JSON_PROPERTY_SSL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSslPort(String sslPort) {
    this.sslPort = sslPort;
  }


  public UpdateSoftwareInstanceWebRequestData url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public UpdateSoftwareInstanceWebRequestData port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(String port) {
    this.port = port;
  }


  public UpdateSoftwareInstanceWebRequestData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateSoftwareInstanceWebRequestData adminServer(String adminServer) {
    
    this.adminServer = adminServer;
    return this;
  }

   /**
   * Get adminServer
   * @return adminServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMIN_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminServer() {
    return adminServer;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminServer(String adminServer) {
    this.adminServer = adminServer;
  }


  public UpdateSoftwareInstanceWebRequestData adminPort(String adminPort) {
    
    this.adminPort = adminPort;
    return this;
  }

   /**
   * Get adminPort
   * @return adminPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMIN_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminPort() {
    return adminPort;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminPort(String adminPort) {
    this.adminPort = adminPort;
  }


  public UpdateSoftwareInstanceWebRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateSoftwareInstanceWebRequestData redirection(String redirection) {
    
    this.redirection = redirection;
    return this;
  }

   /**
   * Get redirection
   * @return redirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedirection() {
    return redirection;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirection(String redirection) {
    this.redirection = redirection;
  }


  public UpdateSoftwareInstanceWebRequestData status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkContract(List<UpdateSoftwareInstanceWebCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkContractItem(UpdateSoftwareInstanceWebCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSoftwareInstanceWebCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkFrameContract(List<UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkFrameContractItem(UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSoftwareInstanceWebCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkMaintenanceContract(List<UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkMaintenanceContractItem(UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateSoftwareInstanceWebCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkOrganization(List<UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkOrganizationItem(UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSoftwareInstanceWebCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkPerson(List<UpdateSoftwareInstanceWebCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkPersonItem(UpdateSoftwareInstanceWebCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSoftwareInstanceWebCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkPersonGroup(List<UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addCreateLinkPersonGroupItem(UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSoftwareInstanceWebCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSoftwareInstanceWebRequestData createLinkSoftwareInstallation(UpdateSoftwareInstanceWebCreateLinkSoftwareInstallationRequestData createLinkSoftwareInstallation) {
    
    this.createLinkSoftwareInstallation = createLinkSoftwareInstallation;
    return this;
  }

   /**
   * Get createLinkSoftwareInstallation
   * @return createLinkSoftwareInstallation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SOFTWARE_INSTALLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSoftwareInstanceWebCreateLinkSoftwareInstallationRequestData getCreateLinkSoftwareInstallation() {
    return createLinkSoftwareInstallation;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SOFTWARE_INSTALLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkSoftwareInstallation(UpdateSoftwareInstanceWebCreateLinkSoftwareInstallationRequestData createLinkSoftwareInstallation) {
    this.createLinkSoftwareInstallation = createLinkSoftwareInstallation;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkContract(List<UpdateSoftwareInstanceWebDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkContractItem(UpdateSoftwareInstanceWebDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSoftwareInstanceWebDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkFrameContract(List<UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkFrameContractItem(UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSoftwareInstanceWebDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkMaintenanceContract(List<UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkMaintenanceContractItem(UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateSoftwareInstanceWebDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkOrganization(List<UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkOrganizationItem(UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSoftwareInstanceWebDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkPerson(List<UpdateSoftwareInstanceWebDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkPersonItem(UpdateSoftwareInstanceWebDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSoftwareInstanceWebDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSoftwareInstanceWebRequestData deleteLinkPersonGroup(List<UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addDeleteLinkPersonGroupItem(UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSoftwareInstanceWebDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSoftwareInstanceWebRequestData updateLinkOrganization(List<UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addUpdateLinkOrganizationItem(UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSoftwareInstanceWebUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSoftwareInstanceWebRequestData updateLinkPerson(List<UpdateSoftwareInstanceWebUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addUpdateLinkPersonItem(UpdateSoftwareInstanceWebUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSoftwareInstanceWebUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSoftwareInstanceWebRequestData updateLinkPersonGroup(List<UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSoftwareInstanceWebRequestData addUpdateLinkPersonGroupItem(UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSoftwareInstanceWebUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSoftwareInstanceWebRequestData updateSoftwareInstanceWebRequestData = (UpdateSoftwareInstanceWebRequestData) o;
    return Objects.equals(this.sourceId, updateSoftwareInstanceWebRequestData.sourceId) &&
        Objects.equals(this.loadbalanced, updateSoftwareInstanceWebRequestData.loadbalanced) &&
        Objects.equals(this.sourceSystem, updateSoftwareInstanceWebRequestData.sourceSystem) &&
        Objects.equals(this.description, updateSoftwareInstanceWebRequestData.description) &&
        Objects.equals(this.docRoot, updateSoftwareInstanceWebRequestData.docRoot) &&
        Objects.equals(this.contextId, updateSoftwareInstanceWebRequestData.contextId) &&
        Objects.equals(this.sslPort, updateSoftwareInstanceWebRequestData.sslPort) &&
        Objects.equals(this.url, updateSoftwareInstanceWebRequestData.url) &&
        Objects.equals(this.port, updateSoftwareInstanceWebRequestData.port) &&
        Objects.equals(this.name, updateSoftwareInstanceWebRequestData.name) &&
        Objects.equals(this.adminServer, updateSoftwareInstanceWebRequestData.adminServer) &&
        Objects.equals(this.adminPort, updateSoftwareInstanceWebRequestData.adminPort) &&
        Objects.equals(this.id, updateSoftwareInstanceWebRequestData.id) &&
        Objects.equals(this.redirection, updateSoftwareInstanceWebRequestData.redirection) &&
        Objects.equals(this.status, updateSoftwareInstanceWebRequestData.status) &&
        Objects.equals(this.createLinkContract, updateSoftwareInstanceWebRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateSoftwareInstanceWebRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateSoftwareInstanceWebRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateSoftwareInstanceWebRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSoftwareInstanceWebRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSoftwareInstanceWebRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkSoftwareInstallation, updateSoftwareInstanceWebRequestData.createLinkSoftwareInstallation) &&
        Objects.equals(this.deleteLinkContract, updateSoftwareInstanceWebRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSoftwareInstanceWebRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateSoftwareInstanceWebRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSoftwareInstanceWebRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSoftwareInstanceWebRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSoftwareInstanceWebRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.updateLinkOrganization, updateSoftwareInstanceWebRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSoftwareInstanceWebRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSoftwareInstanceWebRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, loadbalanced, sourceSystem, description, docRoot, contextId, sslPort, url, port, name, adminServer, adminPort, id, redirection, status, createLinkContract, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkSoftwareInstallation, deleteLinkContract, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSoftwareInstanceWebRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    loadbalanced: ").append(toIndentedString(loadbalanced)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    docRoot: ").append(toIndentedString(docRoot)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    sslPort: ").append(toIndentedString(sslPort)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    adminServer: ").append(toIndentedString(adminServer)).append("\n");
    sb.append("    adminPort: ").append(toIndentedString(adminPort)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    redirection: ").append(toIndentedString(redirection)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkSoftwareInstallation: ").append(toIndentedString(createLinkSoftwareInstallation)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

