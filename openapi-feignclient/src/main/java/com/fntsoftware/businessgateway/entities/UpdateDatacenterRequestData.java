/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateDatacenterCreateLinkServerfarmRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDatacenterDeleteLinkServerfarmRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateDatacenterRequestData
 */
@JsonPropertyOrder({
  UpdateDatacenterRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateDatacenterRequestData.JSON_PROPERTY_PATH,
  UpdateDatacenterRequestData.JSON_PROPERTY_DATASOURCE,
  UpdateDatacenterRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateDatacenterRequestData.JSON_PROPERTY_DATASOURCE_ID,
  UpdateDatacenterRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateDatacenterRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateDatacenterRequestData.JSON_PROPERTY_ID,
  UpdateDatacenterRequestData.JSON_PROPERTY_CREATE_LINK_SERVERFARM,
  UpdateDatacenterRequestData.JSON_PROPERTY_DELETE_LINK_SERVERFARM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class UpdateDatacenterRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_DATASOURCE = "datasource";
  private String datasource;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DATASOURCE_ID = "datasourceId";
  private String datasourceId;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_SERVERFARM = "createLinkServerfarm";
  private List<UpdateDatacenterCreateLinkServerfarmRequestData> createLinkServerfarm;

  public static final String JSON_PROPERTY_DELETE_LINK_SERVERFARM = "deleteLinkServerfarm";
  private List<UpdateDatacenterDeleteLinkServerfarmRequestData> deleteLinkServerfarm;

  public UpdateDatacenterRequestData() {
  }

  public UpdateDatacenterRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateDatacenterRequestData path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public UpdateDatacenterRequestData datasource(String datasource) {
    
    this.datasource = datasource;
    return this;
  }

   /**
   * Get datasource
   * @return datasource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasource() {
    return datasource;
  }


  @JsonProperty(JSON_PROPERTY_DATASOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasource(String datasource) {
    this.datasource = datasource;
  }


  public UpdateDatacenterRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateDatacenterRequestData datasourceId(String datasourceId) {
    
    this.datasourceId = datasourceId;
    return this;
  }

   /**
   * Get datasourceId
   * @return datasourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasourceId() {
    return datasourceId;
  }


  @JsonProperty(JSON_PROPERTY_DATASOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasourceId(String datasourceId) {
    this.datasourceId = datasourceId;
  }


  public UpdateDatacenterRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateDatacenterRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateDatacenterRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateDatacenterRequestData createLinkServerfarm(List<UpdateDatacenterCreateLinkServerfarmRequestData> createLinkServerfarm) {
    
    this.createLinkServerfarm = createLinkServerfarm;
    return this;
  }

  public UpdateDatacenterRequestData addCreateLinkServerfarmItem(UpdateDatacenterCreateLinkServerfarmRequestData createLinkServerfarmItem) {
    if (this.createLinkServerfarm == null) {
      this.createLinkServerfarm = new ArrayList<>();
    }
    this.createLinkServerfarm.add(createLinkServerfarmItem);
    return this;
  }

   /**
   * Get createLinkServerfarm
   * @return createLinkServerfarm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SERVERFARM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDatacenterCreateLinkServerfarmRequestData> getCreateLinkServerfarm() {
    return createLinkServerfarm;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_SERVERFARM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkServerfarm(List<UpdateDatacenterCreateLinkServerfarmRequestData> createLinkServerfarm) {
    this.createLinkServerfarm = createLinkServerfarm;
  }


  public UpdateDatacenterRequestData deleteLinkServerfarm(List<UpdateDatacenterDeleteLinkServerfarmRequestData> deleteLinkServerfarm) {
    
    this.deleteLinkServerfarm = deleteLinkServerfarm;
    return this;
  }

  public UpdateDatacenterRequestData addDeleteLinkServerfarmItem(UpdateDatacenterDeleteLinkServerfarmRequestData deleteLinkServerfarmItem) {
    if (this.deleteLinkServerfarm == null) {
      this.deleteLinkServerfarm = new ArrayList<>();
    }
    this.deleteLinkServerfarm.add(deleteLinkServerfarmItem);
    return this;
  }

   /**
   * Get deleteLinkServerfarm
   * @return deleteLinkServerfarm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SERVERFARM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDatacenterDeleteLinkServerfarmRequestData> getDeleteLinkServerfarm() {
    return deleteLinkServerfarm;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SERVERFARM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkServerfarm(List<UpdateDatacenterDeleteLinkServerfarmRequestData> deleteLinkServerfarm) {
    this.deleteLinkServerfarm = deleteLinkServerfarm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDatacenterRequestData updateDatacenterRequestData = (UpdateDatacenterRequestData) o;
    return Objects.equals(this.sourceId, updateDatacenterRequestData.sourceId) &&
        Objects.equals(this.path, updateDatacenterRequestData.path) &&
        Objects.equals(this.datasource, updateDatacenterRequestData.datasource) &&
        Objects.equals(this.sourceSystem, updateDatacenterRequestData.sourceSystem) &&
        Objects.equals(this.datasourceId, updateDatacenterRequestData.datasourceId) &&
        Objects.equals(this.contextId, updateDatacenterRequestData.contextId) &&
        Objects.equals(this.visibleId, updateDatacenterRequestData.visibleId) &&
        Objects.equals(this.id, updateDatacenterRequestData.id) &&
        Objects.equals(this.createLinkServerfarm, updateDatacenterRequestData.createLinkServerfarm) &&
        Objects.equals(this.deleteLinkServerfarm, updateDatacenterRequestData.deleteLinkServerfarm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, path, datasource, sourceSystem, datasourceId, contextId, visibleId, id, createLinkServerfarm, deleteLinkServerfarm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDatacenterRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    datasource: ").append(toIndentedString(datasource)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    datasourceId: ").append(toIndentedString(datasourceId)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkServerfarm: ").append(toIndentedString(createLinkServerfarm)).append("\n");
    sb.append("    deleteLinkServerfarm: ").append(toIndentedString(deleteLinkServerfarm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

