/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkGatewayRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkCreateLinkZoneRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkDeleteLinkZoneRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkSwapLinkDomainRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkSwapLinkNetMandatorRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkSwapLinkNetrangeNameRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateIpv4NetworkUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateIpv4NetworkRequestData
 */
@JsonPropertyOrder({
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_LOOKUP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_USE_BROADCAST_IP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_C_ADMIN_PERSON_ID,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SERVER,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SCOPE_TYPE,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_REMARK,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_LEASE_TIME,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_FUNCTION,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_USE_NET_IP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_NAME,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_PRIMARY_SCOPE_ELID,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DHCP_SCOPE_NAME,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_C_ORG_NR,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DHCP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_DEVICE_ALL,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_GATEWAY,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_CREATE_LINK_ZONE,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_DEVICE_ALL,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_IPV4_NETRANGE,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_IPV6_NETWORK,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_VIRTUAL_NAS_SERVER,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_VIRTUAL_SWITCH,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_DELETE_LINK_ZONE,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_SWAP_LINK_DOMAIN,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_SWAP_LINK_NET_MANDATOR,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_SWAP_LINK_NETRANGE_NAME,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_UPDATE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateIpv4NetworkRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class UpdateIpv4NetworkRequestData {
  public static final String JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ = "cRirDocumentationReq";
  private String cRirDocumentationReq;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_LOOKUP = "lookup";
  private Boolean lookup;

  public static final String JSON_PROPERTY_USE_BROADCAST_IP = "useBroadcastIp";
  private Boolean useBroadcastIp;

  public static final String JSON_PROPERTY_C_ADMIN_PERSON_ID = "cAdminPersonId";
  private String cAdminPersonId;

  public static final String JSON_PROPERTY_DHCP_SERVER = "dhcpServer";
  private String dhcpServer;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DHCP_SCOPE_TYPE = "dhcpScopeType";
  private String dhcpScopeType;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_DHCP_LEASE_TIME = "dhcpLeaseTime";
  private String dhcpLeaseTime;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_USE_NET_IP = "useNetIp";
  private Boolean useNetIp;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PRIMARY_SCOPE_ELID = "primaryScopeElid";
  private String primaryScopeElid;

  public static final String JSON_PROPERTY_DHCP_SCOPE_NAME = "dhcpScopeName";
  private String dhcpScopeName;

  public static final String JSON_PROPERTY_C_ORG_NR = "cOrgNr";
  private String cOrgNr;

  public static final String JSON_PROPERTY_DHCP = "dhcp";
  private Boolean dhcp;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateIpv4NetworkCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC = "createLinkCustomIpaccessSvc";
  private List<UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT = "createLinkCustomL2CpeSegment";
  private UpdateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment;

  public static final String JSON_PROPERTY_CREATE_LINK_DEVICE_ALL = "createLinkDeviceAll";
  private List<UpdateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_GATEWAY = "createLinkGateway";
  private UpdateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE = "createLinkIpv4Netrange";
  private List<UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK = "createLinkIpv6Network";
  private List<UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER = "createLinkVirtualNasServer";
  private List<UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer;

  public static final String JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH = "createLinkVirtualSwitch";
  private List<UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch;

  public static final String JSON_PROPERTY_CREATE_LINK_ZONE = "createLinkZone";
  private List<UpdateIpv4NetworkCreateLinkZoneRequestData> createLinkZone;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateIpv4NetworkDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_CUSTOM_IPACCESS_SVC = "deleteLinkCustomIpaccessSvc";
  private List<UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData> deleteLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_DELETE_LINK_DEVICE_ALL = "deleteLinkDeviceAll";
  private List<UpdateIpv4NetworkDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateIpv4NetworkDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_IPV4_NETRANGE = "deleteLinkIpv4Netrange";
  private List<UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData> deleteLinkIpv4Netrange;

  public static final String JSON_PROPERTY_DELETE_LINK_IPV6_NETWORK = "deleteLinkIpv6Network";
  private List<UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData> deleteLinkIpv6Network;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateIpv4NetworkDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateIpv4NetworkDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateIpv4NetworkDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_VIRTUAL_NAS_SERVER = "deleteLinkVirtualNasServer";
  private List<UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData> deleteLinkVirtualNasServer;

  public static final String JSON_PROPERTY_DELETE_LINK_VIRTUAL_SWITCH = "deleteLinkVirtualSwitch";
  private List<UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData> deleteLinkVirtualSwitch;

  public static final String JSON_PROPERTY_DELETE_LINK_ZONE = "deleteLinkZone";
  private List<UpdateIpv4NetworkDeleteLinkZoneRequestData> deleteLinkZone;

  public static final String JSON_PROPERTY_SWAP_LINK_DOMAIN = "swapLinkDomain";
  private UpdateIpv4NetworkSwapLinkDomainRequestData swapLinkDomain;

  public static final String JSON_PROPERTY_SWAP_LINK_NET_MANDATOR = "swapLinkNetMandator";
  private UpdateIpv4NetworkSwapLinkNetMandatorRequestData swapLinkNetMandator;

  public static final String JSON_PROPERTY_SWAP_LINK_NETRANGE_NAME = "swapLinkNetrangeName";
  private UpdateIpv4NetworkSwapLinkNetrangeNameRequestData swapLinkNetrangeName;

  public static final String JSON_PROPERTY_UPDATE_LINK_CUSTOM_IPACCESS_SVC = "updateLinkCustomIpaccessSvc";
  private List<UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData> updateLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateIpv4NetworkUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateIpv4NetworkUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateIpv4NetworkUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateIpv4NetworkRequestData() {
  }

  public UpdateIpv4NetworkRequestData cRirDocumentationReq(String cRirDocumentationReq) {
    
    this.cRirDocumentationReq = cRirDocumentationReq;
    return this;
  }

   /**
   * Get cRirDocumentationReq
   * @return cRirDocumentationReq
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcRirDocumentationReq() {
    return cRirDocumentationReq;
  }


  @JsonProperty(JSON_PROPERTY_C_RIR_DOCUMENTATION_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcRirDocumentationReq(String cRirDocumentationReq) {
    this.cRirDocumentationReq = cRirDocumentationReq;
  }


  public UpdateIpv4NetworkRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateIpv4NetworkRequestData lookup(Boolean lookup) {
    
    this.lookup = lookup;
    return this;
  }

   /**
   * Get lookup
   * @return lookup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOKUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLookup() {
    return lookup;
  }


  @JsonProperty(JSON_PROPERTY_LOOKUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLookup(Boolean lookup) {
    this.lookup = lookup;
  }


  public UpdateIpv4NetworkRequestData useBroadcastIp(Boolean useBroadcastIp) {
    
    this.useBroadcastIp = useBroadcastIp;
    return this;
  }

   /**
   * Get useBroadcastIp
   * @return useBroadcastIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_BROADCAST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseBroadcastIp() {
    return useBroadcastIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_BROADCAST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseBroadcastIp(Boolean useBroadcastIp) {
    this.useBroadcastIp = useBroadcastIp;
  }


  public UpdateIpv4NetworkRequestData cAdminPersonId(String cAdminPersonId) {
    
    this.cAdminPersonId = cAdminPersonId;
    return this;
  }

   /**
   * Get cAdminPersonId
   * @return cAdminPersonId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_ADMIN_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcAdminPersonId() {
    return cAdminPersonId;
  }


  @JsonProperty(JSON_PROPERTY_C_ADMIN_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcAdminPersonId(String cAdminPersonId) {
    this.cAdminPersonId = cAdminPersonId;
  }


  public UpdateIpv4NetworkRequestData dhcpServer(String dhcpServer) {
    
    this.dhcpServer = dhcpServer;
    return this;
  }

   /**
   * Get dhcpServer
   * @return dhcpServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpServer() {
    return dhcpServer;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpServer(String dhcpServer) {
    this.dhcpServer = dhcpServer;
  }


  public UpdateIpv4NetworkRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateIpv4NetworkRequestData dhcpScopeType(String dhcpScopeType) {
    
    this.dhcpScopeType = dhcpScopeType;
    return this;
  }

   /**
   * Get dhcpScopeType
   * @return dhcpScopeType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpScopeType() {
    return dhcpScopeType;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpScopeType(String dhcpScopeType) {
    this.dhcpScopeType = dhcpScopeType;
  }


  public UpdateIpv4NetworkRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateIpv4NetworkRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public UpdateIpv4NetworkRequestData dhcpLeaseTime(String dhcpLeaseTime) {
    
    this.dhcpLeaseTime = dhcpLeaseTime;
    return this;
  }

   /**
   * Get dhcpLeaseTime
   * @return dhcpLeaseTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_LEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpLeaseTime() {
    return dhcpLeaseTime;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_LEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpLeaseTime(String dhcpLeaseTime) {
    this.dhcpLeaseTime = dhcpLeaseTime;
  }


  public UpdateIpv4NetworkRequestData function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public UpdateIpv4NetworkRequestData useNetIp(Boolean useNetIp) {
    
    this.useNetIp = useNetIp;
    return this;
  }

   /**
   * Get useNetIp
   * @return useNetIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_NET_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseNetIp() {
    return useNetIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_NET_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseNetIp(Boolean useNetIp) {
    this.useNetIp = useNetIp;
  }


  public UpdateIpv4NetworkRequestData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateIpv4NetworkRequestData primaryScopeElid(String primaryScopeElid) {
    
    this.primaryScopeElid = primaryScopeElid;
    return this;
  }

   /**
   * Get primaryScopeElid
   * @return primaryScopeElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMARY_SCOPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryScopeElid() {
    return primaryScopeElid;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_SCOPE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryScopeElid(String primaryScopeElid) {
    this.primaryScopeElid = primaryScopeElid;
  }


  public UpdateIpv4NetworkRequestData dhcpScopeName(String dhcpScopeName) {
    
    this.dhcpScopeName = dhcpScopeName;
    return this;
  }

   /**
   * Get dhcpScopeName
   * @return dhcpScopeName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDhcpScopeName() {
    return dhcpScopeName;
  }


  @JsonProperty(JSON_PROPERTY_DHCP_SCOPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcpScopeName(String dhcpScopeName) {
    this.dhcpScopeName = dhcpScopeName;
  }


  public UpdateIpv4NetworkRequestData cOrgNr(String cOrgNr) {
    
    this.cOrgNr = cOrgNr;
    return this;
  }

   /**
   * Get cOrgNr
   * @return cOrgNr
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_ORG_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcOrgNr() {
    return cOrgNr;
  }


  @JsonProperty(JSON_PROPERTY_C_ORG_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcOrgNr(String cOrgNr) {
    this.cOrgNr = cOrgNr;
  }


  public UpdateIpv4NetworkRequestData dhcp(Boolean dhcp) {
    
    this.dhcp = dhcp;
    return this;
  }

   /**
   * Get dhcp
   * @return dhcp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDhcp() {
    return dhcp;
  }


  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcp(Boolean dhcp) {
    this.dhcp = dhcp;
  }


  public UpdateIpv4NetworkRequestData createLinkContract(List<UpdateIpv4NetworkCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkContractItem(UpdateIpv4NetworkCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateIpv4NetworkCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateIpv4NetworkRequestData createLinkCustomIpaccessSvc(List<UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc) {
    
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkCustomIpaccessSvcItem(UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvcItem) {
    if (this.createLinkCustomIpaccessSvc == null) {
      this.createLinkCustomIpaccessSvc = new ArrayList<>();
    }
    this.createLinkCustomIpaccessSvc.add(createLinkCustomIpaccessSvcItem);
    return this;
  }

   /**
   * Get createLinkCustomIpaccessSvc
   * @return createLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> getCreateLinkCustomIpaccessSvc() {
    return createLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomIpaccessSvc(List<UpdateIpv4NetworkCreateLinkCustomIpaccessSvcRequestData> createLinkCustomIpaccessSvc) {
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
  }


  public UpdateIpv4NetworkRequestData createLinkCustomL2CpeSegment(UpdateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment) {
    
    this.createLinkCustomL2CpeSegment = createLinkCustomL2CpeSegment;
    return this;
  }

   /**
   * Get createLinkCustomL2CpeSegment
   * @return createLinkCustomL2CpeSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData getCreateLinkCustomL2CpeSegment() {
    return createLinkCustomL2CpeSegment;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_L2_CPE_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomL2CpeSegment(UpdateIpv4NetworkCreateLinkCustomL2CpeSegmentRequestData createLinkCustomL2CpeSegment) {
    this.createLinkCustomL2CpeSegment = createLinkCustomL2CpeSegment;
  }


  public UpdateIpv4NetworkRequestData createLinkDeviceAll(List<UpdateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    
    this.createLinkDeviceAll = createLinkDeviceAll;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkDeviceAllItem(UpdateIpv4NetworkCreateLinkDeviceAllRequestData createLinkDeviceAllItem) {
    if (this.createLinkDeviceAll == null) {
      this.createLinkDeviceAll = new ArrayList<>();
    }
    this.createLinkDeviceAll.add(createLinkDeviceAllItem);
    return this;
  }

   /**
   * Get createLinkDeviceAll
   * @return createLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkDeviceAllRequestData> getCreateLinkDeviceAll() {
    return createLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDeviceAll(List<UpdateIpv4NetworkCreateLinkDeviceAllRequestData> createLinkDeviceAll) {
    this.createLinkDeviceAll = createLinkDeviceAll;
  }


  public UpdateIpv4NetworkRequestData createLinkFrameContract(List<UpdateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkFrameContractItem(UpdateIpv4NetworkCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateIpv4NetworkCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateIpv4NetworkRequestData createLinkGateway(UpdateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway) {
    
    this.createLinkGateway = createLinkGateway;
    return this;
  }

   /**
   * Get createLinkGateway
   * @return createLinkGateway
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4NetworkCreateLinkGatewayRequestData getCreateLinkGateway() {
    return createLinkGateway;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkGateway(UpdateIpv4NetworkCreateLinkGatewayRequestData createLinkGateway) {
    this.createLinkGateway = createLinkGateway;
  }


  public UpdateIpv4NetworkRequestData createLinkIpv4Netrange(List<UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange) {
    
    this.createLinkIpv4Netrange = createLinkIpv4Netrange;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkIpv4NetrangeItem(UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData createLinkIpv4NetrangeItem) {
    if (this.createLinkIpv4Netrange == null) {
      this.createLinkIpv4Netrange = new ArrayList<>();
    }
    this.createLinkIpv4Netrange.add(createLinkIpv4NetrangeItem);
    return this;
  }

   /**
   * Get createLinkIpv4Netrange
   * @return createLinkIpv4Netrange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData> getCreateLinkIpv4Netrange() {
    return createLinkIpv4Netrange;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv4Netrange(List<UpdateIpv4NetworkCreateLinkIpv4NetrangeRequestData> createLinkIpv4Netrange) {
    this.createLinkIpv4Netrange = createLinkIpv4Netrange;
  }


  public UpdateIpv4NetworkRequestData createLinkIpv6Network(List<UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network) {
    
    this.createLinkIpv6Network = createLinkIpv6Network;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkIpv6NetworkItem(UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData createLinkIpv6NetworkItem) {
    if (this.createLinkIpv6Network == null) {
      this.createLinkIpv6Network = new ArrayList<>();
    }
    this.createLinkIpv6Network.add(createLinkIpv6NetworkItem);
    return this;
  }

   /**
   * Get createLinkIpv6Network
   * @return createLinkIpv6Network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData> getCreateLinkIpv6Network() {
    return createLinkIpv6Network;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv6Network(List<UpdateIpv4NetworkCreateLinkIpv6NetworkRequestData> createLinkIpv6Network) {
    this.createLinkIpv6Network = createLinkIpv6Network;
  }


  public UpdateIpv4NetworkRequestData createLinkMaintenanceContract(List<UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkMaintenanceContractItem(UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateIpv4NetworkCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateIpv4NetworkRequestData createLinkOrganization(List<UpdateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkOrganizationItem(UpdateIpv4NetworkCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateIpv4NetworkCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateIpv4NetworkRequestData createLinkPerson(List<UpdateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkPersonItem(UpdateIpv4NetworkCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateIpv4NetworkCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateIpv4NetworkRequestData createLinkPersonGroup(List<UpdateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkPersonGroupItem(UpdateIpv4NetworkCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateIpv4NetworkCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateIpv4NetworkRequestData createLinkVirtualNasServer(List<UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkVirtualNasServerItem(UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData createLinkVirtualNasServerItem) {
    if (this.createLinkVirtualNasServer == null) {
      this.createLinkVirtualNasServer = new ArrayList<>();
    }
    this.createLinkVirtualNasServer.add(createLinkVirtualNasServerItem);
    return this;
  }

   /**
   * Get createLinkVirtualNasServer
   * @return createLinkVirtualNasServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData> getCreateLinkVirtualNasServer() {
    return createLinkVirtualNasServer;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualNasServer(List<UpdateIpv4NetworkCreateLinkVirtualNasServerRequestData> createLinkVirtualNasServer) {
    this.createLinkVirtualNasServer = createLinkVirtualNasServer;
  }


  public UpdateIpv4NetworkRequestData createLinkVirtualSwitch(List<UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkVirtualSwitchItem(UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData createLinkVirtualSwitchItem) {
    if (this.createLinkVirtualSwitch == null) {
      this.createLinkVirtualSwitch = new ArrayList<>();
    }
    this.createLinkVirtualSwitch.add(createLinkVirtualSwitchItem);
    return this;
  }

   /**
   * Get createLinkVirtualSwitch
   * @return createLinkVirtualSwitch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData> getCreateLinkVirtualSwitch() {
    return createLinkVirtualSwitch;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkVirtualSwitch(List<UpdateIpv4NetworkCreateLinkVirtualSwitchRequestData> createLinkVirtualSwitch) {
    this.createLinkVirtualSwitch = createLinkVirtualSwitch;
  }


  public UpdateIpv4NetworkRequestData createLinkZone(List<UpdateIpv4NetworkCreateLinkZoneRequestData> createLinkZone) {
    
    this.createLinkZone = createLinkZone;
    return this;
  }

  public UpdateIpv4NetworkRequestData addCreateLinkZoneItem(UpdateIpv4NetworkCreateLinkZoneRequestData createLinkZoneItem) {
    if (this.createLinkZone == null) {
      this.createLinkZone = new ArrayList<>();
    }
    this.createLinkZone.add(createLinkZoneItem);
    return this;
  }

   /**
   * Get createLinkZone
   * @return createLinkZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkCreateLinkZoneRequestData> getCreateLinkZone() {
    return createLinkZone;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkZone(List<UpdateIpv4NetworkCreateLinkZoneRequestData> createLinkZone) {
    this.createLinkZone = createLinkZone;
  }


  public UpdateIpv4NetworkRequestData deleteLinkContract(List<UpdateIpv4NetworkDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkContractItem(UpdateIpv4NetworkDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateIpv4NetworkDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateIpv4NetworkRequestData deleteLinkCustomIpaccessSvc(List<UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData> deleteLinkCustomIpaccessSvc) {
    
    this.deleteLinkCustomIpaccessSvc = deleteLinkCustomIpaccessSvc;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkCustomIpaccessSvcItem(UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData deleteLinkCustomIpaccessSvcItem) {
    if (this.deleteLinkCustomIpaccessSvc == null) {
      this.deleteLinkCustomIpaccessSvc = new ArrayList<>();
    }
    this.deleteLinkCustomIpaccessSvc.add(deleteLinkCustomIpaccessSvcItem);
    return this;
  }

   /**
   * Get deleteLinkCustomIpaccessSvc
   * @return deleteLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData> getDeleteLinkCustomIpaccessSvc() {
    return deleteLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkCustomIpaccessSvc(List<UpdateIpv4NetworkDeleteLinkCustomIpaccessSvcRequestData> deleteLinkCustomIpaccessSvc) {
    this.deleteLinkCustomIpaccessSvc = deleteLinkCustomIpaccessSvc;
  }


  public UpdateIpv4NetworkRequestData deleteLinkDeviceAll(List<UpdateIpv4NetworkDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll) {
    
    this.deleteLinkDeviceAll = deleteLinkDeviceAll;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkDeviceAllItem(UpdateIpv4NetworkDeleteLinkDeviceAllRequestData deleteLinkDeviceAllItem) {
    if (this.deleteLinkDeviceAll == null) {
      this.deleteLinkDeviceAll = new ArrayList<>();
    }
    this.deleteLinkDeviceAll.add(deleteLinkDeviceAllItem);
    return this;
  }

   /**
   * Get deleteLinkDeviceAll
   * @return deleteLinkDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkDeviceAllRequestData> getDeleteLinkDeviceAll() {
    return deleteLinkDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDeviceAll(List<UpdateIpv4NetworkDeleteLinkDeviceAllRequestData> deleteLinkDeviceAll) {
    this.deleteLinkDeviceAll = deleteLinkDeviceAll;
  }


  public UpdateIpv4NetworkRequestData deleteLinkFrameContract(List<UpdateIpv4NetworkDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkFrameContractItem(UpdateIpv4NetworkDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateIpv4NetworkDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateIpv4NetworkRequestData deleteLinkIpv4Netrange(List<UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData> deleteLinkIpv4Netrange) {
    
    this.deleteLinkIpv4Netrange = deleteLinkIpv4Netrange;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkIpv4NetrangeItem(UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData deleteLinkIpv4NetrangeItem) {
    if (this.deleteLinkIpv4Netrange == null) {
      this.deleteLinkIpv4Netrange = new ArrayList<>();
    }
    this.deleteLinkIpv4Netrange.add(deleteLinkIpv4NetrangeItem);
    return this;
  }

   /**
   * Get deleteLinkIpv4Netrange
   * @return deleteLinkIpv4Netrange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData> getDeleteLinkIpv4Netrange() {
    return deleteLinkIpv4Netrange;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_NETRANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkIpv4Netrange(List<UpdateIpv4NetworkDeleteLinkIpv4NetrangeRequestData> deleteLinkIpv4Netrange) {
    this.deleteLinkIpv4Netrange = deleteLinkIpv4Netrange;
  }


  public UpdateIpv4NetworkRequestData deleteLinkIpv6Network(List<UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData> deleteLinkIpv6Network) {
    
    this.deleteLinkIpv6Network = deleteLinkIpv6Network;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkIpv6NetworkItem(UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData deleteLinkIpv6NetworkItem) {
    if (this.deleteLinkIpv6Network == null) {
      this.deleteLinkIpv6Network = new ArrayList<>();
    }
    this.deleteLinkIpv6Network.add(deleteLinkIpv6NetworkItem);
    return this;
  }

   /**
   * Get deleteLinkIpv6Network
   * @return deleteLinkIpv6Network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData> getDeleteLinkIpv6Network() {
    return deleteLinkIpv6Network;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV6_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkIpv6Network(List<UpdateIpv4NetworkDeleteLinkIpv6NetworkRequestData> deleteLinkIpv6Network) {
    this.deleteLinkIpv6Network = deleteLinkIpv6Network;
  }


  public UpdateIpv4NetworkRequestData deleteLinkMaintenanceContract(List<UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkMaintenanceContractItem(UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateIpv4NetworkDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateIpv4NetworkRequestData deleteLinkOrganization(List<UpdateIpv4NetworkDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkOrganizationItem(UpdateIpv4NetworkDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateIpv4NetworkDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateIpv4NetworkRequestData deleteLinkPerson(List<UpdateIpv4NetworkDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkPersonItem(UpdateIpv4NetworkDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateIpv4NetworkDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateIpv4NetworkRequestData deleteLinkPersonGroup(List<UpdateIpv4NetworkDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkPersonGroupItem(UpdateIpv4NetworkDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateIpv4NetworkDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateIpv4NetworkRequestData deleteLinkVirtualNasServer(List<UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData> deleteLinkVirtualNasServer) {
    
    this.deleteLinkVirtualNasServer = deleteLinkVirtualNasServer;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkVirtualNasServerItem(UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData deleteLinkVirtualNasServerItem) {
    if (this.deleteLinkVirtualNasServer == null) {
      this.deleteLinkVirtualNasServer = new ArrayList<>();
    }
    this.deleteLinkVirtualNasServer.add(deleteLinkVirtualNasServerItem);
    return this;
  }

   /**
   * Get deleteLinkVirtualNasServer
   * @return deleteLinkVirtualNasServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData> getDeleteLinkVirtualNasServer() {
    return deleteLinkVirtualNasServer;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_NAS_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkVirtualNasServer(List<UpdateIpv4NetworkDeleteLinkVirtualNasServerRequestData> deleteLinkVirtualNasServer) {
    this.deleteLinkVirtualNasServer = deleteLinkVirtualNasServer;
  }


  public UpdateIpv4NetworkRequestData deleteLinkVirtualSwitch(List<UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData> deleteLinkVirtualSwitch) {
    
    this.deleteLinkVirtualSwitch = deleteLinkVirtualSwitch;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkVirtualSwitchItem(UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData deleteLinkVirtualSwitchItem) {
    if (this.deleteLinkVirtualSwitch == null) {
      this.deleteLinkVirtualSwitch = new ArrayList<>();
    }
    this.deleteLinkVirtualSwitch.add(deleteLinkVirtualSwitchItem);
    return this;
  }

   /**
   * Get deleteLinkVirtualSwitch
   * @return deleteLinkVirtualSwitch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData> getDeleteLinkVirtualSwitch() {
    return deleteLinkVirtualSwitch;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_VIRTUAL_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkVirtualSwitch(List<UpdateIpv4NetworkDeleteLinkVirtualSwitchRequestData> deleteLinkVirtualSwitch) {
    this.deleteLinkVirtualSwitch = deleteLinkVirtualSwitch;
  }


  public UpdateIpv4NetworkRequestData deleteLinkZone(List<UpdateIpv4NetworkDeleteLinkZoneRequestData> deleteLinkZone) {
    
    this.deleteLinkZone = deleteLinkZone;
    return this;
  }

  public UpdateIpv4NetworkRequestData addDeleteLinkZoneItem(UpdateIpv4NetworkDeleteLinkZoneRequestData deleteLinkZoneItem) {
    if (this.deleteLinkZone == null) {
      this.deleteLinkZone = new ArrayList<>();
    }
    this.deleteLinkZone.add(deleteLinkZoneItem);
    return this;
  }

   /**
   * Get deleteLinkZone
   * @return deleteLinkZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkDeleteLinkZoneRequestData> getDeleteLinkZone() {
    return deleteLinkZone;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkZone(List<UpdateIpv4NetworkDeleteLinkZoneRequestData> deleteLinkZone) {
    this.deleteLinkZone = deleteLinkZone;
  }


  public UpdateIpv4NetworkRequestData swapLinkDomain(UpdateIpv4NetworkSwapLinkDomainRequestData swapLinkDomain) {
    
    this.swapLinkDomain = swapLinkDomain;
    return this;
  }

   /**
   * Get swapLinkDomain
   * @return swapLinkDomain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4NetworkSwapLinkDomainRequestData getSwapLinkDomain() {
    return swapLinkDomain;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkDomain(UpdateIpv4NetworkSwapLinkDomainRequestData swapLinkDomain) {
    this.swapLinkDomain = swapLinkDomain;
  }


  public UpdateIpv4NetworkRequestData swapLinkNetMandator(UpdateIpv4NetworkSwapLinkNetMandatorRequestData swapLinkNetMandator) {
    
    this.swapLinkNetMandator = swapLinkNetMandator;
    return this;
  }

   /**
   * Get swapLinkNetMandator
   * @return swapLinkNetMandator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4NetworkSwapLinkNetMandatorRequestData getSwapLinkNetMandator() {
    return swapLinkNetMandator;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_NET_MANDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkNetMandator(UpdateIpv4NetworkSwapLinkNetMandatorRequestData swapLinkNetMandator) {
    this.swapLinkNetMandator = swapLinkNetMandator;
  }


  public UpdateIpv4NetworkRequestData swapLinkNetrangeName(UpdateIpv4NetworkSwapLinkNetrangeNameRequestData swapLinkNetrangeName) {
    
    this.swapLinkNetrangeName = swapLinkNetrangeName;
    return this;
  }

   /**
   * Get swapLinkNetrangeName
   * @return swapLinkNetrangeName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_NETRANGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateIpv4NetworkSwapLinkNetrangeNameRequestData getSwapLinkNetrangeName() {
    return swapLinkNetrangeName;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_NETRANGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkNetrangeName(UpdateIpv4NetworkSwapLinkNetrangeNameRequestData swapLinkNetrangeName) {
    this.swapLinkNetrangeName = swapLinkNetrangeName;
  }


  public UpdateIpv4NetworkRequestData updateLinkCustomIpaccessSvc(List<UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData> updateLinkCustomIpaccessSvc) {
    
    this.updateLinkCustomIpaccessSvc = updateLinkCustomIpaccessSvc;
    return this;
  }

  public UpdateIpv4NetworkRequestData addUpdateLinkCustomIpaccessSvcItem(UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData updateLinkCustomIpaccessSvcItem) {
    if (this.updateLinkCustomIpaccessSvc == null) {
      this.updateLinkCustomIpaccessSvc = new ArrayList<>();
    }
    this.updateLinkCustomIpaccessSvc.add(updateLinkCustomIpaccessSvcItem);
    return this;
  }

   /**
   * Get updateLinkCustomIpaccessSvc
   * @return updateLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData> getUpdateLinkCustomIpaccessSvc() {
    return updateLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkCustomIpaccessSvc(List<UpdateIpv4NetworkUpdateLinkCustomIpaccessSvcRequestData> updateLinkCustomIpaccessSvc) {
    this.updateLinkCustomIpaccessSvc = updateLinkCustomIpaccessSvc;
  }


  public UpdateIpv4NetworkRequestData updateLinkOrganization(List<UpdateIpv4NetworkUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateIpv4NetworkRequestData addUpdateLinkOrganizationItem(UpdateIpv4NetworkUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateIpv4NetworkUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateIpv4NetworkRequestData updateLinkPerson(List<UpdateIpv4NetworkUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateIpv4NetworkRequestData addUpdateLinkPersonItem(UpdateIpv4NetworkUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateIpv4NetworkUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateIpv4NetworkRequestData updateLinkPersonGroup(List<UpdateIpv4NetworkUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateIpv4NetworkRequestData addUpdateLinkPersonGroupItem(UpdateIpv4NetworkUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateIpv4NetworkUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateIpv4NetworkUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIpv4NetworkRequestData updateIpv4NetworkRequestData = (UpdateIpv4NetworkRequestData) o;
    return Objects.equals(this.cRirDocumentationReq, updateIpv4NetworkRequestData.cRirDocumentationReq) &&
        Objects.equals(this.sourceId, updateIpv4NetworkRequestData.sourceId) &&
        Objects.equals(this.lookup, updateIpv4NetworkRequestData.lookup) &&
        Objects.equals(this.useBroadcastIp, updateIpv4NetworkRequestData.useBroadcastIp) &&
        Objects.equals(this.cAdminPersonId, updateIpv4NetworkRequestData.cAdminPersonId) &&
        Objects.equals(this.dhcpServer, updateIpv4NetworkRequestData.dhcpServer) &&
        Objects.equals(this.sourceSystem, updateIpv4NetworkRequestData.sourceSystem) &&
        Objects.equals(this.dhcpScopeType, updateIpv4NetworkRequestData.dhcpScopeType) &&
        Objects.equals(this.contextId, updateIpv4NetworkRequestData.contextId) &&
        Objects.equals(this.remark, updateIpv4NetworkRequestData.remark) &&
        Objects.equals(this.dhcpLeaseTime, updateIpv4NetworkRequestData.dhcpLeaseTime) &&
        Objects.equals(this.function, updateIpv4NetworkRequestData.function) &&
        Objects.equals(this.useNetIp, updateIpv4NetworkRequestData.useNetIp) &&
        Objects.equals(this.name, updateIpv4NetworkRequestData.name) &&
        Objects.equals(this.primaryScopeElid, updateIpv4NetworkRequestData.primaryScopeElid) &&
        Objects.equals(this.dhcpScopeName, updateIpv4NetworkRequestData.dhcpScopeName) &&
        Objects.equals(this.cOrgNr, updateIpv4NetworkRequestData.cOrgNr) &&
        Objects.equals(this.dhcp, updateIpv4NetworkRequestData.dhcp) &&
        Objects.equals(this.createLinkContract, updateIpv4NetworkRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomIpaccessSvc, updateIpv4NetworkRequestData.createLinkCustomIpaccessSvc) &&
        Objects.equals(this.createLinkCustomL2CpeSegment, updateIpv4NetworkRequestData.createLinkCustomL2CpeSegment) &&
        Objects.equals(this.createLinkDeviceAll, updateIpv4NetworkRequestData.createLinkDeviceAll) &&
        Objects.equals(this.createLinkFrameContract, updateIpv4NetworkRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkGateway, updateIpv4NetworkRequestData.createLinkGateway) &&
        Objects.equals(this.createLinkIpv4Netrange, updateIpv4NetworkRequestData.createLinkIpv4Netrange) &&
        Objects.equals(this.createLinkIpv6Network, updateIpv4NetworkRequestData.createLinkIpv6Network) &&
        Objects.equals(this.createLinkMaintenanceContract, updateIpv4NetworkRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateIpv4NetworkRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateIpv4NetworkRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateIpv4NetworkRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkVirtualNasServer, updateIpv4NetworkRequestData.createLinkVirtualNasServer) &&
        Objects.equals(this.createLinkVirtualSwitch, updateIpv4NetworkRequestData.createLinkVirtualSwitch) &&
        Objects.equals(this.createLinkZone, updateIpv4NetworkRequestData.createLinkZone) &&
        Objects.equals(this.deleteLinkContract, updateIpv4NetworkRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkCustomIpaccessSvc, updateIpv4NetworkRequestData.deleteLinkCustomIpaccessSvc) &&
        Objects.equals(this.deleteLinkDeviceAll, updateIpv4NetworkRequestData.deleteLinkDeviceAll) &&
        Objects.equals(this.deleteLinkFrameContract, updateIpv4NetworkRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkIpv4Netrange, updateIpv4NetworkRequestData.deleteLinkIpv4Netrange) &&
        Objects.equals(this.deleteLinkIpv6Network, updateIpv4NetworkRequestData.deleteLinkIpv6Network) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateIpv4NetworkRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateIpv4NetworkRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateIpv4NetworkRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateIpv4NetworkRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkVirtualNasServer, updateIpv4NetworkRequestData.deleteLinkVirtualNasServer) &&
        Objects.equals(this.deleteLinkVirtualSwitch, updateIpv4NetworkRequestData.deleteLinkVirtualSwitch) &&
        Objects.equals(this.deleteLinkZone, updateIpv4NetworkRequestData.deleteLinkZone) &&
        Objects.equals(this.swapLinkDomain, updateIpv4NetworkRequestData.swapLinkDomain) &&
        Objects.equals(this.swapLinkNetMandator, updateIpv4NetworkRequestData.swapLinkNetMandator) &&
        Objects.equals(this.swapLinkNetrangeName, updateIpv4NetworkRequestData.swapLinkNetrangeName) &&
        Objects.equals(this.updateLinkCustomIpaccessSvc, updateIpv4NetworkRequestData.updateLinkCustomIpaccessSvc) &&
        Objects.equals(this.updateLinkOrganization, updateIpv4NetworkRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateIpv4NetworkRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateIpv4NetworkRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cRirDocumentationReq, sourceId, lookup, useBroadcastIp, cAdminPersonId, dhcpServer, sourceSystem, dhcpScopeType, contextId, remark, dhcpLeaseTime, function, useNetIp, name, primaryScopeElid, dhcpScopeName, cOrgNr, dhcp, createLinkContract, createLinkCustomIpaccessSvc, createLinkCustomL2CpeSegment, createLinkDeviceAll, createLinkFrameContract, createLinkGateway, createLinkIpv4Netrange, createLinkIpv6Network, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkVirtualNasServer, createLinkVirtualSwitch, createLinkZone, deleteLinkContract, deleteLinkCustomIpaccessSvc, deleteLinkDeviceAll, deleteLinkFrameContract, deleteLinkIpv4Netrange, deleteLinkIpv6Network, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkVirtualNasServer, deleteLinkVirtualSwitch, deleteLinkZone, swapLinkDomain, swapLinkNetMandator, swapLinkNetrangeName, updateLinkCustomIpaccessSvc, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIpv4NetworkRequestData {\n");
    sb.append("    cRirDocumentationReq: ").append(toIndentedString(cRirDocumentationReq)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    lookup: ").append(toIndentedString(lookup)).append("\n");
    sb.append("    useBroadcastIp: ").append(toIndentedString(useBroadcastIp)).append("\n");
    sb.append("    cAdminPersonId: ").append(toIndentedString(cAdminPersonId)).append("\n");
    sb.append("    dhcpServer: ").append(toIndentedString(dhcpServer)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    dhcpScopeType: ").append(toIndentedString(dhcpScopeType)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    dhcpLeaseTime: ").append(toIndentedString(dhcpLeaseTime)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    useNetIp: ").append(toIndentedString(useNetIp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryScopeElid: ").append(toIndentedString(primaryScopeElid)).append("\n");
    sb.append("    dhcpScopeName: ").append(toIndentedString(dhcpScopeName)).append("\n");
    sb.append("    cOrgNr: ").append(toIndentedString(cOrgNr)).append("\n");
    sb.append("    dhcp: ").append(toIndentedString(dhcp)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomIpaccessSvc: ").append(toIndentedString(createLinkCustomIpaccessSvc)).append("\n");
    sb.append("    createLinkCustomL2CpeSegment: ").append(toIndentedString(createLinkCustomL2CpeSegment)).append("\n");
    sb.append("    createLinkDeviceAll: ").append(toIndentedString(createLinkDeviceAll)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkGateway: ").append(toIndentedString(createLinkGateway)).append("\n");
    sb.append("    createLinkIpv4Netrange: ").append(toIndentedString(createLinkIpv4Netrange)).append("\n");
    sb.append("    createLinkIpv6Network: ").append(toIndentedString(createLinkIpv6Network)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkVirtualNasServer: ").append(toIndentedString(createLinkVirtualNasServer)).append("\n");
    sb.append("    createLinkVirtualSwitch: ").append(toIndentedString(createLinkVirtualSwitch)).append("\n");
    sb.append("    createLinkZone: ").append(toIndentedString(createLinkZone)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkCustomIpaccessSvc: ").append(toIndentedString(deleteLinkCustomIpaccessSvc)).append("\n");
    sb.append("    deleteLinkDeviceAll: ").append(toIndentedString(deleteLinkDeviceAll)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkIpv4Netrange: ").append(toIndentedString(deleteLinkIpv4Netrange)).append("\n");
    sb.append("    deleteLinkIpv6Network: ").append(toIndentedString(deleteLinkIpv6Network)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkVirtualNasServer: ").append(toIndentedString(deleteLinkVirtualNasServer)).append("\n");
    sb.append("    deleteLinkVirtualSwitch: ").append(toIndentedString(deleteLinkVirtualSwitch)).append("\n");
    sb.append("    deleteLinkZone: ").append(toIndentedString(deleteLinkZone)).append("\n");
    sb.append("    swapLinkDomain: ").append(toIndentedString(swapLinkDomain)).append("\n");
    sb.append("    swapLinkNetMandator: ").append(toIndentedString(swapLinkNetMandator)).append("\n");
    sb.append("    swapLinkNetrangeName: ").append(toIndentedString(swapLinkNetrangeName)).append("\n");
    sb.append("    updateLinkCustomIpaccessSvc: ").append(toIndentedString(updateLinkCustomIpaccessSvc)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

