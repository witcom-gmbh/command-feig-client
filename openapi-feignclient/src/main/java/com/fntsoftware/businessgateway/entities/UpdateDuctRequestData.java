/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkDataCableRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkDataCableRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctUpdateLinkDataCableRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctUpdateLinkDuctContentRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateDuctUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateDuctRequestData
 */
@JsonPropertyOrder({
  UpdateDuctRequestData.JSON_PROPERTY_COLOR,
  UpdateDuctRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateDuctRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateDuctRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateDuctRequestData.JSON_PROPERTY_ID,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_DATA_CABLE,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_DATA_CABLE,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateDuctRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateDuctRequestData.JSON_PROPERTY_UPDATE_LINK_DATA_CABLE,
  UpdateDuctRequestData.JSON_PROPERTY_UPDATE_LINK_DUCT_CONTENT,
  UpdateDuctRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateDuctRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateDuctRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateDuctRequestData {
  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateDuctCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_DATA_CABLE = "createLinkDataCable";
  private List<UpdateDuctCreateLinkDataCableRequestData> createLinkDataCable;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateDuctCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateDuctCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateDuctCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateDuctDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_DATA_CABLE = "deleteLinkDataCable";
  private List<UpdateDuctDeleteLinkDataCableRequestData> deleteLinkDataCable;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateDuctDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_LINK_DATA_CABLE = "updateLinkDataCable";
  private List<UpdateDuctUpdateLinkDataCableRequestData> updateLinkDataCable;

  public static final String JSON_PROPERTY_UPDATE_LINK_DUCT_CONTENT = "updateLinkDuctContent";
  private List<UpdateDuctUpdateLinkDuctContentRequestData> updateLinkDuctContent;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateDuctUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateDuctUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateDuctUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateDuctRequestData() {
  }

  public UpdateDuctRequestData color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public UpdateDuctRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateDuctRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateDuctRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateDuctRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateDuctRequestData createLinkContract(List<UpdateDuctCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkContractItem(UpdateDuctCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateDuctCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateDuctRequestData createLinkDataCable(List<UpdateDuctCreateLinkDataCableRequestData> createLinkDataCable) {
    
    this.createLinkDataCable = createLinkDataCable;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkDataCableItem(UpdateDuctCreateLinkDataCableRequestData createLinkDataCableItem) {
    if (this.createLinkDataCable == null) {
      this.createLinkDataCable = new ArrayList<>();
    }
    this.createLinkDataCable.add(createLinkDataCableItem);
    return this;
  }

   /**
   * Get createLinkDataCable
   * @return createLinkDataCable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkDataCableRequestData> getCreateLinkDataCable() {
    return createLinkDataCable;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDataCable(List<UpdateDuctCreateLinkDataCableRequestData> createLinkDataCable) {
    this.createLinkDataCable = createLinkDataCable;
  }


  public UpdateDuctRequestData createLinkFrameContract(List<UpdateDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkFrameContractItem(UpdateDuctCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateDuctRequestData createLinkMaintenanceContract(List<UpdateDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkMaintenanceContractItem(UpdateDuctCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateDuctRequestData createLinkOrganization(List<UpdateDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkOrganizationItem(UpdateDuctCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateDuctRequestData createLinkPerson(List<UpdateDuctCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkPersonItem(UpdateDuctCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateDuctCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateDuctRequestData createLinkPersonGroup(List<UpdateDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateDuctRequestData addCreateLinkPersonGroupItem(UpdateDuctCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateDuctRequestData deleteLinkContract(List<UpdateDuctDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkContractItem(UpdateDuctDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateDuctDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateDuctRequestData deleteLinkDataCable(List<UpdateDuctDeleteLinkDataCableRequestData> deleteLinkDataCable) {
    
    this.deleteLinkDataCable = deleteLinkDataCable;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkDataCableItem(UpdateDuctDeleteLinkDataCableRequestData deleteLinkDataCableItem) {
    if (this.deleteLinkDataCable == null) {
      this.deleteLinkDataCable = new ArrayList<>();
    }
    this.deleteLinkDataCable.add(deleteLinkDataCableItem);
    return this;
  }

   /**
   * Get deleteLinkDataCable
   * @return deleteLinkDataCable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkDataCableRequestData> getDeleteLinkDataCable() {
    return deleteLinkDataCable;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDataCable(List<UpdateDuctDeleteLinkDataCableRequestData> deleteLinkDataCable) {
    this.deleteLinkDataCable = deleteLinkDataCable;
  }


  public UpdateDuctRequestData deleteLinkFrameContract(List<UpdateDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkFrameContractItem(UpdateDuctDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateDuctRequestData deleteLinkMaintenanceContract(List<UpdateDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkMaintenanceContractItem(UpdateDuctDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateDuctRequestData deleteLinkOrganization(List<UpdateDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkOrganizationItem(UpdateDuctDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateDuctRequestData deleteLinkPerson(List<UpdateDuctDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkPersonItem(UpdateDuctDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateDuctDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateDuctRequestData deleteLinkPersonGroup(List<UpdateDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateDuctRequestData addDeleteLinkPersonGroupItem(UpdateDuctDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateDuctRequestData updateLinkDataCable(List<UpdateDuctUpdateLinkDataCableRequestData> updateLinkDataCable) {
    
    this.updateLinkDataCable = updateLinkDataCable;
    return this;
  }

  public UpdateDuctRequestData addUpdateLinkDataCableItem(UpdateDuctUpdateLinkDataCableRequestData updateLinkDataCableItem) {
    if (this.updateLinkDataCable == null) {
      this.updateLinkDataCable = new ArrayList<>();
    }
    this.updateLinkDataCable.add(updateLinkDataCableItem);
    return this;
  }

   /**
   * Get updateLinkDataCable
   * @return updateLinkDataCable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctUpdateLinkDataCableRequestData> getUpdateLinkDataCable() {
    return updateLinkDataCable;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DATA_CABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkDataCable(List<UpdateDuctUpdateLinkDataCableRequestData> updateLinkDataCable) {
    this.updateLinkDataCable = updateLinkDataCable;
  }


  public UpdateDuctRequestData updateLinkDuctContent(List<UpdateDuctUpdateLinkDuctContentRequestData> updateLinkDuctContent) {
    
    this.updateLinkDuctContent = updateLinkDuctContent;
    return this;
  }

  public UpdateDuctRequestData addUpdateLinkDuctContentItem(UpdateDuctUpdateLinkDuctContentRequestData updateLinkDuctContentItem) {
    if (this.updateLinkDuctContent == null) {
      this.updateLinkDuctContent = new ArrayList<>();
    }
    this.updateLinkDuctContent.add(updateLinkDuctContentItem);
    return this;
  }

   /**
   * Get updateLinkDuctContent
   * @return updateLinkDuctContent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DUCT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctUpdateLinkDuctContentRequestData> getUpdateLinkDuctContent() {
    return updateLinkDuctContent;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DUCT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkDuctContent(List<UpdateDuctUpdateLinkDuctContentRequestData> updateLinkDuctContent) {
    this.updateLinkDuctContent = updateLinkDuctContent;
  }


  public UpdateDuctRequestData updateLinkOrganization(List<UpdateDuctUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateDuctRequestData addUpdateLinkOrganizationItem(UpdateDuctUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateDuctUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateDuctRequestData updateLinkPerson(List<UpdateDuctUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateDuctRequestData addUpdateLinkPersonItem(UpdateDuctUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateDuctUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateDuctRequestData updateLinkPersonGroup(List<UpdateDuctUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateDuctRequestData addUpdateLinkPersonGroupItem(UpdateDuctUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateDuctUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateDuctUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDuctRequestData updateDuctRequestData = (UpdateDuctRequestData) o;
    return Objects.equals(this.color, updateDuctRequestData.color) &&
        Objects.equals(this.description, updateDuctRequestData.description) &&
        Objects.equals(this.contextId, updateDuctRequestData.contextId) &&
        Objects.equals(this.visibleId, updateDuctRequestData.visibleId) &&
        Objects.equals(this.id, updateDuctRequestData.id) &&
        Objects.equals(this.createLinkContract, updateDuctRequestData.createLinkContract) &&
        Objects.equals(this.createLinkDataCable, updateDuctRequestData.createLinkDataCable) &&
        Objects.equals(this.createLinkFrameContract, updateDuctRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateDuctRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateDuctRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateDuctRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateDuctRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateDuctRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkDataCable, updateDuctRequestData.deleteLinkDataCable) &&
        Objects.equals(this.deleteLinkFrameContract, updateDuctRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateDuctRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateDuctRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateDuctRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateDuctRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.updateLinkDataCable, updateDuctRequestData.updateLinkDataCable) &&
        Objects.equals(this.updateLinkDuctContent, updateDuctRequestData.updateLinkDuctContent) &&
        Objects.equals(this.updateLinkOrganization, updateDuctRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateDuctRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateDuctRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, description, contextId, visibleId, id, createLinkContract, createLinkDataCable, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkDataCable, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, updateLinkDataCable, updateLinkDuctContent, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDuctRequestData {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkDataCable: ").append(toIndentedString(createLinkDataCable)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkDataCable: ").append(toIndentedString(deleteLinkDataCable)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    updateLinkDataCable: ").append(toIndentedString(updateLinkDataCable)).append("\n");
    sb.append("    updateLinkDuctContent: ").append(toIndentedString(updateLinkDuctContent)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

