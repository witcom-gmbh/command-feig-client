/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServerfarmQueryResponseData
 */
@JsonPropertyOrder({
  ServerfarmQueryResponseData.JSON_PROPERTY_MGMT_SERVER,
  ServerfarmQueryResponseData.JSON_PROPERTY_DATASOURCE,
  ServerfarmQueryResponseData.JSON_PROPERTY_DB_NAME,
  ServerfarmQueryResponseData.JSON_PROPERTY_DATASOURCE_ID,
  ServerfarmQueryResponseData.JSON_PROPERTY_NAME,
  ServerfarmQueryResponseData.JSON_PROPERTY_VISIBLE_ID,
  ServerfarmQueryResponseData.JSON_PROPERTY_ID,
  ServerfarmQueryResponseData.JSON_PROPERTY_ELID,
  ServerfarmQueryResponseData.JSON_PROPERTY_VERSION,
  ServerfarmQueryResponseData.JSON_PROPERTY_DB_SERVER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class ServerfarmQueryResponseData {
  public static final String JSON_PROPERTY_MGMT_SERVER = "mgmtServer";
  private String mgmtServer;

  public static final String JSON_PROPERTY_DATASOURCE = "datasource";
  private String datasource;

  public static final String JSON_PROPERTY_DB_NAME = "dbName";
  private String dbName;

  public static final String JSON_PROPERTY_DATASOURCE_ID = "datasourceId";
  private String datasourceId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_DB_SERVER = "dbServer";
  private String dbServer;

  public ServerfarmQueryResponseData() {
  }

  public ServerfarmQueryResponseData mgmtServer(String mgmtServer) {
    
    this.mgmtServer = mgmtServer;
    return this;
  }

   /**
   * Get mgmtServer
   * @return mgmtServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MGMT_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMgmtServer() {
    return mgmtServer;
  }


  @JsonProperty(JSON_PROPERTY_MGMT_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMgmtServer(String mgmtServer) {
    this.mgmtServer = mgmtServer;
  }


  public ServerfarmQueryResponseData datasource(String datasource) {
    
    this.datasource = datasource;
    return this;
  }

   /**
   * Get datasource
   * @return datasource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasource() {
    return datasource;
  }


  @JsonProperty(JSON_PROPERTY_DATASOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasource(String datasource) {
    this.datasource = datasource;
  }


  public ServerfarmQueryResponseData dbName(String dbName) {
    
    this.dbName = dbName;
    return this;
  }

   /**
   * Get dbName
   * @return dbName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDbName() {
    return dbName;
  }


  @JsonProperty(JSON_PROPERTY_DB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public ServerfarmQueryResponseData datasourceId(String datasourceId) {
    
    this.datasourceId = datasourceId;
    return this;
  }

   /**
   * Get datasourceId
   * @return datasourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasourceId() {
    return datasourceId;
  }


  @JsonProperty(JSON_PROPERTY_DATASOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasourceId(String datasourceId) {
    this.datasourceId = datasourceId;
  }


  public ServerfarmQueryResponseData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ServerfarmQueryResponseData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public ServerfarmQueryResponseData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ServerfarmQueryResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public ServerfarmQueryResponseData version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public ServerfarmQueryResponseData dbServer(String dbServer) {
    
    this.dbServer = dbServer;
    return this;
  }

   /**
   * Get dbServer
   * @return dbServer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DB_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDbServer() {
    return dbServer;
  }


  @JsonProperty(JSON_PROPERTY_DB_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbServer(String dbServer) {
    this.dbServer = dbServer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerfarmQueryResponseData serverfarmQueryResponseData = (ServerfarmQueryResponseData) o;
    return Objects.equals(this.mgmtServer, serverfarmQueryResponseData.mgmtServer) &&
        Objects.equals(this.datasource, serverfarmQueryResponseData.datasource) &&
        Objects.equals(this.dbName, serverfarmQueryResponseData.dbName) &&
        Objects.equals(this.datasourceId, serverfarmQueryResponseData.datasourceId) &&
        Objects.equals(this.name, serverfarmQueryResponseData.name) &&
        Objects.equals(this.visibleId, serverfarmQueryResponseData.visibleId) &&
        Objects.equals(this.id, serverfarmQueryResponseData.id) &&
        Objects.equals(this.elid, serverfarmQueryResponseData.elid) &&
        Objects.equals(this.version, serverfarmQueryResponseData.version) &&
        Objects.equals(this.dbServer, serverfarmQueryResponseData.dbServer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mgmtServer, datasource, dbName, datasourceId, name, visibleId, id, elid, version, dbServer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerfarmQueryResponseData {\n");
    sb.append("    mgmtServer: ").append(toIndentedString(mgmtServer)).append("\n");
    sb.append("    datasource: ").append(toIndentedString(datasource)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    datasourceId: ").append(toIndentedString(datasourceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    dbServer: ").append(toIndentedString(dbServer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

