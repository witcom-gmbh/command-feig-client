/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.ModifyConnectionJunctionBoxConnectToDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.ModifyConnectionJunctionBoxConnectToJunctionBoxRequestData;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ModifyConnectionJunctionBoxRequestData
 */
@JsonPropertyOrder({
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_GEO_DIRECTION,
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_START_WIRE,
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_CABLE_ELID,
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_NUMBER_OF_WIRES,
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_CONNECT_TO_DEVICE_ALL,
  ModifyConnectionJunctionBoxRequestData.JSON_PROPERTY_CONNECT_TO_JUNCTION_BOX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class ModifyConnectionJunctionBoxRequestData {
  public static final String JSON_PROPERTY_GEO_DIRECTION = "geoDirection";
  private String geoDirection;

  public static final String JSON_PROPERTY_START_WIRE = "startWire";
  private BigDecimal startWire;

  public static final String JSON_PROPERTY_CABLE_ELID = "cableElid";
  private String cableElid;

  public static final String JSON_PROPERTY_NUMBER_OF_WIRES = "numberOfWires";
  private BigDecimal numberOfWires;

  public static final String JSON_PROPERTY_CONNECT_TO_DEVICE_ALL = "connectToDeviceAll";
  private ModifyConnectionJunctionBoxConnectToDeviceAllRequestData connectToDeviceAll;

  public static final String JSON_PROPERTY_CONNECT_TO_JUNCTION_BOX = "connectToJunctionBox";
  private ModifyConnectionJunctionBoxConnectToJunctionBoxRequestData connectToJunctionBox;

  public ModifyConnectionJunctionBoxRequestData() {
  }

  public ModifyConnectionJunctionBoxRequestData geoDirection(String geoDirection) {
    
    this.geoDirection = geoDirection;
    return this;
  }

   /**
   * Get geoDirection
   * @return geoDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGeoDirection() {
    return geoDirection;
  }


  @JsonProperty(JSON_PROPERTY_GEO_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeoDirection(String geoDirection) {
    this.geoDirection = geoDirection;
  }


  public ModifyConnectionJunctionBoxRequestData startWire(BigDecimal startWire) {
    
    this.startWire = startWire;
    return this;
  }

   /**
   * Get startWire
   * @return startWire
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_WIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStartWire() {
    return startWire;
  }


  @JsonProperty(JSON_PROPERTY_START_WIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartWire(BigDecimal startWire) {
    this.startWire = startWire;
  }


  public ModifyConnectionJunctionBoxRequestData cableElid(String cableElid) {
    
    this.cableElid = cableElid;
    return this;
  }

   /**
   * Get cableElid
   * @return cableElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableElid() {
    return cableElid;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableElid(String cableElid) {
    this.cableElid = cableElid;
  }


  public ModifyConnectionJunctionBoxRequestData numberOfWires(BigDecimal numberOfWires) {
    
    this.numberOfWires = numberOfWires;
    return this;
  }

   /**
   * Get numberOfWires
   * @return numberOfWires
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_WIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNumberOfWires() {
    return numberOfWires;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_WIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfWires(BigDecimal numberOfWires) {
    this.numberOfWires = numberOfWires;
  }


  public ModifyConnectionJunctionBoxRequestData connectToDeviceAll(ModifyConnectionJunctionBoxConnectToDeviceAllRequestData connectToDeviceAll) {
    
    this.connectToDeviceAll = connectToDeviceAll;
    return this;
  }

   /**
   * Get connectToDeviceAll
   * @return connectToDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECT_TO_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModifyConnectionJunctionBoxConnectToDeviceAllRequestData getConnectToDeviceAll() {
    return connectToDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_TO_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectToDeviceAll(ModifyConnectionJunctionBoxConnectToDeviceAllRequestData connectToDeviceAll) {
    this.connectToDeviceAll = connectToDeviceAll;
  }


  public ModifyConnectionJunctionBoxRequestData connectToJunctionBox(ModifyConnectionJunctionBoxConnectToJunctionBoxRequestData connectToJunctionBox) {
    
    this.connectToJunctionBox = connectToJunctionBox;
    return this;
  }

   /**
   * Get connectToJunctionBox
   * @return connectToJunctionBox
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECT_TO_JUNCTION_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModifyConnectionJunctionBoxConnectToJunctionBoxRequestData getConnectToJunctionBox() {
    return connectToJunctionBox;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_TO_JUNCTION_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectToJunctionBox(ModifyConnectionJunctionBoxConnectToJunctionBoxRequestData connectToJunctionBox) {
    this.connectToJunctionBox = connectToJunctionBox;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyConnectionJunctionBoxRequestData modifyConnectionJunctionBoxRequestData = (ModifyConnectionJunctionBoxRequestData) o;
    return Objects.equals(this.geoDirection, modifyConnectionJunctionBoxRequestData.geoDirection) &&
        Objects.equals(this.startWire, modifyConnectionJunctionBoxRequestData.startWire) &&
        Objects.equals(this.cableElid, modifyConnectionJunctionBoxRequestData.cableElid) &&
        Objects.equals(this.numberOfWires, modifyConnectionJunctionBoxRequestData.numberOfWires) &&
        Objects.equals(this.connectToDeviceAll, modifyConnectionJunctionBoxRequestData.connectToDeviceAll) &&
        Objects.equals(this.connectToJunctionBox, modifyConnectionJunctionBoxRequestData.connectToJunctionBox);
  }

  @Override
  public int hashCode() {
    return Objects.hash(geoDirection, startWire, cableElid, numberOfWires, connectToDeviceAll, connectToJunctionBox);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyConnectionJunctionBoxRequestData {\n");
    sb.append("    geoDirection: ").append(toIndentedString(geoDirection)).append("\n");
    sb.append("    startWire: ").append(toIndentedString(startWire)).append("\n");
    sb.append("    cableElid: ").append(toIndentedString(cableElid)).append("\n");
    sb.append("    numberOfWires: ").append(toIndentedString(numberOfWires)).append("\n");
    sb.append("    connectToDeviceAll: ").append(toIndentedString(connectToDeviceAll)).append("\n");
    sb.append("    connectToJunctionBox: ").append(toIndentedString(connectToJunctionBox)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

