/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LogicalConnectionPowerLogicalConnectionPowerResponseData
 */
@JsonPropertyOrder({
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_HIERARCHY,
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_DESCRIPTION,
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_INSTANCE_OF_SPEC,
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_TYPE,
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_ELID,
  LogicalConnectionPowerLogicalConnectionPowerResponseData.JSON_PROPERTY_OCCUPIED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class LogicalConnectionPowerLogicalConnectionPowerResponseData {
  public static final String JSON_PROPERTY_HIERARCHY = "hierarchy";
  private String hierarchy;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_INSTANCE_OF_SPEC = "instanceOfSpec";
  private String instanceOfSpec;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_OCCUPIED = "occupied";
  private String occupied;

  public LogicalConnectionPowerLogicalConnectionPowerResponseData() {
  }

  public LogicalConnectionPowerLogicalConnectionPowerResponseData hierarchy(String hierarchy) {
    
    this.hierarchy = hierarchy;
    return this;
  }

   /**
   * Get hierarchy
   * @return hierarchy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHierarchy() {
    return hierarchy;
  }


  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHierarchy(String hierarchy) {
    this.hierarchy = hierarchy;
  }


  public LogicalConnectionPowerLogicalConnectionPowerResponseData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public LogicalConnectionPowerLogicalConnectionPowerResponseData instanceOfSpec(String instanceOfSpec) {
    
    this.instanceOfSpec = instanceOfSpec;
    return this;
  }

   /**
   * Get instanceOfSpec
   * @return instanceOfSpec
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_OF_SPEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceOfSpec() {
    return instanceOfSpec;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_OF_SPEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceOfSpec(String instanceOfSpec) {
    this.instanceOfSpec = instanceOfSpec;
  }


  public LogicalConnectionPowerLogicalConnectionPowerResponseData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public LogicalConnectionPowerLogicalConnectionPowerResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public LogicalConnectionPowerLogicalConnectionPowerResponseData occupied(String occupied) {
    
    this.occupied = occupied;
    return this;
  }

   /**
   * Get occupied
   * @return occupied
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOccupied() {
    return occupied;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupied(String occupied) {
    this.occupied = occupied;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalConnectionPowerLogicalConnectionPowerResponseData logicalConnectionPowerLogicalConnectionPowerResponseData = (LogicalConnectionPowerLogicalConnectionPowerResponseData) o;
    return Objects.equals(this.hierarchy, logicalConnectionPowerLogicalConnectionPowerResponseData.hierarchy) &&
        Objects.equals(this.description, logicalConnectionPowerLogicalConnectionPowerResponseData.description) &&
        Objects.equals(this.instanceOfSpec, logicalConnectionPowerLogicalConnectionPowerResponseData.instanceOfSpec) &&
        Objects.equals(this.type, logicalConnectionPowerLogicalConnectionPowerResponseData.type) &&
        Objects.equals(this.elid, logicalConnectionPowerLogicalConnectionPowerResponseData.elid) &&
        Objects.equals(this.occupied, logicalConnectionPowerLogicalConnectionPowerResponseData.occupied);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hierarchy, description, instanceOfSpec, type, elid, occupied);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalConnectionPowerLogicalConnectionPowerResponseData {\n");
    sb.append("    hierarchy: ").append(toIndentedString(hierarchy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instanceOfSpec: ").append(toIndentedString(instanceOfSpec)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

