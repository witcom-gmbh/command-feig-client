/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NodeQueryLogicalCisResponseData
 */
@JsonPropertyOrder({
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_CI_CLASS_NAME,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_STATUS_ACTION,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_INFO1,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_DESCRIPTION,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_CI_CLASS,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_ID,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_LINK_ELID,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_ELID,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_INFO3,
  NodeQueryLogicalCisResponseData.JSON_PROPERTY_INFO2
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class NodeQueryLogicalCisResponseData {
  public static final String JSON_PROPERTY_CI_CLASS_NAME = "ciClassName";
  private String ciClassName;

  public static final String JSON_PROPERTY_STATUS_ACTION = "statusAction";
  private BigDecimal statusAction;

  public static final String JSON_PROPERTY_INFO1 = "info1";
  private String info1;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CI_CLASS = "ciClass";
  private String ciClass;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LINK_ELID = "linkElid";
  private String linkElid;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_INFO3 = "info3";
  private String info3;

  public static final String JSON_PROPERTY_INFO2 = "info2";
  private String info2;

  public NodeQueryLogicalCisResponseData() {
  }

  public NodeQueryLogicalCisResponseData ciClassName(String ciClassName) {
    
    this.ciClassName = ciClassName;
    return this;
  }

   /**
   * Get ciClassName
   * @return ciClassName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CI_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCiClassName() {
    return ciClassName;
  }


  @JsonProperty(JSON_PROPERTY_CI_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiClassName(String ciClassName) {
    this.ciClassName = ciClassName;
  }


  public NodeQueryLogicalCisResponseData statusAction(BigDecimal statusAction) {
    
    this.statusAction = statusAction;
    return this;
  }

   /**
   * Get statusAction
   * @return statusAction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStatusAction() {
    return statusAction;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusAction(BigDecimal statusAction) {
    this.statusAction = statusAction;
  }


  public NodeQueryLogicalCisResponseData info1(String info1) {
    
    this.info1 = info1;
    return this;
  }

   /**
   * Get info1
   * @return info1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFO1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInfo1() {
    return info1;
  }


  @JsonProperty(JSON_PROPERTY_INFO1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfo1(String info1) {
    this.info1 = info1;
  }


  public NodeQueryLogicalCisResponseData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public NodeQueryLogicalCisResponseData ciClass(String ciClass) {
    
    this.ciClass = ciClass;
    return this;
  }

   /**
   * Get ciClass
   * @return ciClass
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CI_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCiClass() {
    return ciClass;
  }


  @JsonProperty(JSON_PROPERTY_CI_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiClass(String ciClass) {
    this.ciClass = ciClass;
  }


  public NodeQueryLogicalCisResponseData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public NodeQueryLogicalCisResponseData linkElid(String linkElid) {
    
    this.linkElid = linkElid;
    return this;
  }

   /**
   * Get linkElid
   * @return linkElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkElid() {
    return linkElid;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkElid(String linkElid) {
    this.linkElid = linkElid;
  }


  public NodeQueryLogicalCisResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public NodeQueryLogicalCisResponseData info3(String info3) {
    
    this.info3 = info3;
    return this;
  }

   /**
   * Get info3
   * @return info3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFO3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInfo3() {
    return info3;
  }


  @JsonProperty(JSON_PROPERTY_INFO3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfo3(String info3) {
    this.info3 = info3;
  }


  public NodeQueryLogicalCisResponseData info2(String info2) {
    
    this.info2 = info2;
    return this;
  }

   /**
   * Get info2
   * @return info2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFO2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInfo2() {
    return info2;
  }


  @JsonProperty(JSON_PROPERTY_INFO2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfo2(String info2) {
    this.info2 = info2;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeQueryLogicalCisResponseData nodeQueryLogicalCisResponseData = (NodeQueryLogicalCisResponseData) o;
    return Objects.equals(this.ciClassName, nodeQueryLogicalCisResponseData.ciClassName) &&
        Objects.equals(this.statusAction, nodeQueryLogicalCisResponseData.statusAction) &&
        Objects.equals(this.info1, nodeQueryLogicalCisResponseData.info1) &&
        Objects.equals(this.description, nodeQueryLogicalCisResponseData.description) &&
        Objects.equals(this.ciClass, nodeQueryLogicalCisResponseData.ciClass) &&
        Objects.equals(this.id, nodeQueryLogicalCisResponseData.id) &&
        Objects.equals(this.linkElid, nodeQueryLogicalCisResponseData.linkElid) &&
        Objects.equals(this.elid, nodeQueryLogicalCisResponseData.elid) &&
        Objects.equals(this.info3, nodeQueryLogicalCisResponseData.info3) &&
        Objects.equals(this.info2, nodeQueryLogicalCisResponseData.info2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ciClassName, statusAction, info1, description, ciClass, id, linkElid, elid, info3, info2);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeQueryLogicalCisResponseData {\n");
    sb.append("    ciClassName: ").append(toIndentedString(ciClassName)).append("\n");
    sb.append("    statusAction: ").append(toIndentedString(statusAction)).append("\n");
    sb.append("    info1: ").append(toIndentedString(info1)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ciClass: ").append(toIndentedString(ciClass)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    linkElid: ").append(toIndentedString(linkElid)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    info3: ").append(toIndentedString(info3)).append("\n");
    sb.append("    info2: ").append(toIndentedString(info2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

