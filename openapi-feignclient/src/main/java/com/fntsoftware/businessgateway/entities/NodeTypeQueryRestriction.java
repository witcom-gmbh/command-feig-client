/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsBoolean;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NodeTypeQueryRestriction
 */
@JsonPropertyOrder({
  NodeTypeQueryRestriction.JSON_PROPERTY_DISPLAY_IN_NAVIGATOR,
  NodeTypeQueryRestriction.JSON_PROPERTY_IS_STANDARD,
  NodeTypeQueryRestriction.JSON_PROPERTY_DESCRIPTION,
  NodeTypeQueryRestriction.JSON_PROPERTY_ID_PREFIX,
  NodeTypeQueryRestriction.JSON_PROPERTY_SLACK_CORRECTION,
  NodeTypeQueryRestriction.JSON_PROPERTY_PLACE_OBJECTS,
  NodeTypeQueryRestriction.JSON_PROPERTY_TYPE,
  NodeTypeQueryRestriction.JSON_PROPERTY_ELID,
  NodeTypeQueryRestriction.JSON_PROPERTY_FIRST,
  NodeTypeQueryRestriction.JSON_PROPERTY_GRAPHICAL_NODE,
  NodeTypeQueryRestriction.JSON_PROPERTY_MANUFACTURER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class NodeTypeQueryRestriction {
  public static final String JSON_PROPERTY_DISPLAY_IN_NAVIGATOR = "displayInNavigator";
  private RestrictionsBoolean displayInNavigator;

  public static final String JSON_PROPERTY_IS_STANDARD = "isStandard";
  private RestrictionsBoolean isStandard;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private RestrictionsString description;

  public static final String JSON_PROPERTY_ID_PREFIX = "idPrefix";
  private RestrictionsString idPrefix;

  public static final String JSON_PROPERTY_SLACK_CORRECTION = "slackCorrection";
  private RestrictionsNumeric slackCorrection;

  public static final String JSON_PROPERTY_PLACE_OBJECTS = "placeObjects";
  private RestrictionsBoolean placeObjects;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RestrictionsString type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private RestrictionsString elid;

  public static final String JSON_PROPERTY_FIRST = "first";
  private RestrictionsNumeric first;

  public static final String JSON_PROPERTY_GRAPHICAL_NODE = "graphicalNode";
  private RestrictionsString graphicalNode;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private RestrictionsString manufacturer;

  public NodeTypeQueryRestriction() {
  }

  public NodeTypeQueryRestriction displayInNavigator(RestrictionsBoolean displayInNavigator) {
    
    this.displayInNavigator = displayInNavigator;
    return this;
  }

   /**
   * Get displayInNavigator
   * @return displayInNavigator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_IN_NAVIGATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getDisplayInNavigator() {
    return displayInNavigator;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_IN_NAVIGATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayInNavigator(RestrictionsBoolean displayInNavigator) {
    this.displayInNavigator = displayInNavigator;
  }


  public NodeTypeQueryRestriction isStandard(RestrictionsBoolean isStandard) {
    
    this.isStandard = isStandard;
    return this;
  }

   /**
   * Get isStandard
   * @return isStandard
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getIsStandard() {
    return isStandard;
  }


  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStandard(RestrictionsBoolean isStandard) {
    this.isStandard = isStandard;
  }


  public NodeTypeQueryRestriction description(RestrictionsString description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(RestrictionsString description) {
    this.description = description;
  }


  public NodeTypeQueryRestriction idPrefix(RestrictionsString idPrefix) {
    
    this.idPrefix = idPrefix;
    return this;
  }

   /**
   * Get idPrefix
   * @return idPrefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getIdPrefix() {
    return idPrefix;
  }


  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdPrefix(RestrictionsString idPrefix) {
    this.idPrefix = idPrefix;
  }


  public NodeTypeQueryRestriction slackCorrection(RestrictionsNumeric slackCorrection) {
    
    this.slackCorrection = slackCorrection;
    return this;
  }

   /**
   * Get slackCorrection
   * @return slackCorrection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLACK_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getSlackCorrection() {
    return slackCorrection;
  }


  @JsonProperty(JSON_PROPERTY_SLACK_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlackCorrection(RestrictionsNumeric slackCorrection) {
    this.slackCorrection = slackCorrection;
  }


  public NodeTypeQueryRestriction placeObjects(RestrictionsBoolean placeObjects) {
    
    this.placeObjects = placeObjects;
    return this;
  }

   /**
   * Get placeObjects
   * @return placeObjects
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACE_OBJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getPlaceObjects() {
    return placeObjects;
  }


  @JsonProperty(JSON_PROPERTY_PLACE_OBJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceObjects(RestrictionsBoolean placeObjects) {
    this.placeObjects = placeObjects;
  }


  public NodeTypeQueryRestriction type(RestrictionsString type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(RestrictionsString type) {
    this.type = type;
  }


  public NodeTypeQueryRestriction elid(RestrictionsString elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(RestrictionsString elid) {
    this.elid = elid;
  }


  public NodeTypeQueryRestriction first(RestrictionsNumeric first) {
    
    this.first = first;
    return this;
  }

   /**
   * Get first
   * @return first
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getFirst() {
    return first;
  }


  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirst(RestrictionsNumeric first) {
    this.first = first;
  }


  public NodeTypeQueryRestriction graphicalNode(RestrictionsString graphicalNode) {
    
    this.graphicalNode = graphicalNode;
    return this;
  }

   /**
   * Get graphicalNode
   * @return graphicalNode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRAPHICAL_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getGraphicalNode() {
    return graphicalNode;
  }


  @JsonProperty(JSON_PROPERTY_GRAPHICAL_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGraphicalNode(RestrictionsString graphicalNode) {
    this.graphicalNode = graphicalNode;
  }


  public NodeTypeQueryRestriction manufacturer(RestrictionsString manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(RestrictionsString manufacturer) {
    this.manufacturer = manufacturer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeTypeQueryRestriction nodeTypeQueryRestriction = (NodeTypeQueryRestriction) o;
    return Objects.equals(this.displayInNavigator, nodeTypeQueryRestriction.displayInNavigator) &&
        Objects.equals(this.isStandard, nodeTypeQueryRestriction.isStandard) &&
        Objects.equals(this.description, nodeTypeQueryRestriction.description) &&
        Objects.equals(this.idPrefix, nodeTypeQueryRestriction.idPrefix) &&
        Objects.equals(this.slackCorrection, nodeTypeQueryRestriction.slackCorrection) &&
        Objects.equals(this.placeObjects, nodeTypeQueryRestriction.placeObjects) &&
        Objects.equals(this.type, nodeTypeQueryRestriction.type) &&
        Objects.equals(this.elid, nodeTypeQueryRestriction.elid) &&
        Objects.equals(this.first, nodeTypeQueryRestriction.first) &&
        Objects.equals(this.graphicalNode, nodeTypeQueryRestriction.graphicalNode) &&
        Objects.equals(this.manufacturer, nodeTypeQueryRestriction.manufacturer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayInNavigator, isStandard, description, idPrefix, slackCorrection, placeObjects, type, elid, first, graphicalNode, manufacturer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeTypeQueryRestriction {\n");
    sb.append("    displayInNavigator: ").append(toIndentedString(displayInNavigator)).append("\n");
    sb.append("    isStandard: ").append(toIndentedString(isStandard)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    idPrefix: ").append(toIndentedString(idPrefix)).append("\n");
    sb.append("    slackCorrection: ").append(toIndentedString(slackCorrection)).append("\n");
    sb.append("    placeObjects: ").append(toIndentedString(placeObjects)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("    graphicalNode: ").append(toIndentedString(graphicalNode)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

