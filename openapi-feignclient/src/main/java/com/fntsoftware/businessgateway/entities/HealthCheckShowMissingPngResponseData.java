/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HealthCheckShowMissingPngResponseData
 */
@JsonPropertyOrder({
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_DATABASE,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_TYPE_FILESYSTEM,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_PIXMAP,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_MANUFACTURER_FILESYSTEM,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_TYPE,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_DIRECTORY,
  HealthCheckShowMissingPngResponseData.JSON_PROPERTY_MANUFACTURER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class HealthCheckShowMissingPngResponseData {
  public static final String JSON_PROPERTY_DATABASE = "database";
  private String database;

  public static final String JSON_PROPERTY_TYPE_FILESYSTEM = "typeFilesystem";
  private String typeFilesystem;

  public static final String JSON_PROPERTY_PIXMAP = "pixmap";
  private String pixmap;

  public static final String JSON_PROPERTY_MANUFACTURER_FILESYSTEM = "manufacturerFilesystem";
  private String manufacturerFilesystem;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_DIRECTORY = "directory";
  private String directory;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  public HealthCheckShowMissingPngResponseData() {
  }

  public HealthCheckShowMissingPngResponseData database(String database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabase() {
    return database;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabase(String database) {
    this.database = database;
  }


  public HealthCheckShowMissingPngResponseData typeFilesystem(String typeFilesystem) {
    
    this.typeFilesystem = typeFilesystem;
    return this;
  }

   /**
   * Get typeFilesystem
   * @return typeFilesystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_FILESYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeFilesystem() {
    return typeFilesystem;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_FILESYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeFilesystem(String typeFilesystem) {
    this.typeFilesystem = typeFilesystem;
  }


  public HealthCheckShowMissingPngResponseData pixmap(String pixmap) {
    
    this.pixmap = pixmap;
    return this;
  }

   /**
   * Get pixmap
   * @return pixmap
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PIXMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPixmap() {
    return pixmap;
  }


  @JsonProperty(JSON_PROPERTY_PIXMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPixmap(String pixmap) {
    this.pixmap = pixmap;
  }


  public HealthCheckShowMissingPngResponseData manufacturerFilesystem(String manufacturerFilesystem) {
    
    this.manufacturerFilesystem = manufacturerFilesystem;
    return this;
  }

   /**
   * Get manufacturerFilesystem
   * @return manufacturerFilesystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER_FILESYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturerFilesystem() {
    return manufacturerFilesystem;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER_FILESYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturerFilesystem(String manufacturerFilesystem) {
    this.manufacturerFilesystem = manufacturerFilesystem;
  }


  public HealthCheckShowMissingPngResponseData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public HealthCheckShowMissingPngResponseData directory(String directory) {
    
    this.directory = directory;
    return this;
  }

   /**
   * Get directory
   * @return directory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectory() {
    return directory;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectory(String directory) {
    this.directory = directory;
  }


  public HealthCheckShowMissingPngResponseData manufacturer(String manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckShowMissingPngResponseData healthCheckShowMissingPngResponseData = (HealthCheckShowMissingPngResponseData) o;
    return Objects.equals(this.database, healthCheckShowMissingPngResponseData.database) &&
        Objects.equals(this.typeFilesystem, healthCheckShowMissingPngResponseData.typeFilesystem) &&
        Objects.equals(this.pixmap, healthCheckShowMissingPngResponseData.pixmap) &&
        Objects.equals(this.manufacturerFilesystem, healthCheckShowMissingPngResponseData.manufacturerFilesystem) &&
        Objects.equals(this.type, healthCheckShowMissingPngResponseData.type) &&
        Objects.equals(this.directory, healthCheckShowMissingPngResponseData.directory) &&
        Objects.equals(this.manufacturer, healthCheckShowMissingPngResponseData.manufacturer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(database, typeFilesystem, pixmap, manufacturerFilesystem, type, directory, manufacturer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckShowMissingPngResponseData {\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    typeFilesystem: ").append(toIndentedString(typeFilesystem)).append("\n");
    sb.append("    pixmap: ").append(toIndentedString(pixmap)).append("\n");
    sb.append("    manufacturerFilesystem: ").append(toIndentedString(manufacturerFilesystem)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

