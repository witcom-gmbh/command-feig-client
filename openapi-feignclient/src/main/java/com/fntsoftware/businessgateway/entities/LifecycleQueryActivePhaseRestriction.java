/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsBoolean;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LifecycleQueryActivePhaseRestriction
 */
@JsonPropertyOrder({
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_ACTIVE_PHASE,
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_NAME,
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_REMARK,
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_USED,
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_TYPE,
  LifecycleQueryActivePhaseRestriction.JSON_PROPERTY_ELID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class LifecycleQueryActivePhaseRestriction {
  public static final String JSON_PROPERTY_ACTIVE_PHASE = "activePhase";
  private RestrictionsBoolean activePhase;

  public static final String JSON_PROPERTY_NAME = "name";
  private RestrictionsString name;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private RestrictionsString remark;

  public static final String JSON_PROPERTY_USED = "used";
  private RestrictionsBoolean used;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RestrictionsString type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private RestrictionsString elid;

  public LifecycleQueryActivePhaseRestriction() {
  }

  public LifecycleQueryActivePhaseRestriction activePhase(RestrictionsBoolean activePhase) {
    
    this.activePhase = activePhase;
    return this;
  }

   /**
   * Get activePhase
   * @return activePhase
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getActivePhase() {
    return activePhase;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivePhase(RestrictionsBoolean activePhase) {
    this.activePhase = activePhase;
  }


  public LifecycleQueryActivePhaseRestriction name(RestrictionsString name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(RestrictionsString name) {
    this.name = name;
  }


  public LifecycleQueryActivePhaseRestriction remark(RestrictionsString remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(RestrictionsString remark) {
    this.remark = remark;
  }


  public LifecycleQueryActivePhaseRestriction used(RestrictionsBoolean used) {
    
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsBoolean getUsed() {
    return used;
  }


  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsed(RestrictionsBoolean used) {
    this.used = used;
  }


  public LifecycleQueryActivePhaseRestriction type(RestrictionsString type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(RestrictionsString type) {
    this.type = type;
  }


  public LifecycleQueryActivePhaseRestriction elid(RestrictionsString elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(RestrictionsString elid) {
    this.elid = elid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LifecycleQueryActivePhaseRestriction lifecycleQueryActivePhaseRestriction = (LifecycleQueryActivePhaseRestriction) o;
    return Objects.equals(this.activePhase, lifecycleQueryActivePhaseRestriction.activePhase) &&
        Objects.equals(this.name, lifecycleQueryActivePhaseRestriction.name) &&
        Objects.equals(this.remark, lifecycleQueryActivePhaseRestriction.remark) &&
        Objects.equals(this.used, lifecycleQueryActivePhaseRestriction.used) &&
        Objects.equals(this.type, lifecycleQueryActivePhaseRestriction.type) &&
        Objects.equals(this.elid, lifecycleQueryActivePhaseRestriction.elid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activePhase, name, remark, used, type, elid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LifecycleQueryActivePhaseRestriction {\n");
    sb.append("    activePhase: ").append(toIndentedString(activePhase)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

