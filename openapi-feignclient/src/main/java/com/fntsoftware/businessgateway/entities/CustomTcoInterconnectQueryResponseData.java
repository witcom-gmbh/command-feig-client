/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CustomTcoInterconnectQueryResponseData
 */
@JsonPropertyOrder({
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_SERVICE_DIRECTION,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_REFERENCE3,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_NAME,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_EXTERN,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_REFERENCE1,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_REMARK,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_ID,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_REFERENCE2,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_TECHNOLOGY,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_ELID,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_SINGLESERVICE,
  CustomTcoInterconnectQueryResponseData.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class CustomTcoInterconnectQueryResponseData {
  public static final String JSON_PROPERTY_SERVICE_DIRECTION = "serviceDirection";
  private String serviceDirection;

  public static final String JSON_PROPERTY_REFERENCE3 = "reference3";
  private String reference3;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EXTERN = "extern";
  private String extern;

  public static final String JSON_PROPERTY_REFERENCE1 = "reference1";
  private String reference1;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_REFERENCE2 = "reference2";
  private String reference2;

  public static final String JSON_PROPERTY_TECHNOLOGY = "technology";
  private String technology;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_SINGLESERVICE = "singleservice";
  private String singleservice;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public CustomTcoInterconnectQueryResponseData() {
  }

  public CustomTcoInterconnectQueryResponseData serviceDirection(String serviceDirection) {
    
    this.serviceDirection = serviceDirection;
    return this;
  }

   /**
   * Get serviceDirection
   * @return serviceDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceDirection() {
    return serviceDirection;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceDirection(String serviceDirection) {
    this.serviceDirection = serviceDirection;
  }


  public CustomTcoInterconnectQueryResponseData reference3(String reference3) {
    
    this.reference3 = reference3;
    return this;
  }

   /**
   * Get reference3
   * @return reference3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference3() {
    return reference3;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference3(String reference3) {
    this.reference3 = reference3;
  }


  public CustomTcoInterconnectQueryResponseData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CustomTcoInterconnectQueryResponseData extern(String extern) {
    
    this.extern = extern;
    return this;
  }

   /**
   * Get extern
   * @return extern
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtern() {
    return extern;
  }


  @JsonProperty(JSON_PROPERTY_EXTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtern(String extern) {
    this.extern = extern;
  }


  public CustomTcoInterconnectQueryResponseData reference1(String reference1) {
    
    this.reference1 = reference1;
    return this;
  }

   /**
   * Get reference1
   * @return reference1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference1() {
    return reference1;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference1(String reference1) {
    this.reference1 = reference1;
  }


  public CustomTcoInterconnectQueryResponseData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public CustomTcoInterconnectQueryResponseData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CustomTcoInterconnectQueryResponseData reference2(String reference2) {
    
    this.reference2 = reference2;
    return this;
  }

   /**
   * Get reference2
   * @return reference2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference2() {
    return reference2;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference2(String reference2) {
    this.reference2 = reference2;
  }


  public CustomTcoInterconnectQueryResponseData technology(String technology) {
    
    this.technology = technology;
    return this;
  }

   /**
   * Get technology
   * @return technology
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTechnology() {
    return technology;
  }


  @JsonProperty(JSON_PROPERTY_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnology(String technology) {
    this.technology = technology;
  }


  public CustomTcoInterconnectQueryResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public CustomTcoInterconnectQueryResponseData singleservice(String singleservice) {
    
    this.singleservice = singleservice;
    return this;
  }

   /**
   * Get singleservice
   * @return singleservice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLESERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSingleservice() {
    return singleservice;
  }


  @JsonProperty(JSON_PROPERTY_SINGLESERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSingleservice(String singleservice) {
    this.singleservice = singleservice;
  }


  public CustomTcoInterconnectQueryResponseData status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomTcoInterconnectQueryResponseData customTcoInterconnectQueryResponseData = (CustomTcoInterconnectQueryResponseData) o;
    return Objects.equals(this.serviceDirection, customTcoInterconnectQueryResponseData.serviceDirection) &&
        Objects.equals(this.reference3, customTcoInterconnectQueryResponseData.reference3) &&
        Objects.equals(this.name, customTcoInterconnectQueryResponseData.name) &&
        Objects.equals(this.extern, customTcoInterconnectQueryResponseData.extern) &&
        Objects.equals(this.reference1, customTcoInterconnectQueryResponseData.reference1) &&
        Objects.equals(this.remark, customTcoInterconnectQueryResponseData.remark) &&
        Objects.equals(this.id, customTcoInterconnectQueryResponseData.id) &&
        Objects.equals(this.reference2, customTcoInterconnectQueryResponseData.reference2) &&
        Objects.equals(this.technology, customTcoInterconnectQueryResponseData.technology) &&
        Objects.equals(this.elid, customTcoInterconnectQueryResponseData.elid) &&
        Objects.equals(this.singleservice, customTcoInterconnectQueryResponseData.singleservice) &&
        Objects.equals(this.status, customTcoInterconnectQueryResponseData.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceDirection, reference3, name, extern, reference1, remark, id, reference2, technology, elid, singleservice, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomTcoInterconnectQueryResponseData {\n");
    sb.append("    serviceDirection: ").append(toIndentedString(serviceDirection)).append("\n");
    sb.append("    reference3: ").append(toIndentedString(reference3)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    extern: ").append(toIndentedString(extern)).append("\n");
    sb.append("    reference1: ").append(toIndentedString(reference1)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    reference2: ").append(toIndentedString(reference2)).append("\n");
    sb.append("    technology: ").append(toIndentedString(technology)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    singleservice: ").append(toIndentedString(singleservice)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

