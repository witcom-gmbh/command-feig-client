/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HealthCheckGetAppServerSettingsResponseData
 */
@JsonPropertyOrder({
  HealthCheckGetAppServerSettingsResponseData.JSON_PROPERTY_JAVA_PERMGEN_SPACE,
  HealthCheckGetAppServerSettingsResponseData.JSON_PROPERTY_JAVA_HEAP_SPACE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class HealthCheckGetAppServerSettingsResponseData {
  public static final String JSON_PROPERTY_JAVA_PERMGEN_SPACE = "javaPermgenSpace";
  private String javaPermgenSpace;

  public static final String JSON_PROPERTY_JAVA_HEAP_SPACE = "javaHeapSpace";
  private String javaHeapSpace;

  public HealthCheckGetAppServerSettingsResponseData() {
  }

  public HealthCheckGetAppServerSettingsResponseData javaPermgenSpace(String javaPermgenSpace) {
    
    this.javaPermgenSpace = javaPermgenSpace;
    return this;
  }

   /**
   * Get javaPermgenSpace
   * @return javaPermgenSpace
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JAVA_PERMGEN_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJavaPermgenSpace() {
    return javaPermgenSpace;
  }


  @JsonProperty(JSON_PROPERTY_JAVA_PERMGEN_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJavaPermgenSpace(String javaPermgenSpace) {
    this.javaPermgenSpace = javaPermgenSpace;
  }


  public HealthCheckGetAppServerSettingsResponseData javaHeapSpace(String javaHeapSpace) {
    
    this.javaHeapSpace = javaHeapSpace;
    return this;
  }

   /**
   * Get javaHeapSpace
   * @return javaHeapSpace
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JAVA_HEAP_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJavaHeapSpace() {
    return javaHeapSpace;
  }


  @JsonProperty(JSON_PROPERTY_JAVA_HEAP_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJavaHeapSpace(String javaHeapSpace) {
    this.javaHeapSpace = javaHeapSpace;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckGetAppServerSettingsResponseData healthCheckGetAppServerSettingsResponseData = (HealthCheckGetAppServerSettingsResponseData) o;
    return Objects.equals(this.javaPermgenSpace, healthCheckGetAppServerSettingsResponseData.javaPermgenSpace) &&
        Objects.equals(this.javaHeapSpace, healthCheckGetAppServerSettingsResponseData.javaHeapSpace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(javaPermgenSpace, javaHeapSpace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckGetAppServerSettingsResponseData {\n");
    sb.append("    javaPermgenSpace: ").append(toIndentedString(javaPermgenSpace)).append("\n");
    sb.append("    javaHeapSpace: ").append(toIndentedString(javaHeapSpace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

