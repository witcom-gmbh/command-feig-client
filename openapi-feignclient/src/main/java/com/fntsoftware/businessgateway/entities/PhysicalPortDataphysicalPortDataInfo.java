/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.DeviceAlldeviceAllInfo;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PhysicalPortDataphysicalPortDataInfo
 */
@JsonPropertyOrder({
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_DEVICE_ALL_ELID,
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_SOCKET_NAME,
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_PORT_IDENTIFIER,
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_SOCKET_SIDE,
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_SOCKET_NO,
  PhysicalPortDataphysicalPortDataInfo.JSON_PROPERTY_DEVICE_ALL
})
@JsonTypeName("physicalPortDataphysicalPortDataInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class PhysicalPortDataphysicalPortDataInfo {
  public static final String JSON_PROPERTY_DEVICE_ALL_ELID = "deviceAllElid";
  private String deviceAllElid;

  public static final String JSON_PROPERTY_SOCKET_NAME = "socketName";
  private String socketName;

  public static final String JSON_PROPERTY_PORT_IDENTIFIER = "portIdentifier";
  private String portIdentifier;

  public static final String JSON_PROPERTY_SOCKET_SIDE = "socketSide";
  private String socketSide;

  public static final String JSON_PROPERTY_SOCKET_NO = "socketNo";
  private BigDecimal socketNo;

  public static final String JSON_PROPERTY_DEVICE_ALL = "deviceAll";
  private DeviceAlldeviceAllInfo deviceAll;

  public PhysicalPortDataphysicalPortDataInfo() {
  }

  public PhysicalPortDataphysicalPortDataInfo deviceAllElid(String deviceAllElid) {
    
    this.deviceAllElid = deviceAllElid;
    return this;
  }

   /**
   * Get deviceAllElid
   * @return deviceAllElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceAllElid() {
    return deviceAllElid;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAllElid(String deviceAllElid) {
    this.deviceAllElid = deviceAllElid;
  }


  public PhysicalPortDataphysicalPortDataInfo socketName(String socketName) {
    
    this.socketName = socketName;
    return this;
  }

   /**
   * Get socketName
   * @return socketName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSocketName() {
    return socketName;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketName(String socketName) {
    this.socketName = socketName;
  }


  public PhysicalPortDataphysicalPortDataInfo portIdentifier(String portIdentifier) {
    
    this.portIdentifier = portIdentifier;
    return this;
  }

   /**
   * Get portIdentifier
   * @return portIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortIdentifier() {
    return portIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortIdentifier(String portIdentifier) {
    this.portIdentifier = portIdentifier;
  }


  public PhysicalPortDataphysicalPortDataInfo socketSide(String socketSide) {
    
    this.socketSide = socketSide;
    return this;
  }

   /**
   * Get socketSide
   * @return socketSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSocketSide() {
    return socketSide;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSide(String socketSide) {
    this.socketSide = socketSide;
  }


  public PhysicalPortDataphysicalPortDataInfo socketNo(BigDecimal socketNo) {
    
    this.socketNo = socketNo;
    return this;
  }

   /**
   * Get socketNo
   * @return socketNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSocketNo() {
    return socketNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNo(BigDecimal socketNo) {
    this.socketNo = socketNo;
  }


  public PhysicalPortDataphysicalPortDataInfo deviceAll(DeviceAlldeviceAllInfo deviceAll) {
    
    this.deviceAll = deviceAll;
    return this;
  }

   /**
   * Get deviceAll
   * @return deviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeviceAlldeviceAllInfo getDeviceAll() {
    return deviceAll;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAll(DeviceAlldeviceAllInfo deviceAll) {
    this.deviceAll = deviceAll;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhysicalPortDataphysicalPortDataInfo physicalPortDataphysicalPortDataInfo = (PhysicalPortDataphysicalPortDataInfo) o;
    return Objects.equals(this.deviceAllElid, physicalPortDataphysicalPortDataInfo.deviceAllElid) &&
        Objects.equals(this.socketName, physicalPortDataphysicalPortDataInfo.socketName) &&
        Objects.equals(this.portIdentifier, physicalPortDataphysicalPortDataInfo.portIdentifier) &&
        Objects.equals(this.socketSide, physicalPortDataphysicalPortDataInfo.socketSide) &&
        Objects.equals(this.socketNo, physicalPortDataphysicalPortDataInfo.socketNo) &&
        Objects.equals(this.deviceAll, physicalPortDataphysicalPortDataInfo.deviceAll);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceAllElid, socketName, portIdentifier, socketSide, socketNo, deviceAll);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhysicalPortDataphysicalPortDataInfo {\n");
    sb.append("    deviceAllElid: ").append(toIndentedString(deviceAllElid)).append("\n");
    sb.append("    socketName: ").append(toIndentedString(socketName)).append("\n");
    sb.append("    portIdentifier: ").append(toIndentedString(portIdentifier)).append("\n");
    sb.append("    socketSide: ").append(toIndentedString(socketSide)).append("\n");
    sb.append("    socketNo: ").append(toIndentedString(socketNo)).append("\n");
    sb.append("    deviceAll: ").append(toIndentedString(deviceAll)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

