/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CabinetSuppliesPhysicalPortsDataEntityRestriction
 */
@JsonPropertyOrder({
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_SOCKET_NAME_SPC,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_BORDER_COLOR,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_WWN_ADDRESS,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_NOTES,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_PORT_STATE,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_SOCKET_NAME,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_WIRE_TYPE,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_MEDIUM,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_VLAN,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_SOCKET_SUB_NO,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_PORT_SPEED,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_STATUS_REMARK,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_VLAN_TYPE,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_DEVICE_ALL_ELID,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_PORT_IDENTIFIER,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_VLAN_ID,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_PORT_NETWORK_CATEGORY,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_SOCKET_NO,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_VTP_DOMAIN,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_CONNECTOR,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_PORT_DUPLEX,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_SOCKET_SIDE,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_DEVICE_ALL_ID,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_COAX_NET,
  CabinetSuppliesPhysicalPortsDataEntityRestriction.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class CabinetSuppliesPhysicalPortsDataEntityRestriction {
  public static final String JSON_PROPERTY_SOCKET_NAME_SPC = "socketNameSpc";
  private RestrictionsString socketNameSpc;

  public static final String JSON_PROPERTY_BORDER_COLOR = "borderColor";
  private RestrictionsString borderColor;

  public static final String JSON_PROPERTY_WWN_ADDRESS = "wwnAddress";
  private RestrictionsString wwnAddress;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private RestrictionsString notes;

  public static final String JSON_PROPERTY_PORT_STATE = "portState";
  private RestrictionsString portState;

  public static final String JSON_PROPERTY_SOCKET_NAME = "socketName";
  private RestrictionsString socketName;

  public static final String JSON_PROPERTY_WIRE_TYPE = "wireType";
  private RestrictionsString wireType;

  public static final String JSON_PROPERTY_MEDIUM = "medium";
  private RestrictionsString medium;

  public static final String JSON_PROPERTY_VLAN = "vlan";
  private RestrictionsString vlan;

  public static final String JSON_PROPERTY_SOCKET_SUB_NO = "socketSubNo";
  private RestrictionsNumeric socketSubNo;

  public static final String JSON_PROPERTY_PORT_SPEED = "portSpeed";
  private RestrictionsString portSpeed;

  public static final String JSON_PROPERTY_STATUS_REMARK = "statusRemark";
  private RestrictionsString statusRemark;

  public static final String JSON_PROPERTY_VLAN_TYPE = "vlanType";
  private RestrictionsString vlanType;

  public static final String JSON_PROPERTY_DEVICE_ALL_ELID = "deviceAllElid";
  private RestrictionsString deviceAllElid;

  public static final String JSON_PROPERTY_PORT_IDENTIFIER = "portIdentifier";
  private RestrictionsString portIdentifier;

  public static final String JSON_PROPERTY_VLAN_ID = "vlanId";
  private RestrictionsNumeric vlanId;

  public static final String JSON_PROPERTY_PORT_NETWORK_CATEGORY = "portNetworkCategory";
  private RestrictionsString portNetworkCategory;

  public static final String JSON_PROPERTY_SOCKET_NO = "socketNo";
  private RestrictionsNumeric socketNo;

  public static final String JSON_PROPERTY_VTP_DOMAIN = "vtpDomain";
  private RestrictionsString vtpDomain;

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private RestrictionsString connector;

  public static final String JSON_PROPERTY_PORT_DUPLEX = "portDuplex";
  private RestrictionsString portDuplex;

  public static final String JSON_PROPERTY_SOCKET_SIDE = "socketSide";
  private RestrictionsString socketSide;

  public static final String JSON_PROPERTY_DEVICE_ALL_ID = "deviceAllId";
  private RestrictionsString deviceAllId;

  public static final String JSON_PROPERTY_COAX_NET = "coaxNet";
  private RestrictionsString coaxNet;

  public static final String JSON_PROPERTY_STATUS = "status";
  private RestrictionsString status;

  public CabinetSuppliesPhysicalPortsDataEntityRestriction() {
  }

  public CabinetSuppliesPhysicalPortsDataEntityRestriction socketNameSpc(RestrictionsString socketNameSpc) {
    
    this.socketNameSpc = socketNameSpc;
    return this;
  }

   /**
   * Get socketNameSpc
   * @return socketNameSpc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NAME_SPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getSocketNameSpc() {
    return socketNameSpc;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NAME_SPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNameSpc(RestrictionsString socketNameSpc) {
    this.socketNameSpc = socketNameSpc;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction borderColor(RestrictionsString borderColor) {
    
    this.borderColor = borderColor;
    return this;
  }

   /**
   * Get borderColor
   * @return borderColor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BORDER_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getBorderColor() {
    return borderColor;
  }


  @JsonProperty(JSON_PROPERTY_BORDER_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBorderColor(RestrictionsString borderColor) {
    this.borderColor = borderColor;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction wwnAddress(RestrictionsString wwnAddress) {
    
    this.wwnAddress = wwnAddress;
    return this;
  }

   /**
   * Get wwnAddress
   * @return wwnAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WWN_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWwnAddress() {
    return wwnAddress;
  }


  @JsonProperty(JSON_PROPERTY_WWN_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWwnAddress(RestrictionsString wwnAddress) {
    this.wwnAddress = wwnAddress;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction notes(RestrictionsString notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(RestrictionsString notes) {
    this.notes = notes;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction portState(RestrictionsString portState) {
    
    this.portState = portState;
    return this;
  }

   /**
   * Get portState
   * @return portState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getPortState() {
    return portState;
  }


  @JsonProperty(JSON_PROPERTY_PORT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortState(RestrictionsString portState) {
    this.portState = portState;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction socketName(RestrictionsString socketName) {
    
    this.socketName = socketName;
    return this;
  }

   /**
   * Get socketName
   * @return socketName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getSocketName() {
    return socketName;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketName(RestrictionsString socketName) {
    this.socketName = socketName;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction wireType(RestrictionsString wireType) {
    
    this.wireType = wireType;
    return this;
  }

   /**
   * Get wireType
   * @return wireType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIRE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getWireType() {
    return wireType;
  }


  @JsonProperty(JSON_PROPERTY_WIRE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWireType(RestrictionsString wireType) {
    this.wireType = wireType;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction medium(RestrictionsString medium) {
    
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getMedium() {
    return medium;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedium(RestrictionsString medium) {
    this.medium = medium;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction vlan(RestrictionsString vlan) {
    
    this.vlan = vlan;
    return this;
  }

   /**
   * Get vlan
   * @return vlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getVlan() {
    return vlan;
  }


  @JsonProperty(JSON_PROPERTY_VLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlan(RestrictionsString vlan) {
    this.vlan = vlan;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction socketSubNo(RestrictionsNumeric socketSubNo) {
    
    this.socketSubNo = socketSubNo;
    return this;
  }

   /**
   * Get socketSubNo
   * @return socketSubNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getSocketSubNo() {
    return socketSubNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSubNo(RestrictionsNumeric socketSubNo) {
    this.socketSubNo = socketSubNo;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction portSpeed(RestrictionsString portSpeed) {
    
    this.portSpeed = portSpeed;
    return this;
  }

   /**
   * Get portSpeed
   * @return portSpeed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getPortSpeed() {
    return portSpeed;
  }


  @JsonProperty(JSON_PROPERTY_PORT_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortSpeed(RestrictionsString portSpeed) {
    this.portSpeed = portSpeed;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction statusRemark(RestrictionsString statusRemark) {
    
    this.statusRemark = statusRemark;
    return this;
  }

   /**
   * Get statusRemark
   * @return statusRemark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getStatusRemark() {
    return statusRemark;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusRemark(RestrictionsString statusRemark) {
    this.statusRemark = statusRemark;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction vlanType(RestrictionsString vlanType) {
    
    this.vlanType = vlanType;
    return this;
  }

   /**
   * Get vlanType
   * @return vlanType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getVlanType() {
    return vlanType;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanType(RestrictionsString vlanType) {
    this.vlanType = vlanType;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction deviceAllElid(RestrictionsString deviceAllElid) {
    
    this.deviceAllElid = deviceAllElid;
    return this;
  }

   /**
   * Get deviceAllElid
   * @return deviceAllElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getDeviceAllElid() {
    return deviceAllElid;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAllElid(RestrictionsString deviceAllElid) {
    this.deviceAllElid = deviceAllElid;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction portIdentifier(RestrictionsString portIdentifier) {
    
    this.portIdentifier = portIdentifier;
    return this;
  }

   /**
   * Get portIdentifier
   * @return portIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getPortIdentifier() {
    return portIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_PORT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortIdentifier(RestrictionsString portIdentifier) {
    this.portIdentifier = portIdentifier;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction vlanId(RestrictionsNumeric vlanId) {
    
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getVlanId() {
    return vlanId;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanId(RestrictionsNumeric vlanId) {
    this.vlanId = vlanId;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction portNetworkCategory(RestrictionsString portNetworkCategory) {
    
    this.portNetworkCategory = portNetworkCategory;
    return this;
  }

   /**
   * Get portNetworkCategory
   * @return portNetworkCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getPortNetworkCategory() {
    return portNetworkCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNetworkCategory(RestrictionsString portNetworkCategory) {
    this.portNetworkCategory = portNetworkCategory;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction socketNo(RestrictionsNumeric socketNo) {
    
    this.socketNo = socketNo;
    return this;
  }

   /**
   * Get socketNo
   * @return socketNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getSocketNo() {
    return socketNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNo(RestrictionsNumeric socketNo) {
    this.socketNo = socketNo;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction vtpDomain(RestrictionsString vtpDomain) {
    
    this.vtpDomain = vtpDomain;
    return this;
  }

   /**
   * Get vtpDomain
   * @return vtpDomain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VTP_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getVtpDomain() {
    return vtpDomain;
  }


  @JsonProperty(JSON_PROPERTY_VTP_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVtpDomain(RestrictionsString vtpDomain) {
    this.vtpDomain = vtpDomain;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction connector(RestrictionsString connector) {
    
    this.connector = connector;
    return this;
  }

   /**
   * Get connector
   * @return connector
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getConnector() {
    return connector;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnector(RestrictionsString connector) {
    this.connector = connector;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction portDuplex(RestrictionsString portDuplex) {
    
    this.portDuplex = portDuplex;
    return this;
  }

   /**
   * Get portDuplex
   * @return portDuplex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_DUPLEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getPortDuplex() {
    return portDuplex;
  }


  @JsonProperty(JSON_PROPERTY_PORT_DUPLEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortDuplex(RestrictionsString portDuplex) {
    this.portDuplex = portDuplex;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction socketSide(RestrictionsString socketSide) {
    
    this.socketSide = socketSide;
    return this;
  }

   /**
   * Get socketSide
   * @return socketSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getSocketSide() {
    return socketSide;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSide(RestrictionsString socketSide) {
    this.socketSide = socketSide;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction deviceAllId(RestrictionsString deviceAllId) {
    
    this.deviceAllId = deviceAllId;
    return this;
  }

   /**
   * Get deviceAllId
   * @return deviceAllId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getDeviceAllId() {
    return deviceAllId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ALL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceAllId(RestrictionsString deviceAllId) {
    this.deviceAllId = deviceAllId;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction coaxNet(RestrictionsString coaxNet) {
    
    this.coaxNet = coaxNet;
    return this;
  }

   /**
   * Get coaxNet
   * @return coaxNet
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COAX_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getCoaxNet() {
    return coaxNet;
  }


  @JsonProperty(JSON_PROPERTY_COAX_NET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoaxNet(RestrictionsString coaxNet) {
    this.coaxNet = coaxNet;
  }


  public CabinetSuppliesPhysicalPortsDataEntityRestriction status(RestrictionsString status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(RestrictionsString status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CabinetSuppliesPhysicalPortsDataEntityRestriction cabinetSuppliesPhysicalPortsDataEntityRestriction = (CabinetSuppliesPhysicalPortsDataEntityRestriction) o;
    return Objects.equals(this.socketNameSpc, cabinetSuppliesPhysicalPortsDataEntityRestriction.socketNameSpc) &&
        Objects.equals(this.borderColor, cabinetSuppliesPhysicalPortsDataEntityRestriction.borderColor) &&
        Objects.equals(this.wwnAddress, cabinetSuppliesPhysicalPortsDataEntityRestriction.wwnAddress) &&
        Objects.equals(this.notes, cabinetSuppliesPhysicalPortsDataEntityRestriction.notes) &&
        Objects.equals(this.portState, cabinetSuppliesPhysicalPortsDataEntityRestriction.portState) &&
        Objects.equals(this.socketName, cabinetSuppliesPhysicalPortsDataEntityRestriction.socketName) &&
        Objects.equals(this.wireType, cabinetSuppliesPhysicalPortsDataEntityRestriction.wireType) &&
        Objects.equals(this.medium, cabinetSuppliesPhysicalPortsDataEntityRestriction.medium) &&
        Objects.equals(this.vlan, cabinetSuppliesPhysicalPortsDataEntityRestriction.vlan) &&
        Objects.equals(this.socketSubNo, cabinetSuppliesPhysicalPortsDataEntityRestriction.socketSubNo) &&
        Objects.equals(this.portSpeed, cabinetSuppliesPhysicalPortsDataEntityRestriction.portSpeed) &&
        Objects.equals(this.statusRemark, cabinetSuppliesPhysicalPortsDataEntityRestriction.statusRemark) &&
        Objects.equals(this.vlanType, cabinetSuppliesPhysicalPortsDataEntityRestriction.vlanType) &&
        Objects.equals(this.deviceAllElid, cabinetSuppliesPhysicalPortsDataEntityRestriction.deviceAllElid) &&
        Objects.equals(this.portIdentifier, cabinetSuppliesPhysicalPortsDataEntityRestriction.portIdentifier) &&
        Objects.equals(this.vlanId, cabinetSuppliesPhysicalPortsDataEntityRestriction.vlanId) &&
        Objects.equals(this.portNetworkCategory, cabinetSuppliesPhysicalPortsDataEntityRestriction.portNetworkCategory) &&
        Objects.equals(this.socketNo, cabinetSuppliesPhysicalPortsDataEntityRestriction.socketNo) &&
        Objects.equals(this.vtpDomain, cabinetSuppliesPhysicalPortsDataEntityRestriction.vtpDomain) &&
        Objects.equals(this.connector, cabinetSuppliesPhysicalPortsDataEntityRestriction.connector) &&
        Objects.equals(this.portDuplex, cabinetSuppliesPhysicalPortsDataEntityRestriction.portDuplex) &&
        Objects.equals(this.socketSide, cabinetSuppliesPhysicalPortsDataEntityRestriction.socketSide) &&
        Objects.equals(this.deviceAllId, cabinetSuppliesPhysicalPortsDataEntityRestriction.deviceAllId) &&
        Objects.equals(this.coaxNet, cabinetSuppliesPhysicalPortsDataEntityRestriction.coaxNet) &&
        Objects.equals(this.status, cabinetSuppliesPhysicalPortsDataEntityRestriction.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(socketNameSpc, borderColor, wwnAddress, notes, portState, socketName, wireType, medium, vlan, socketSubNo, portSpeed, statusRemark, vlanType, deviceAllElid, portIdentifier, vlanId, portNetworkCategory, socketNo, vtpDomain, connector, portDuplex, socketSide, deviceAllId, coaxNet, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CabinetSuppliesPhysicalPortsDataEntityRestriction {\n");
    sb.append("    socketNameSpc: ").append(toIndentedString(socketNameSpc)).append("\n");
    sb.append("    borderColor: ").append(toIndentedString(borderColor)).append("\n");
    sb.append("    wwnAddress: ").append(toIndentedString(wwnAddress)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    portState: ").append(toIndentedString(portState)).append("\n");
    sb.append("    socketName: ").append(toIndentedString(socketName)).append("\n");
    sb.append("    wireType: ").append(toIndentedString(wireType)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    vlan: ").append(toIndentedString(vlan)).append("\n");
    sb.append("    socketSubNo: ").append(toIndentedString(socketSubNo)).append("\n");
    sb.append("    portSpeed: ").append(toIndentedString(portSpeed)).append("\n");
    sb.append("    statusRemark: ").append(toIndentedString(statusRemark)).append("\n");
    sb.append("    vlanType: ").append(toIndentedString(vlanType)).append("\n");
    sb.append("    deviceAllElid: ").append(toIndentedString(deviceAllElid)).append("\n");
    sb.append("    portIdentifier: ").append(toIndentedString(portIdentifier)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("    portNetworkCategory: ").append(toIndentedString(portNetworkCategory)).append("\n");
    sb.append("    socketNo: ").append(toIndentedString(socketNo)).append("\n");
    sb.append("    vtpDomain: ").append(toIndentedString(vtpDomain)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    portDuplex: ").append(toIndentedString(portDuplex)).append("\n");
    sb.append("    socketSide: ").append(toIndentedString(socketSide)).append("\n");
    sb.append("    deviceAllId: ").append(toIndentedString(deviceAllId)).append("\n");
    sb.append("    coaxNet: ").append(toIndentedString(coaxNet)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

