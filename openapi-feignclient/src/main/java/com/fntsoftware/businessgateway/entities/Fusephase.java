/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.FusetypePowerGridInputPhase;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Fusephase
 */
@JsonPropertyOrder({
  Fusephase.JSON_PROPERTY_PHASE,
  Fusephase.JSON_PROPERTY_NOMINAL_CAPACITY_THRESHOLD,
  Fusephase.JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY,
  Fusephase.JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY,
  Fusephase.JSON_PROPERTY_NOMINAL_CAPACITY,
  Fusephase.JSON_PROPERTY_SUPPLY,
  Fusephase.JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY_PLAN,
  Fusephase.JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY_PLAN
})
@JsonTypeName("fusephase")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class Fusephase {
  public static final String JSON_PROPERTY_PHASE = "phase";
  private String phase;

  public static final String JSON_PROPERTY_NOMINAL_CAPACITY_THRESHOLD = "nominalCapacityThreshold";
  private BigDecimal nominalCapacityThreshold;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY = "powerConsumptionSecondary";
  private BigDecimal powerConsumptionSecondary;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY = "powerConsumptionPrimary";
  private BigDecimal powerConsumptionPrimary;

  public static final String JSON_PROPERTY_NOMINAL_CAPACITY = "nominalCapacity";
  private BigDecimal nominalCapacity;

  public static final String JSON_PROPERTY_SUPPLY = "supply";
  private FusetypePowerGridInputPhase supply;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY_PLAN = "powerConsumptionPrimaryPlan";
  private BigDecimal powerConsumptionPrimaryPlan;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY_PLAN = "powerConsumptionSecondaryPlan";
  private BigDecimal powerConsumptionSecondaryPlan;

  public Fusephase() {
  }

  public Fusephase phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhase() {
    return phase;
  }


  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhase(String phase) {
    this.phase = phase;
  }


  public Fusephase nominalCapacityThreshold(BigDecimal nominalCapacityThreshold) {
    
    this.nominalCapacityThreshold = nominalCapacityThreshold;
    return this;
  }

   /**
   * Get nominalCapacityThreshold
   * @return nominalCapacityThreshold
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CAPACITY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCapacityThreshold() {
    return nominalCapacityThreshold;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CAPACITY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCapacityThreshold(BigDecimal nominalCapacityThreshold) {
    this.nominalCapacityThreshold = nominalCapacityThreshold;
  }


  public Fusephase powerConsumptionSecondary(BigDecimal powerConsumptionSecondary) {
    
    this.powerConsumptionSecondary = powerConsumptionSecondary;
    return this;
  }

   /**
   * Get powerConsumptionSecondary
   * @return powerConsumptionSecondary
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionSecondary() {
    return powerConsumptionSecondary;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionSecondary(BigDecimal powerConsumptionSecondary) {
    this.powerConsumptionSecondary = powerConsumptionSecondary;
  }


  public Fusephase powerConsumptionPrimary(BigDecimal powerConsumptionPrimary) {
    
    this.powerConsumptionPrimary = powerConsumptionPrimary;
    return this;
  }

   /**
   * Get powerConsumptionPrimary
   * @return powerConsumptionPrimary
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionPrimary() {
    return powerConsumptionPrimary;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionPrimary(BigDecimal powerConsumptionPrimary) {
    this.powerConsumptionPrimary = powerConsumptionPrimary;
  }


  public Fusephase nominalCapacity(BigDecimal nominalCapacity) {
    
    this.nominalCapacity = nominalCapacity;
    return this;
  }

   /**
   * Get nominalCapacity
   * @return nominalCapacity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCapacity() {
    return nominalCapacity;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCapacity(BigDecimal nominalCapacity) {
    this.nominalCapacity = nominalCapacity;
  }


  public Fusephase supply(FusetypePowerGridInputPhase supply) {
    
    this.supply = supply;
    return this;
  }

   /**
   * Get supply
   * @return supply
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FusetypePowerGridInputPhase getSupply() {
    return supply;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupply(FusetypePowerGridInputPhase supply) {
    this.supply = supply;
  }


  public Fusephase powerConsumptionPrimaryPlan(BigDecimal powerConsumptionPrimaryPlan) {
    
    this.powerConsumptionPrimaryPlan = powerConsumptionPrimaryPlan;
    return this;
  }

   /**
   * Get powerConsumptionPrimaryPlan
   * @return powerConsumptionPrimaryPlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionPrimaryPlan() {
    return powerConsumptionPrimaryPlan;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_PRIMARY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionPrimaryPlan(BigDecimal powerConsumptionPrimaryPlan) {
    this.powerConsumptionPrimaryPlan = powerConsumptionPrimaryPlan;
  }


  public Fusephase powerConsumptionSecondaryPlan(BigDecimal powerConsumptionSecondaryPlan) {
    
    this.powerConsumptionSecondaryPlan = powerConsumptionSecondaryPlan;
    return this;
  }

   /**
   * Get powerConsumptionSecondaryPlan
   * @return powerConsumptionSecondaryPlan
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionSecondaryPlan() {
    return powerConsumptionSecondaryPlan;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_SECONDARY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionSecondaryPlan(BigDecimal powerConsumptionSecondaryPlan) {
    this.powerConsumptionSecondaryPlan = powerConsumptionSecondaryPlan;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fusephase fusephase = (Fusephase) o;
    return Objects.equals(this.phase, fusephase.phase) &&
        Objects.equals(this.nominalCapacityThreshold, fusephase.nominalCapacityThreshold) &&
        Objects.equals(this.powerConsumptionSecondary, fusephase.powerConsumptionSecondary) &&
        Objects.equals(this.powerConsumptionPrimary, fusephase.powerConsumptionPrimary) &&
        Objects.equals(this.nominalCapacity, fusephase.nominalCapacity) &&
        Objects.equals(this.supply, fusephase.supply) &&
        Objects.equals(this.powerConsumptionPrimaryPlan, fusephase.powerConsumptionPrimaryPlan) &&
        Objects.equals(this.powerConsumptionSecondaryPlan, fusephase.powerConsumptionSecondaryPlan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phase, nominalCapacityThreshold, powerConsumptionSecondary, powerConsumptionPrimary, nominalCapacity, supply, powerConsumptionPrimaryPlan, powerConsumptionSecondaryPlan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fusephase {\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    nominalCapacityThreshold: ").append(toIndentedString(nominalCapacityThreshold)).append("\n");
    sb.append("    powerConsumptionSecondary: ").append(toIndentedString(powerConsumptionSecondary)).append("\n");
    sb.append("    powerConsumptionPrimary: ").append(toIndentedString(powerConsumptionPrimary)).append("\n");
    sb.append("    nominalCapacity: ").append(toIndentedString(nominalCapacity)).append("\n");
    sb.append("    supply: ").append(toIndentedString(supply)).append("\n");
    sb.append("    powerConsumptionPrimaryPlan: ").append(toIndentedString(powerConsumptionPrimaryPlan)).append("\n");
    sb.append("    powerConsumptionSecondaryPlan: ").append(toIndentedString(powerConsumptionSecondaryPlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

