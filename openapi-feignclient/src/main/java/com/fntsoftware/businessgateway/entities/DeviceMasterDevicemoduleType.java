/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceMasterDevicemoduleType
 */
@JsonPropertyOrder({
  DeviceMasterDevicemoduleType.JSON_PROPERTY_OVERLAP,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_WIDTH,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_EXPLANATION,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_TYPE,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_ELID,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_DIRECTION,
  DeviceMasterDevicemoduleType.JSON_PROPERTY_HEIGHT
})
@JsonTypeName("deviceMasterDevicemoduleType")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class DeviceMasterDevicemoduleType {
  public static final String JSON_PROPERTY_OVERLAP = "overlap";
  private String overlap;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private BigDecimal width;

  public static final String JSON_PROPERTY_EXPLANATION = "explanation";
  private String explanation;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private BigDecimal direction;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private BigDecimal height;

  public DeviceMasterDevicemoduleType() {
  }

  public DeviceMasterDevicemoduleType overlap(String overlap) {
    
    this.overlap = overlap;
    return this;
  }

   /**
   * Get overlap
   * @return overlap
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverlap() {
    return overlap;
  }


  @JsonProperty(JSON_PROPERTY_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverlap(String overlap) {
    this.overlap = overlap;
  }


  public DeviceMasterDevicemoduleType width(BigDecimal width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(BigDecimal width) {
    this.width = width;
  }


  public DeviceMasterDevicemoduleType explanation(String explanation) {
    
    this.explanation = explanation;
    return this;
  }

   /**
   * Get explanation
   * @return explanation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExplanation() {
    return explanation;
  }


  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplanation(String explanation) {
    this.explanation = explanation;
  }


  public DeviceMasterDevicemoduleType type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public DeviceMasterDevicemoduleType elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public DeviceMasterDevicemoduleType direction(BigDecimal direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(BigDecimal direction) {
    this.direction = direction;
  }


  public DeviceMasterDevicemoduleType height(BigDecimal height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMasterDevicemoduleType deviceMasterDevicemoduleType = (DeviceMasterDevicemoduleType) o;
    return Objects.equals(this.overlap, deviceMasterDevicemoduleType.overlap) &&
        Objects.equals(this.width, deviceMasterDevicemoduleType.width) &&
        Objects.equals(this.explanation, deviceMasterDevicemoduleType.explanation) &&
        Objects.equals(this.type, deviceMasterDevicemoduleType.type) &&
        Objects.equals(this.elid, deviceMasterDevicemoduleType.elid) &&
        Objects.equals(this.direction, deviceMasterDevicemoduleType.direction) &&
        Objects.equals(this.height, deviceMasterDevicemoduleType.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overlap, width, explanation, type, elid, direction, height);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMasterDevicemoduleType {\n");
    sb.append("    overlap: ").append(toIndentedString(overlap)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    explanation: ").append(toIndentedString(explanation)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

