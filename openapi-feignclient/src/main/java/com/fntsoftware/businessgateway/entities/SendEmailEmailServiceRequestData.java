/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SendEmailEmailServiceRequestData
 */
@JsonPropertyOrder({
  SendEmailEmailServiceRequestData.JSON_PROPERTY_CC,
  SendEmailEmailServiceRequestData.JSON_PROPERTY_SUBJECT,
  SendEmailEmailServiceRequestData.JSON_PROPERTY_MAIL_TEXT,
  SendEmailEmailServiceRequestData.JSON_PROPERTY_FROM,
  SendEmailEmailServiceRequestData.JSON_PROPERTY_TO,
  SendEmailEmailServiceRequestData.JSON_PROPERTY_CONTENT_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class SendEmailEmailServiceRequestData {
  public static final String JSON_PROPERTY_CC = "cc";
  private String cc;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_MAIL_TEXT = "mailText";
  private String mailText;

  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  public static final String JSON_PROPERTY_TO = "to";
  private String to;

  public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
  private String contentType;

  public SendEmailEmailServiceRequestData() {
  }

  public SendEmailEmailServiceRequestData cc(String cc) {
    
    this.cc = cc;
    return this;
  }

   /**
   * Get cc
   * @return cc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCc() {
    return cc;
  }


  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCc(String cc) {
    this.cc = cc;
  }


  public SendEmailEmailServiceRequestData subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public SendEmailEmailServiceRequestData mailText(String mailText) {
    
    this.mailText = mailText;
    return this;
  }

   /**
   * Get mailText
   * @return mailText
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIL_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMailText() {
    return mailText;
  }


  @JsonProperty(JSON_PROPERTY_MAIL_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailText(String mailText) {
    this.mailText = mailText;
  }


  public SendEmailEmailServiceRequestData from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrom(String from) {
    this.from = from;
  }


  public SendEmailEmailServiceRequestData to(String to) {
    
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTo(String to) {
    this.to = to;
  }


  public SendEmailEmailServiceRequestData contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendEmailEmailServiceRequestData sendEmailEmailServiceRequestData = (SendEmailEmailServiceRequestData) o;
    return Objects.equals(this.cc, sendEmailEmailServiceRequestData.cc) &&
        Objects.equals(this.subject, sendEmailEmailServiceRequestData.subject) &&
        Objects.equals(this.mailText, sendEmailEmailServiceRequestData.mailText) &&
        Objects.equals(this.from, sendEmailEmailServiceRequestData.from) &&
        Objects.equals(this.to, sendEmailEmailServiceRequestData.to) &&
        Objects.equals(this.contentType, sendEmailEmailServiceRequestData.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cc, subject, mailText, from, to, contentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendEmailEmailServiceRequestData {\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    mailText: ").append(toIndentedString(mailText)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

