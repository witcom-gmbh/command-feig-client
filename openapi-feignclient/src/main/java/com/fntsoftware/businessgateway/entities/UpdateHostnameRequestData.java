/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkAliasRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkIpv4AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkIpv6AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkAliasRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkIpv4AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkIpv6AddressRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameSwapLinkDomainRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateHostnameUpdateLinkPersonRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateHostnameRequestData
 */
@JsonPropertyOrder({
  UpdateHostnameRequestData.JSON_PROPERTY_HOSTNAME,
  UpdateHostnameRequestData.JSON_PROPERTY_SUBDOMAIN,
  UpdateHostnameRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateHostnameRequestData.JSON_PROPERTY_REMARK,
  UpdateHostnameRequestData.JSON_PROPERTY_REMOTE,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_ALIAS,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_IPV6_ADDRESS,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateHostnameRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_ALIAS,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_IPV6_ADDRESS,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateHostnameRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateHostnameRequestData.JSON_PROPERTY_SWAP_LINK_DOMAIN,
  UpdateHostnameRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateHostnameRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateHostnameRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class UpdateHostnameRequestData {
  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_SUBDOMAIN = "subdomain";
  private String subdomain;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_REMOTE = "remote";
  private Boolean remote;

  public static final String JSON_PROPERTY_CREATE_LINK_ALIAS = "createLinkAlias";
  private List<UpdateHostnameCreateLinkAliasRequestData> createLinkAlias;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateHostnameCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateHostnameCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS = "createLinkIpv4Address";
  private List<UpdateHostnameCreateLinkIpv4AddressRequestData> createLinkIpv4Address;

  public static final String JSON_PROPERTY_CREATE_LINK_IPV6_ADDRESS = "createLinkIpv6Address";
  private List<UpdateHostnameCreateLinkIpv6AddressRequestData> createLinkIpv6Address;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateHostnameCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateHostnameCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateHostnameCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateHostnameCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_ALIAS = "deleteLinkAlias";
  private List<UpdateHostnameDeleteLinkAliasRequestData> deleteLinkAlias;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateHostnameDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateHostnameDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS = "deleteLinkIpv4Address";
  private List<UpdateHostnameDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address;

  public static final String JSON_PROPERTY_DELETE_LINK_IPV6_ADDRESS = "deleteLinkIpv6Address";
  private List<UpdateHostnameDeleteLinkIpv6AddressRequestData> deleteLinkIpv6Address;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateHostnameDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateHostnameDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateHostnameDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateHostnameDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_SWAP_LINK_DOMAIN = "swapLinkDomain";
  private UpdateHostnameSwapLinkDomainRequestData swapLinkDomain;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateHostnameUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateHostnameUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateHostnameUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateHostnameRequestData() {
  }

  public UpdateHostnameRequestData hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public UpdateHostnameRequestData subdomain(String subdomain) {
    
    this.subdomain = subdomain;
    return this;
  }

   /**
   * Get subdomain
   * @return subdomain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBDOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubdomain() {
    return subdomain;
  }


  @JsonProperty(JSON_PROPERTY_SUBDOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubdomain(String subdomain) {
    this.subdomain = subdomain;
  }


  public UpdateHostnameRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateHostnameRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public UpdateHostnameRequestData remote(Boolean remote) {
    
    this.remote = remote;
    return this;
  }

   /**
   * Get remote
   * @return remote
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRemote() {
    return remote;
  }


  @JsonProperty(JSON_PROPERTY_REMOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemote(Boolean remote) {
    this.remote = remote;
  }


  public UpdateHostnameRequestData createLinkAlias(List<UpdateHostnameCreateLinkAliasRequestData> createLinkAlias) {
    
    this.createLinkAlias = createLinkAlias;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkAliasItem(UpdateHostnameCreateLinkAliasRequestData createLinkAliasItem) {
    if (this.createLinkAlias == null) {
      this.createLinkAlias = new ArrayList<>();
    }
    this.createLinkAlias.add(createLinkAliasItem);
    return this;
  }

   /**
   * Get createLinkAlias
   * @return createLinkAlias
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkAliasRequestData> getCreateLinkAlias() {
    return createLinkAlias;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkAlias(List<UpdateHostnameCreateLinkAliasRequestData> createLinkAlias) {
    this.createLinkAlias = createLinkAlias;
  }


  public UpdateHostnameRequestData createLinkContract(List<UpdateHostnameCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkContractItem(UpdateHostnameCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateHostnameCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateHostnameRequestData createLinkFrameContract(List<UpdateHostnameCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkFrameContractItem(UpdateHostnameCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateHostnameCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateHostnameRequestData createLinkIpv4Address(List<UpdateHostnameCreateLinkIpv4AddressRequestData> createLinkIpv4Address) {
    
    this.createLinkIpv4Address = createLinkIpv4Address;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkIpv4AddressItem(UpdateHostnameCreateLinkIpv4AddressRequestData createLinkIpv4AddressItem) {
    if (this.createLinkIpv4Address == null) {
      this.createLinkIpv4Address = new ArrayList<>();
    }
    this.createLinkIpv4Address.add(createLinkIpv4AddressItem);
    return this;
  }

   /**
   * Get createLinkIpv4Address
   * @return createLinkIpv4Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkIpv4AddressRequestData> getCreateLinkIpv4Address() {
    return createLinkIpv4Address;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv4Address(List<UpdateHostnameCreateLinkIpv4AddressRequestData> createLinkIpv4Address) {
    this.createLinkIpv4Address = createLinkIpv4Address;
  }


  public UpdateHostnameRequestData createLinkIpv6Address(List<UpdateHostnameCreateLinkIpv6AddressRequestData> createLinkIpv6Address) {
    
    this.createLinkIpv6Address = createLinkIpv6Address;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkIpv6AddressItem(UpdateHostnameCreateLinkIpv6AddressRequestData createLinkIpv6AddressItem) {
    if (this.createLinkIpv6Address == null) {
      this.createLinkIpv6Address = new ArrayList<>();
    }
    this.createLinkIpv6Address.add(createLinkIpv6AddressItem);
    return this;
  }

   /**
   * Get createLinkIpv6Address
   * @return createLinkIpv6Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkIpv6AddressRequestData> getCreateLinkIpv6Address() {
    return createLinkIpv6Address;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_IPV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkIpv6Address(List<UpdateHostnameCreateLinkIpv6AddressRequestData> createLinkIpv6Address) {
    this.createLinkIpv6Address = createLinkIpv6Address;
  }


  public UpdateHostnameRequestData createLinkMaintenanceContract(List<UpdateHostnameCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkMaintenanceContractItem(UpdateHostnameCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateHostnameCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateHostnameRequestData createLinkOrganization(List<UpdateHostnameCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkOrganizationItem(UpdateHostnameCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateHostnameCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateHostnameRequestData createLinkPerson(List<UpdateHostnameCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkPersonItem(UpdateHostnameCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateHostnameCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateHostnameRequestData createLinkPersonGroup(List<UpdateHostnameCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateHostnameRequestData addCreateLinkPersonGroupItem(UpdateHostnameCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateHostnameCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateHostnameRequestData deleteLinkAlias(List<UpdateHostnameDeleteLinkAliasRequestData> deleteLinkAlias) {
    
    this.deleteLinkAlias = deleteLinkAlias;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkAliasItem(UpdateHostnameDeleteLinkAliasRequestData deleteLinkAliasItem) {
    if (this.deleteLinkAlias == null) {
      this.deleteLinkAlias = new ArrayList<>();
    }
    this.deleteLinkAlias.add(deleteLinkAliasItem);
    return this;
  }

   /**
   * Get deleteLinkAlias
   * @return deleteLinkAlias
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkAliasRequestData> getDeleteLinkAlias() {
    return deleteLinkAlias;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkAlias(List<UpdateHostnameDeleteLinkAliasRequestData> deleteLinkAlias) {
    this.deleteLinkAlias = deleteLinkAlias;
  }


  public UpdateHostnameRequestData deleteLinkContract(List<UpdateHostnameDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkContractItem(UpdateHostnameDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateHostnameDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateHostnameRequestData deleteLinkFrameContract(List<UpdateHostnameDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkFrameContractItem(UpdateHostnameDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateHostnameDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateHostnameRequestData deleteLinkIpv4Address(List<UpdateHostnameDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address) {
    
    this.deleteLinkIpv4Address = deleteLinkIpv4Address;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkIpv4AddressItem(UpdateHostnameDeleteLinkIpv4AddressRequestData deleteLinkIpv4AddressItem) {
    if (this.deleteLinkIpv4Address == null) {
      this.deleteLinkIpv4Address = new ArrayList<>();
    }
    this.deleteLinkIpv4Address.add(deleteLinkIpv4AddressItem);
    return this;
  }

   /**
   * Get deleteLinkIpv4Address
   * @return deleteLinkIpv4Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkIpv4AddressRequestData> getDeleteLinkIpv4Address() {
    return deleteLinkIpv4Address;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV4_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkIpv4Address(List<UpdateHostnameDeleteLinkIpv4AddressRequestData> deleteLinkIpv4Address) {
    this.deleteLinkIpv4Address = deleteLinkIpv4Address;
  }


  public UpdateHostnameRequestData deleteLinkIpv6Address(List<UpdateHostnameDeleteLinkIpv6AddressRequestData> deleteLinkIpv6Address) {
    
    this.deleteLinkIpv6Address = deleteLinkIpv6Address;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkIpv6AddressItem(UpdateHostnameDeleteLinkIpv6AddressRequestData deleteLinkIpv6AddressItem) {
    if (this.deleteLinkIpv6Address == null) {
      this.deleteLinkIpv6Address = new ArrayList<>();
    }
    this.deleteLinkIpv6Address.add(deleteLinkIpv6AddressItem);
    return this;
  }

   /**
   * Get deleteLinkIpv6Address
   * @return deleteLinkIpv6Address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkIpv6AddressRequestData> getDeleteLinkIpv6Address() {
    return deleteLinkIpv6Address;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_IPV6_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkIpv6Address(List<UpdateHostnameDeleteLinkIpv6AddressRequestData> deleteLinkIpv6Address) {
    this.deleteLinkIpv6Address = deleteLinkIpv6Address;
  }


  public UpdateHostnameRequestData deleteLinkMaintenanceContract(List<UpdateHostnameDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkMaintenanceContractItem(UpdateHostnameDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateHostnameDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateHostnameRequestData deleteLinkOrganization(List<UpdateHostnameDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkOrganizationItem(UpdateHostnameDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateHostnameDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateHostnameRequestData deleteLinkPerson(List<UpdateHostnameDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkPersonItem(UpdateHostnameDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateHostnameDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateHostnameRequestData deleteLinkPersonGroup(List<UpdateHostnameDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateHostnameRequestData addDeleteLinkPersonGroupItem(UpdateHostnameDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateHostnameDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateHostnameRequestData swapLinkDomain(UpdateHostnameSwapLinkDomainRequestData swapLinkDomain) {
    
    this.swapLinkDomain = swapLinkDomain;
    return this;
  }

   /**
   * Get swapLinkDomain
   * @return swapLinkDomain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWAP_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateHostnameSwapLinkDomainRequestData getSwapLinkDomain() {
    return swapLinkDomain;
  }


  @JsonProperty(JSON_PROPERTY_SWAP_LINK_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwapLinkDomain(UpdateHostnameSwapLinkDomainRequestData swapLinkDomain) {
    this.swapLinkDomain = swapLinkDomain;
  }


  public UpdateHostnameRequestData updateLinkOrganization(List<UpdateHostnameUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateHostnameRequestData addUpdateLinkOrganizationItem(UpdateHostnameUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateHostnameUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateHostnameRequestData updateLinkPerson(List<UpdateHostnameUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateHostnameRequestData addUpdateLinkPersonItem(UpdateHostnameUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateHostnameUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateHostnameRequestData updateLinkPersonGroup(List<UpdateHostnameUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateHostnameRequestData addUpdateLinkPersonGroupItem(UpdateHostnameUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateHostnameUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateHostnameUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateHostnameRequestData updateHostnameRequestData = (UpdateHostnameRequestData) o;
    return Objects.equals(this.hostname, updateHostnameRequestData.hostname) &&
        Objects.equals(this.subdomain, updateHostnameRequestData.subdomain) &&
        Objects.equals(this.contextId, updateHostnameRequestData.contextId) &&
        Objects.equals(this.remark, updateHostnameRequestData.remark) &&
        Objects.equals(this.remote, updateHostnameRequestData.remote) &&
        Objects.equals(this.createLinkAlias, updateHostnameRequestData.createLinkAlias) &&
        Objects.equals(this.createLinkContract, updateHostnameRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateHostnameRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkIpv4Address, updateHostnameRequestData.createLinkIpv4Address) &&
        Objects.equals(this.createLinkIpv6Address, updateHostnameRequestData.createLinkIpv6Address) &&
        Objects.equals(this.createLinkMaintenanceContract, updateHostnameRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateHostnameRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateHostnameRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateHostnameRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkAlias, updateHostnameRequestData.deleteLinkAlias) &&
        Objects.equals(this.deleteLinkContract, updateHostnameRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateHostnameRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkIpv4Address, updateHostnameRequestData.deleteLinkIpv4Address) &&
        Objects.equals(this.deleteLinkIpv6Address, updateHostnameRequestData.deleteLinkIpv6Address) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateHostnameRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateHostnameRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateHostnameRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateHostnameRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.swapLinkDomain, updateHostnameRequestData.swapLinkDomain) &&
        Objects.equals(this.updateLinkOrganization, updateHostnameRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateHostnameRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateHostnameRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostname, subdomain, contextId, remark, remote, createLinkAlias, createLinkContract, createLinkFrameContract, createLinkIpv4Address, createLinkIpv6Address, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkAlias, deleteLinkContract, deleteLinkFrameContract, deleteLinkIpv4Address, deleteLinkIpv6Address, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, swapLinkDomain, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateHostnameRequestData {\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    subdomain: ").append(toIndentedString(subdomain)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    remote: ").append(toIndentedString(remote)).append("\n");
    sb.append("    createLinkAlias: ").append(toIndentedString(createLinkAlias)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkIpv4Address: ").append(toIndentedString(createLinkIpv4Address)).append("\n");
    sb.append("    createLinkIpv6Address: ").append(toIndentedString(createLinkIpv6Address)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkAlias: ").append(toIndentedString(deleteLinkAlias)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkIpv4Address: ").append(toIndentedString(deleteLinkIpv4Address)).append("\n");
    sb.append("    deleteLinkIpv6Address: ").append(toIndentedString(deleteLinkIpv6Address)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    swapLinkDomain: ").append(toIndentedString(swapLinkDomain)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

