/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ipv4NetrangeQueryResponseData
 */
@JsonPropertyOrder({
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_END_IP,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_NET_CLIENT,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_DOMAIN_ELID,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_NETRANGE_NAME_ELID,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_START_IP,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_BLOCKED,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_REMARK,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_ELID,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_NETWORK_ELID,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_DHCP,
  Ipv4NetrangeQueryResponseData.JSON_PROPERTY_NET_CLIENT_ELID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class Ipv4NetrangeQueryResponseData {
  public static final String JSON_PROPERTY_END_IP = "endIp";
  private String endIp;

  public static final String JSON_PROPERTY_NET_CLIENT = "netClient";
  private String netClient;

  public static final String JSON_PROPERTY_DOMAIN_ELID = "domainElid";
  private String domainElid;

  public static final String JSON_PROPERTY_NETRANGE_NAME_ELID = "netrangeNameElid";
  private String netrangeNameElid;

  public static final String JSON_PROPERTY_START_IP = "startIp";
  private String startIp;

  public static final String JSON_PROPERTY_BLOCKED = "blocked";
  private Boolean blocked;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_NETWORK_ELID = "networkElid";
  private String networkElid;

  public static final String JSON_PROPERTY_DHCP = "dhcp";
  private Boolean dhcp;

  public static final String JSON_PROPERTY_NET_CLIENT_ELID = "netClientElid";
  private String netClientElid;

  public Ipv4NetrangeQueryResponseData() {
  }

  public Ipv4NetrangeQueryResponseData endIp(String endIp) {
    
    this.endIp = endIp;
    return this;
  }

   /**
   * Get endIp
   * @return endIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndIp() {
    return endIp;
  }


  @JsonProperty(JSON_PROPERTY_END_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndIp(String endIp) {
    this.endIp = endIp;
  }


  public Ipv4NetrangeQueryResponseData netClient(String netClient) {
    
    this.netClient = netClient;
    return this;
  }

   /**
   * Get netClient
   * @return netClient
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetClient() {
    return netClient;
  }


  @JsonProperty(JSON_PROPERTY_NET_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetClient(String netClient) {
    this.netClient = netClient;
  }


  public Ipv4NetrangeQueryResponseData domainElid(String domainElid) {
    
    this.domainElid = domainElid;
    return this;
  }

   /**
   * Get domainElid
   * @return domainElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainElid() {
    return domainElid;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainElid(String domainElid) {
    this.domainElid = domainElid;
  }


  public Ipv4NetrangeQueryResponseData netrangeNameElid(String netrangeNameElid) {
    
    this.netrangeNameElid = netrangeNameElid;
    return this;
  }

   /**
   * Get netrangeNameElid
   * @return netrangeNameElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETRANGE_NAME_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetrangeNameElid() {
    return netrangeNameElid;
  }


  @JsonProperty(JSON_PROPERTY_NETRANGE_NAME_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetrangeNameElid(String netrangeNameElid) {
    this.netrangeNameElid = netrangeNameElid;
  }


  public Ipv4NetrangeQueryResponseData startIp(String startIp) {
    
    this.startIp = startIp;
    return this;
  }

   /**
   * Get startIp
   * @return startIp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartIp() {
    return startIp;
  }


  @JsonProperty(JSON_PROPERTY_START_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartIp(String startIp) {
    this.startIp = startIp;
  }


  public Ipv4NetrangeQueryResponseData blocked(Boolean blocked) {
    
    this.blocked = blocked;
    return this;
  }

   /**
   * Get blocked
   * @return blocked
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBlocked() {
    return blocked;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlocked(Boolean blocked) {
    this.blocked = blocked;
  }


  public Ipv4NetrangeQueryResponseData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public Ipv4NetrangeQueryResponseData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public Ipv4NetrangeQueryResponseData networkElid(String networkElid) {
    
    this.networkElid = networkElid;
    return this;
  }

   /**
   * Get networkElid
   * @return networkElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkElid() {
    return networkElid;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkElid(String networkElid) {
    this.networkElid = networkElid;
  }


  public Ipv4NetrangeQueryResponseData dhcp(Boolean dhcp) {
    
    this.dhcp = dhcp;
    return this;
  }

   /**
   * Get dhcp
   * @return dhcp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDhcp() {
    return dhcp;
  }


  @JsonProperty(JSON_PROPERTY_DHCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDhcp(Boolean dhcp) {
    this.dhcp = dhcp;
  }


  public Ipv4NetrangeQueryResponseData netClientElid(String netClientElid) {
    
    this.netClientElid = netClientElid;
    return this;
  }

   /**
   * Get netClientElid
   * @return netClientElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_CLIENT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetClientElid() {
    return netClientElid;
  }


  @JsonProperty(JSON_PROPERTY_NET_CLIENT_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetClientElid(String netClientElid) {
    this.netClientElid = netClientElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ipv4NetrangeQueryResponseData ipv4NetrangeQueryResponseData = (Ipv4NetrangeQueryResponseData) o;
    return Objects.equals(this.endIp, ipv4NetrangeQueryResponseData.endIp) &&
        Objects.equals(this.netClient, ipv4NetrangeQueryResponseData.netClient) &&
        Objects.equals(this.domainElid, ipv4NetrangeQueryResponseData.domainElid) &&
        Objects.equals(this.netrangeNameElid, ipv4NetrangeQueryResponseData.netrangeNameElid) &&
        Objects.equals(this.startIp, ipv4NetrangeQueryResponseData.startIp) &&
        Objects.equals(this.blocked, ipv4NetrangeQueryResponseData.blocked) &&
        Objects.equals(this.remark, ipv4NetrangeQueryResponseData.remark) &&
        Objects.equals(this.elid, ipv4NetrangeQueryResponseData.elid) &&
        Objects.equals(this.networkElid, ipv4NetrangeQueryResponseData.networkElid) &&
        Objects.equals(this.dhcp, ipv4NetrangeQueryResponseData.dhcp) &&
        Objects.equals(this.netClientElid, ipv4NetrangeQueryResponseData.netClientElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endIp, netClient, domainElid, netrangeNameElid, startIp, blocked, remark, elid, networkElid, dhcp, netClientElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ipv4NetrangeQueryResponseData {\n");
    sb.append("    endIp: ").append(toIndentedString(endIp)).append("\n");
    sb.append("    netClient: ").append(toIndentedString(netClient)).append("\n");
    sb.append("    domainElid: ").append(toIndentedString(domainElid)).append("\n");
    sb.append("    netrangeNameElid: ").append(toIndentedString(netrangeNameElid)).append("\n");
    sb.append("    startIp: ").append(toIndentedString(startIp)).append("\n");
    sb.append("    blocked: ").append(toIndentedString(blocked)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    networkElid: ").append(toIndentedString(networkElid)).append("\n");
    sb.append("    dhcp: ").append(toIndentedString(dhcp)).append("\n");
    sb.append("    netClientElid: ").append(toIndentedString(netClientElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

