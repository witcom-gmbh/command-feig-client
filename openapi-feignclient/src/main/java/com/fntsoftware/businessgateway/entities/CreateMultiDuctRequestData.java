/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkFromDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkFromNodeRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkMultiDuctRouteRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkMultiDuctTypeRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkToDeviceAllRequestData;
import com.fntsoftware.businessgateway.entities.CreateMultiDuctCreateLinkToNodeRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateMultiDuctRequestData
 */
@JsonPropertyOrder({
  CreateMultiDuctRequestData.JSON_PROPERTY_SOURCE_ID,
  CreateMultiDuctRequestData.JSON_PROPERTY_OWNER_SYSTEM,
  CreateMultiDuctRequestData.JSON_PROPERTY_COLOR,
  CreateMultiDuctRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  CreateMultiDuctRequestData.JSON_PROPERTY_DESCRIPTION,
  CreateMultiDuctRequestData.JSON_PROPERTY_CONTEXT_ID,
  CreateMultiDuctRequestData.JSON_PROPERTY_VISIBLE_ID,
  CreateMultiDuctRequestData.JSON_PROPERTY_ID,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_FROM_DEVICE_ALL,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_FROM_NODE,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_ROUTE,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_TYPE,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_TO_DEVICE_ALL,
  CreateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_TO_NODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class CreateMultiDuctRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_OWNER_SYSTEM = "ownerSystem";
  private String ownerSystem;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<CreateMultiDuctCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<CreateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FROM_DEVICE_ALL = "createLinkFromDeviceAll";
  private CreateMultiDuctCreateLinkFromDeviceAllRequestData createLinkFromDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_FROM_NODE = "createLinkFromNode";
  private CreateMultiDuctCreateLinkFromNodeRequestData createLinkFromNode;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<CreateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_ROUTE = "createLinkMultiDuctRoute";
  private List<CreateMultiDuctCreateLinkMultiDuctRouteRequestData> createLinkMultiDuctRoute;

  public static final String JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_TYPE = "createLinkMultiDuctType";
  private CreateMultiDuctCreateLinkMultiDuctTypeRequestData createLinkMultiDuctType;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<CreateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<CreateMultiDuctCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<CreateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_CREATE_LINK_TO_DEVICE_ALL = "createLinkToDeviceAll";
  private CreateMultiDuctCreateLinkToDeviceAllRequestData createLinkToDeviceAll;

  public static final String JSON_PROPERTY_CREATE_LINK_TO_NODE = "createLinkToNode";
  private CreateMultiDuctCreateLinkToNodeRequestData createLinkToNode;

  public CreateMultiDuctRequestData() {
  }

  public CreateMultiDuctRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public CreateMultiDuctRequestData ownerSystem(String ownerSystem) {
    
    this.ownerSystem = ownerSystem;
    return this;
  }

   /**
   * Get ownerSystem
   * @return ownerSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerSystem() {
    return ownerSystem;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerSystem(String ownerSystem) {
    this.ownerSystem = ownerSystem;
  }


  public CreateMultiDuctRequestData color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public CreateMultiDuctRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public CreateMultiDuctRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateMultiDuctRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public CreateMultiDuctRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public CreateMultiDuctRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CreateMultiDuctRequestData createLinkContract(List<CreateMultiDuctCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkContractItem(CreateMultiDuctCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<CreateMultiDuctCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public CreateMultiDuctRequestData createLinkFrameContract(List<CreateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkFrameContractItem(CreateMultiDuctCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<CreateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public CreateMultiDuctRequestData createLinkFromDeviceAll(CreateMultiDuctCreateLinkFromDeviceAllRequestData createLinkFromDeviceAll) {
    
    this.createLinkFromDeviceAll = createLinkFromDeviceAll;
    return this;
  }

   /**
   * Get createLinkFromDeviceAll
   * @return createLinkFromDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateMultiDuctCreateLinkFromDeviceAllRequestData getCreateLinkFromDeviceAll() {
    return createLinkFromDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFromDeviceAll(CreateMultiDuctCreateLinkFromDeviceAllRequestData createLinkFromDeviceAll) {
    this.createLinkFromDeviceAll = createLinkFromDeviceAll;
  }


  public CreateMultiDuctRequestData createLinkFromNode(CreateMultiDuctCreateLinkFromNodeRequestData createLinkFromNode) {
    
    this.createLinkFromNode = createLinkFromNode;
    return this;
  }

   /**
   * Get createLinkFromNode
   * @return createLinkFromNode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateMultiDuctCreateLinkFromNodeRequestData getCreateLinkFromNode() {
    return createLinkFromNode;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FROM_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFromNode(CreateMultiDuctCreateLinkFromNodeRequestData createLinkFromNode) {
    this.createLinkFromNode = createLinkFromNode;
  }


  public CreateMultiDuctRequestData createLinkMaintenanceContract(List<CreateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkMaintenanceContractItem(CreateMultiDuctCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<CreateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public CreateMultiDuctRequestData createLinkMultiDuctRoute(List<CreateMultiDuctCreateLinkMultiDuctRouteRequestData> createLinkMultiDuctRoute) {
    
    this.createLinkMultiDuctRoute = createLinkMultiDuctRoute;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkMultiDuctRouteItem(CreateMultiDuctCreateLinkMultiDuctRouteRequestData createLinkMultiDuctRouteItem) {
    if (this.createLinkMultiDuctRoute == null) {
      this.createLinkMultiDuctRoute = new ArrayList<>();
    }
    this.createLinkMultiDuctRoute.add(createLinkMultiDuctRouteItem);
    return this;
  }

   /**
   * Get createLinkMultiDuctRoute
   * @return createLinkMultiDuctRoute
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkMultiDuctRouteRequestData> getCreateLinkMultiDuctRoute() {
    return createLinkMultiDuctRoute;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMultiDuctRoute(List<CreateMultiDuctCreateLinkMultiDuctRouteRequestData> createLinkMultiDuctRoute) {
    this.createLinkMultiDuctRoute = createLinkMultiDuctRoute;
  }


  public CreateMultiDuctRequestData createLinkMultiDuctType(CreateMultiDuctCreateLinkMultiDuctTypeRequestData createLinkMultiDuctType) {
    
    this.createLinkMultiDuctType = createLinkMultiDuctType;
    return this;
  }

   /**
   * Get createLinkMultiDuctType
   * @return createLinkMultiDuctType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateMultiDuctCreateLinkMultiDuctTypeRequestData getCreateLinkMultiDuctType() {
    return createLinkMultiDuctType;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MULTI_DUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateLinkMultiDuctType(CreateMultiDuctCreateLinkMultiDuctTypeRequestData createLinkMultiDuctType) {
    this.createLinkMultiDuctType = createLinkMultiDuctType;
  }


  public CreateMultiDuctRequestData createLinkOrganization(List<CreateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkOrganizationItem(CreateMultiDuctCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<CreateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public CreateMultiDuctRequestData createLinkPerson(List<CreateMultiDuctCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkPersonItem(CreateMultiDuctCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<CreateMultiDuctCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public CreateMultiDuctRequestData createLinkPersonGroup(List<CreateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public CreateMultiDuctRequestData addCreateLinkPersonGroupItem(CreateMultiDuctCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateMultiDuctCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<CreateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public CreateMultiDuctRequestData createLinkToDeviceAll(CreateMultiDuctCreateLinkToDeviceAllRequestData createLinkToDeviceAll) {
    
    this.createLinkToDeviceAll = createLinkToDeviceAll;
    return this;
  }

   /**
   * Get createLinkToDeviceAll
   * @return createLinkToDeviceAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateMultiDuctCreateLinkToDeviceAllRequestData getCreateLinkToDeviceAll() {
    return createLinkToDeviceAll;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_DEVICE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkToDeviceAll(CreateMultiDuctCreateLinkToDeviceAllRequestData createLinkToDeviceAll) {
    this.createLinkToDeviceAll = createLinkToDeviceAll;
  }


  public CreateMultiDuctRequestData createLinkToNode(CreateMultiDuctCreateLinkToNodeRequestData createLinkToNode) {
    
    this.createLinkToNode = createLinkToNode;
    return this;
  }

   /**
   * Get createLinkToNode
   * @return createLinkToNode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateMultiDuctCreateLinkToNodeRequestData getCreateLinkToNode() {
    return createLinkToNode;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_TO_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkToNode(CreateMultiDuctCreateLinkToNodeRequestData createLinkToNode) {
    this.createLinkToNode = createLinkToNode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMultiDuctRequestData createMultiDuctRequestData = (CreateMultiDuctRequestData) o;
    return Objects.equals(this.sourceId, createMultiDuctRequestData.sourceId) &&
        Objects.equals(this.ownerSystem, createMultiDuctRequestData.ownerSystem) &&
        Objects.equals(this.color, createMultiDuctRequestData.color) &&
        Objects.equals(this.sourceSystem, createMultiDuctRequestData.sourceSystem) &&
        Objects.equals(this.description, createMultiDuctRequestData.description) &&
        Objects.equals(this.contextId, createMultiDuctRequestData.contextId) &&
        Objects.equals(this.visibleId, createMultiDuctRequestData.visibleId) &&
        Objects.equals(this.id, createMultiDuctRequestData.id) &&
        Objects.equals(this.createLinkContract, createMultiDuctRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, createMultiDuctRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkFromDeviceAll, createMultiDuctRequestData.createLinkFromDeviceAll) &&
        Objects.equals(this.createLinkFromNode, createMultiDuctRequestData.createLinkFromNode) &&
        Objects.equals(this.createLinkMaintenanceContract, createMultiDuctRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkMultiDuctRoute, createMultiDuctRequestData.createLinkMultiDuctRoute) &&
        Objects.equals(this.createLinkMultiDuctType, createMultiDuctRequestData.createLinkMultiDuctType) &&
        Objects.equals(this.createLinkOrganization, createMultiDuctRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, createMultiDuctRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, createMultiDuctRequestData.createLinkPersonGroup) &&
        Objects.equals(this.createLinkToDeviceAll, createMultiDuctRequestData.createLinkToDeviceAll) &&
        Objects.equals(this.createLinkToNode, createMultiDuctRequestData.createLinkToNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, ownerSystem, color, sourceSystem, description, contextId, visibleId, id, createLinkContract, createLinkFrameContract, createLinkFromDeviceAll, createLinkFromNode, createLinkMaintenanceContract, createLinkMultiDuctRoute, createLinkMultiDuctType, createLinkOrganization, createLinkPerson, createLinkPersonGroup, createLinkToDeviceAll, createLinkToNode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateMultiDuctRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    ownerSystem: ").append(toIndentedString(ownerSystem)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkFromDeviceAll: ").append(toIndentedString(createLinkFromDeviceAll)).append("\n");
    sb.append("    createLinkFromNode: ").append(toIndentedString(createLinkFromNode)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkMultiDuctRoute: ").append(toIndentedString(createLinkMultiDuctRoute)).append("\n");
    sb.append("    createLinkMultiDuctType: ").append(toIndentedString(createLinkMultiDuctType)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    createLinkToDeviceAll: ").append(toIndentedString(createLinkToDeviceAll)).append("\n");
    sb.append("    createLinkToNode: ").append(toIndentedString(createLinkToNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

