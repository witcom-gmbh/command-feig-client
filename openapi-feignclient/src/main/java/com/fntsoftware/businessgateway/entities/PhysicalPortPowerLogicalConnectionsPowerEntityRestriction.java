/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.RestrictionsNumeric;
import com.fntsoftware.businessgateway.entities.RestrictionsString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PhysicalPortPowerLogicalConnectionsPowerEntityRestriction
 */
@JsonPropertyOrder({
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TO_SOCKET_NO,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_SOCKET_CATEGORY,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_HIERARCHY,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_DESCRIPTION,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_SOCKET_NO,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_INSTANCE_OF_SPEC,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TYPE,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_ELID,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_ID_ELID,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TO_SOCKET_SIDE,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_SOCKET_SIDE,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_SOCKET_SUB_NO,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TO_ID_ELID,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TO_SOCKET_CATEGORY,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_TO_SOCKET_SUB_NO,
  PhysicalPortPowerLogicalConnectionsPowerEntityRestriction.JSON_PROPERTY_OCCUPIED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class PhysicalPortPowerLogicalConnectionsPowerEntityRestriction {
  public static final String JSON_PROPERTY_TO_SOCKET_NO = "toSocketNo";
  private RestrictionsNumeric toSocketNo;

  public static final String JSON_PROPERTY_SOCKET_CATEGORY = "socketCategory";
  private RestrictionsString socketCategory;

  public static final String JSON_PROPERTY_HIERARCHY = "hierarchy";
  private RestrictionsString hierarchy;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private RestrictionsString description;

  public static final String JSON_PROPERTY_SOCKET_NO = "socketNo";
  private RestrictionsNumeric socketNo;

  public static final String JSON_PROPERTY_INSTANCE_OF_SPEC = "instanceOfSpec";
  private RestrictionsString instanceOfSpec;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RestrictionsString type;

  public static final String JSON_PROPERTY_ELID = "elid";
  private RestrictionsString elid;

  public static final String JSON_PROPERTY_ID_ELID = "idElid";
  private RestrictionsString idElid;

  public static final String JSON_PROPERTY_TO_SOCKET_SIDE = "toSocketSide";
  private RestrictionsString toSocketSide;

  public static final String JSON_PROPERTY_SOCKET_SIDE = "socketSide";
  private RestrictionsString socketSide;

  public static final String JSON_PROPERTY_SOCKET_SUB_NO = "socketSubNo";
  private RestrictionsNumeric socketSubNo;

  public static final String JSON_PROPERTY_TO_ID_ELID = "toIdElid";
  private RestrictionsString toIdElid;

  public static final String JSON_PROPERTY_TO_SOCKET_CATEGORY = "toSocketCategory";
  private RestrictionsString toSocketCategory;

  public static final String JSON_PROPERTY_TO_SOCKET_SUB_NO = "toSocketSubNo";
  private RestrictionsNumeric toSocketSubNo;

  public static final String JSON_PROPERTY_OCCUPIED = "occupied";
  private RestrictionsString occupied;

  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction() {
  }

  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction toSocketNo(RestrictionsNumeric toSocketNo) {
    
    this.toSocketNo = toSocketNo;
    return this;
  }

   /**
   * Get toSocketNo
   * @return toSocketNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getToSocketNo() {
    return toSocketNo;
  }


  @JsonProperty(JSON_PROPERTY_TO_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToSocketNo(RestrictionsNumeric toSocketNo) {
    this.toSocketNo = toSocketNo;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction socketCategory(RestrictionsString socketCategory) {
    
    this.socketCategory = socketCategory;
    return this;
  }

   /**
   * Get socketCategory
   * @return socketCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getSocketCategory() {
    return socketCategory;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketCategory(RestrictionsString socketCategory) {
    this.socketCategory = socketCategory;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction hierarchy(RestrictionsString hierarchy) {
    
    this.hierarchy = hierarchy;
    return this;
  }

   /**
   * Get hierarchy
   * @return hierarchy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getHierarchy() {
    return hierarchy;
  }


  @JsonProperty(JSON_PROPERTY_HIERARCHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHierarchy(RestrictionsString hierarchy) {
    this.hierarchy = hierarchy;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction description(RestrictionsString description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(RestrictionsString description) {
    this.description = description;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction socketNo(RestrictionsNumeric socketNo) {
    
    this.socketNo = socketNo;
    return this;
  }

   /**
   * Get socketNo
   * @return socketNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getSocketNo() {
    return socketNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketNo(RestrictionsNumeric socketNo) {
    this.socketNo = socketNo;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction instanceOfSpec(RestrictionsString instanceOfSpec) {
    
    this.instanceOfSpec = instanceOfSpec;
    return this;
  }

   /**
   * Get instanceOfSpec
   * @return instanceOfSpec
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_OF_SPEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getInstanceOfSpec() {
    return instanceOfSpec;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_OF_SPEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceOfSpec(RestrictionsString instanceOfSpec) {
    this.instanceOfSpec = instanceOfSpec;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction type(RestrictionsString type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(RestrictionsString type) {
    this.type = type;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction elid(RestrictionsString elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(RestrictionsString elid) {
    this.elid = elid;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction idElid(RestrictionsString idElid) {
    
    this.idElid = idElid;
    return this;
  }

   /**
   * Get idElid
   * @return idElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getIdElid() {
    return idElid;
  }


  @JsonProperty(JSON_PROPERTY_ID_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdElid(RestrictionsString idElid) {
    this.idElid = idElid;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction toSocketSide(RestrictionsString toSocketSide) {
    
    this.toSocketSide = toSocketSide;
    return this;
  }

   /**
   * Get toSocketSide
   * @return toSocketSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getToSocketSide() {
    return toSocketSide;
  }


  @JsonProperty(JSON_PROPERTY_TO_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToSocketSide(RestrictionsString toSocketSide) {
    this.toSocketSide = toSocketSide;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction socketSide(RestrictionsString socketSide) {
    
    this.socketSide = socketSide;
    return this;
  }

   /**
   * Get socketSide
   * @return socketSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getSocketSide() {
    return socketSide;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSide(RestrictionsString socketSide) {
    this.socketSide = socketSide;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction socketSubNo(RestrictionsNumeric socketSubNo) {
    
    this.socketSubNo = socketSubNo;
    return this;
  }

   /**
   * Get socketSubNo
   * @return socketSubNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getSocketSubNo() {
    return socketSubNo;
  }


  @JsonProperty(JSON_PROPERTY_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocketSubNo(RestrictionsNumeric socketSubNo) {
    this.socketSubNo = socketSubNo;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction toIdElid(RestrictionsString toIdElid) {
    
    this.toIdElid = toIdElid;
    return this;
  }

   /**
   * Get toIdElid
   * @return toIdElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_ID_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getToIdElid() {
    return toIdElid;
  }


  @JsonProperty(JSON_PROPERTY_TO_ID_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToIdElid(RestrictionsString toIdElid) {
    this.toIdElid = toIdElid;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction toSocketCategory(RestrictionsString toSocketCategory) {
    
    this.toSocketCategory = toSocketCategory;
    return this;
  }

   /**
   * Get toSocketCategory
   * @return toSocketCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_SOCKET_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getToSocketCategory() {
    return toSocketCategory;
  }


  @JsonProperty(JSON_PROPERTY_TO_SOCKET_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToSocketCategory(RestrictionsString toSocketCategory) {
    this.toSocketCategory = toSocketCategory;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction toSocketSubNo(RestrictionsNumeric toSocketSubNo) {
    
    this.toSocketSubNo = toSocketSubNo;
    return this;
  }

   /**
   * Get toSocketSubNo
   * @return toSocketSubNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsNumeric getToSocketSubNo() {
    return toSocketSubNo;
  }


  @JsonProperty(JSON_PROPERTY_TO_SOCKET_SUB_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToSocketSubNo(RestrictionsNumeric toSocketSubNo) {
    this.toSocketSubNo = toSocketSubNo;
  }


  public PhysicalPortPowerLogicalConnectionsPowerEntityRestriction occupied(RestrictionsString occupied) {
    
    this.occupied = occupied;
    return this;
  }

   /**
   * Get occupied
   * @return occupied
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestrictionsString getOccupied() {
    return occupied;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupied(RestrictionsString occupied) {
    this.occupied = occupied;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhysicalPortPowerLogicalConnectionsPowerEntityRestriction physicalPortPowerLogicalConnectionsPowerEntityRestriction = (PhysicalPortPowerLogicalConnectionsPowerEntityRestriction) o;
    return Objects.equals(this.toSocketNo, physicalPortPowerLogicalConnectionsPowerEntityRestriction.toSocketNo) &&
        Objects.equals(this.socketCategory, physicalPortPowerLogicalConnectionsPowerEntityRestriction.socketCategory) &&
        Objects.equals(this.hierarchy, physicalPortPowerLogicalConnectionsPowerEntityRestriction.hierarchy) &&
        Objects.equals(this.description, physicalPortPowerLogicalConnectionsPowerEntityRestriction.description) &&
        Objects.equals(this.socketNo, physicalPortPowerLogicalConnectionsPowerEntityRestriction.socketNo) &&
        Objects.equals(this.instanceOfSpec, physicalPortPowerLogicalConnectionsPowerEntityRestriction.instanceOfSpec) &&
        Objects.equals(this.type, physicalPortPowerLogicalConnectionsPowerEntityRestriction.type) &&
        Objects.equals(this.elid, physicalPortPowerLogicalConnectionsPowerEntityRestriction.elid) &&
        Objects.equals(this.idElid, physicalPortPowerLogicalConnectionsPowerEntityRestriction.idElid) &&
        Objects.equals(this.toSocketSide, physicalPortPowerLogicalConnectionsPowerEntityRestriction.toSocketSide) &&
        Objects.equals(this.socketSide, physicalPortPowerLogicalConnectionsPowerEntityRestriction.socketSide) &&
        Objects.equals(this.socketSubNo, physicalPortPowerLogicalConnectionsPowerEntityRestriction.socketSubNo) &&
        Objects.equals(this.toIdElid, physicalPortPowerLogicalConnectionsPowerEntityRestriction.toIdElid) &&
        Objects.equals(this.toSocketCategory, physicalPortPowerLogicalConnectionsPowerEntityRestriction.toSocketCategory) &&
        Objects.equals(this.toSocketSubNo, physicalPortPowerLogicalConnectionsPowerEntityRestriction.toSocketSubNo) &&
        Objects.equals(this.occupied, physicalPortPowerLogicalConnectionsPowerEntityRestriction.occupied);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toSocketNo, socketCategory, hierarchy, description, socketNo, instanceOfSpec, type, elid, idElid, toSocketSide, socketSide, socketSubNo, toIdElid, toSocketCategory, toSocketSubNo, occupied);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhysicalPortPowerLogicalConnectionsPowerEntityRestriction {\n");
    sb.append("    toSocketNo: ").append(toIndentedString(toSocketNo)).append("\n");
    sb.append("    socketCategory: ").append(toIndentedString(socketCategory)).append("\n");
    sb.append("    hierarchy: ").append(toIndentedString(hierarchy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    socketNo: ").append(toIndentedString(socketNo)).append("\n");
    sb.append("    instanceOfSpec: ").append(toIndentedString(instanceOfSpec)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    idElid: ").append(toIndentedString(idElid)).append("\n");
    sb.append("    toSocketSide: ").append(toIndentedString(toSocketSide)).append("\n");
    sb.append("    socketSide: ").append(toIndentedString(socketSide)).append("\n");
    sb.append("    socketSubNo: ").append(toIndentedString(socketSubNo)).append("\n");
    sb.append("    toIdElid: ").append(toIndentedString(toIdElid)).append("\n");
    sb.append("    toSocketCategory: ").append(toIndentedString(toSocketCategory)).append("\n");
    sb.append("    toSocketSubNo: ").append(toIndentedString(toSocketSubNo)).append("\n");
    sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

