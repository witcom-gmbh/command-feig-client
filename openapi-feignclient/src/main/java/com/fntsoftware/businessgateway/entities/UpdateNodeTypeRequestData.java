/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeAddSideRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkDeviceMasterRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkDeviceMasterRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeDeleteSideRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeUpdateLinkDeviceMasterRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeUpdateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateNodeTypeUpdateSideRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateNodeTypeRequestData
 */
@JsonPropertyOrder({
  UpdateNodeTypeRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DISPLAY_IN_NAVIGATOR,
  UpdateNodeTypeRequestData.JSON_PROPERTY_IS_STANDARD,
  UpdateNodeTypeRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateNodeTypeRequestData.JSON_PROPERTY_ID_PREFIX,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateNodeTypeRequestData.JSON_PROPERTY_SLACK_CORRECTION,
  UpdateNodeTypeRequestData.JSON_PROPERTY_PLACE_OBJECTS,
  UpdateNodeTypeRequestData.JSON_PROPERTY_MANUFACTURER,
  UpdateNodeTypeRequestData.JSON_PROPERTY_ADD_SIDE,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_DEVICE_MASTER,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateNodeTypeRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_DEVICE_MASTER,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateNodeTypeRequestData.JSON_PROPERTY_DELETE_SIDE,
  UpdateNodeTypeRequestData.JSON_PROPERTY_UPDATE_LINK_DEVICE_MASTER,
  UpdateNodeTypeRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateNodeTypeRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateNodeTypeRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP,
  UpdateNodeTypeRequestData.JSON_PROPERTY_UPDATE_SIDE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class UpdateNodeTypeRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_DISPLAY_IN_NAVIGATOR = "displayInNavigator";
  private Boolean displayInNavigator;

  public static final String JSON_PROPERTY_IS_STANDARD = "isStandard";
  private Boolean isStandard;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ID_PREFIX = "idPrefix";
  private String idPrefix;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_SLACK_CORRECTION = "slackCorrection";
  private BigDecimal slackCorrection;

  public static final String JSON_PROPERTY_PLACE_OBJECTS = "placeObjects";
  private Boolean placeObjects;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  public static final String JSON_PROPERTY_ADD_SIDE = "addSide";
  private List<UpdateNodeTypeAddSideRequestData> addSide;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateNodeTypeCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_DEVICE_MASTER = "createLinkDeviceMaster";
  private List<UpdateNodeTypeCreateLinkDeviceMasterRequestData> createLinkDeviceMaster;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateNodeTypeCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateNodeTypeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateNodeTypeCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateNodeTypeCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateNodeTypeCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateNodeTypeDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_DEVICE_MASTER = "deleteLinkDeviceMaster";
  private List<UpdateNodeTypeDeleteLinkDeviceMasterRequestData> deleteLinkDeviceMaster;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateNodeTypeDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateNodeTypeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateNodeTypeDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateNodeTypeDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateNodeTypeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_SIDE = "deleteSide";
  private List<UpdateNodeTypeDeleteSideRequestData> deleteSide;

  public static final String JSON_PROPERTY_UPDATE_LINK_DEVICE_MASTER = "updateLinkDeviceMaster";
  private List<UpdateNodeTypeUpdateLinkDeviceMasterRequestData> updateLinkDeviceMaster;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateNodeTypeUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateNodeTypeUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateNodeTypeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_SIDE = "updateSide";
  private List<UpdateNodeTypeUpdateSideRequestData> updateSide;

  public UpdateNodeTypeRequestData() {
  }

  public UpdateNodeTypeRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateNodeTypeRequestData displayInNavigator(Boolean displayInNavigator) {
    
    this.displayInNavigator = displayInNavigator;
    return this;
  }

   /**
   * Get displayInNavigator
   * @return displayInNavigator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_IN_NAVIGATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisplayInNavigator() {
    return displayInNavigator;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_IN_NAVIGATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayInNavigator(Boolean displayInNavigator) {
    this.displayInNavigator = displayInNavigator;
  }


  public UpdateNodeTypeRequestData isStandard(Boolean isStandard) {
    
    this.isStandard = isStandard;
    return this;
  }

   /**
   * Get isStandard
   * @return isStandard
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsStandard() {
    return isStandard;
  }


  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStandard(Boolean isStandard) {
    this.isStandard = isStandard;
  }


  public UpdateNodeTypeRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateNodeTypeRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateNodeTypeRequestData idPrefix(String idPrefix) {
    
    this.idPrefix = idPrefix;
    return this;
  }

   /**
   * Get idPrefix
   * @return idPrefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdPrefix() {
    return idPrefix;
  }


  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdPrefix(String idPrefix) {
    this.idPrefix = idPrefix;
  }


  public UpdateNodeTypeRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateNodeTypeRequestData slackCorrection(BigDecimal slackCorrection) {
    
    this.slackCorrection = slackCorrection;
    return this;
  }

   /**
   * Get slackCorrection
   * @return slackCorrection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLACK_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSlackCorrection() {
    return slackCorrection;
  }


  @JsonProperty(JSON_PROPERTY_SLACK_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlackCorrection(BigDecimal slackCorrection) {
    this.slackCorrection = slackCorrection;
  }


  public UpdateNodeTypeRequestData placeObjects(Boolean placeObjects) {
    
    this.placeObjects = placeObjects;
    return this;
  }

   /**
   * Get placeObjects
   * @return placeObjects
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACE_OBJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPlaceObjects() {
    return placeObjects;
  }


  @JsonProperty(JSON_PROPERTY_PLACE_OBJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceObjects(Boolean placeObjects) {
    this.placeObjects = placeObjects;
  }


  public UpdateNodeTypeRequestData manufacturer(String manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public UpdateNodeTypeRequestData addSide(List<UpdateNodeTypeAddSideRequestData> addSide) {
    
    this.addSide = addSide;
    return this;
  }

  public UpdateNodeTypeRequestData addAddSideItem(UpdateNodeTypeAddSideRequestData addSideItem) {
    if (this.addSide == null) {
      this.addSide = new ArrayList<>();
    }
    this.addSide.add(addSideItem);
    return this;
  }

   /**
   * Get addSide
   * @return addSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeAddSideRequestData> getAddSide() {
    return addSide;
  }


  @JsonProperty(JSON_PROPERTY_ADD_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddSide(List<UpdateNodeTypeAddSideRequestData> addSide) {
    this.addSide = addSide;
  }


  public UpdateNodeTypeRequestData createLinkContract(List<UpdateNodeTypeCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkContractItem(UpdateNodeTypeCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateNodeTypeCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateNodeTypeRequestData createLinkDeviceMaster(List<UpdateNodeTypeCreateLinkDeviceMasterRequestData> createLinkDeviceMaster) {
    
    this.createLinkDeviceMaster = createLinkDeviceMaster;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkDeviceMasterItem(UpdateNodeTypeCreateLinkDeviceMasterRequestData createLinkDeviceMasterItem) {
    if (this.createLinkDeviceMaster == null) {
      this.createLinkDeviceMaster = new ArrayList<>();
    }
    this.createLinkDeviceMaster.add(createLinkDeviceMasterItem);
    return this;
  }

   /**
   * Get createLinkDeviceMaster
   * @return createLinkDeviceMaster
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkDeviceMasterRequestData> getCreateLinkDeviceMaster() {
    return createLinkDeviceMaster;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkDeviceMaster(List<UpdateNodeTypeCreateLinkDeviceMasterRequestData> createLinkDeviceMaster) {
    this.createLinkDeviceMaster = createLinkDeviceMaster;
  }


  public UpdateNodeTypeRequestData createLinkFrameContract(List<UpdateNodeTypeCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkFrameContractItem(UpdateNodeTypeCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateNodeTypeCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateNodeTypeRequestData createLinkMaintenanceContract(List<UpdateNodeTypeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkMaintenanceContractItem(UpdateNodeTypeCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateNodeTypeCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateNodeTypeRequestData createLinkOrganization(List<UpdateNodeTypeCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkOrganizationItem(UpdateNodeTypeCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateNodeTypeCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateNodeTypeRequestData createLinkPerson(List<UpdateNodeTypeCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkPersonItem(UpdateNodeTypeCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateNodeTypeCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateNodeTypeRequestData createLinkPersonGroup(List<UpdateNodeTypeCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateNodeTypeRequestData addCreateLinkPersonGroupItem(UpdateNodeTypeCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateNodeTypeCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateNodeTypeRequestData deleteLinkContract(List<UpdateNodeTypeDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkContractItem(UpdateNodeTypeDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateNodeTypeDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateNodeTypeRequestData deleteLinkDeviceMaster(List<UpdateNodeTypeDeleteLinkDeviceMasterRequestData> deleteLinkDeviceMaster) {
    
    this.deleteLinkDeviceMaster = deleteLinkDeviceMaster;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkDeviceMasterItem(UpdateNodeTypeDeleteLinkDeviceMasterRequestData deleteLinkDeviceMasterItem) {
    if (this.deleteLinkDeviceMaster == null) {
      this.deleteLinkDeviceMaster = new ArrayList<>();
    }
    this.deleteLinkDeviceMaster.add(deleteLinkDeviceMasterItem);
    return this;
  }

   /**
   * Get deleteLinkDeviceMaster
   * @return deleteLinkDeviceMaster
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkDeviceMasterRequestData> getDeleteLinkDeviceMaster() {
    return deleteLinkDeviceMaster;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkDeviceMaster(List<UpdateNodeTypeDeleteLinkDeviceMasterRequestData> deleteLinkDeviceMaster) {
    this.deleteLinkDeviceMaster = deleteLinkDeviceMaster;
  }


  public UpdateNodeTypeRequestData deleteLinkFrameContract(List<UpdateNodeTypeDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkFrameContractItem(UpdateNodeTypeDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateNodeTypeDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateNodeTypeRequestData deleteLinkMaintenanceContract(List<UpdateNodeTypeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkMaintenanceContractItem(UpdateNodeTypeDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateNodeTypeDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateNodeTypeRequestData deleteLinkOrganization(List<UpdateNodeTypeDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkOrganizationItem(UpdateNodeTypeDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateNodeTypeDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateNodeTypeRequestData deleteLinkPerson(List<UpdateNodeTypeDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkPersonItem(UpdateNodeTypeDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateNodeTypeDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateNodeTypeRequestData deleteLinkPersonGroup(List<UpdateNodeTypeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteLinkPersonGroupItem(UpdateNodeTypeDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateNodeTypeDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateNodeTypeRequestData deleteSide(List<UpdateNodeTypeDeleteSideRequestData> deleteSide) {
    
    this.deleteSide = deleteSide;
    return this;
  }

  public UpdateNodeTypeRequestData addDeleteSideItem(UpdateNodeTypeDeleteSideRequestData deleteSideItem) {
    if (this.deleteSide == null) {
      this.deleteSide = new ArrayList<>();
    }
    this.deleteSide.add(deleteSideItem);
    return this;
  }

   /**
   * Get deleteSide
   * @return deleteSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeDeleteSideRequestData> getDeleteSide() {
    return deleteSide;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteSide(List<UpdateNodeTypeDeleteSideRequestData> deleteSide) {
    this.deleteSide = deleteSide;
  }


  public UpdateNodeTypeRequestData updateLinkDeviceMaster(List<UpdateNodeTypeUpdateLinkDeviceMasterRequestData> updateLinkDeviceMaster) {
    
    this.updateLinkDeviceMaster = updateLinkDeviceMaster;
    return this;
  }

  public UpdateNodeTypeRequestData addUpdateLinkDeviceMasterItem(UpdateNodeTypeUpdateLinkDeviceMasterRequestData updateLinkDeviceMasterItem) {
    if (this.updateLinkDeviceMaster == null) {
      this.updateLinkDeviceMaster = new ArrayList<>();
    }
    this.updateLinkDeviceMaster.add(updateLinkDeviceMasterItem);
    return this;
  }

   /**
   * Get updateLinkDeviceMaster
   * @return updateLinkDeviceMaster
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeUpdateLinkDeviceMasterRequestData> getUpdateLinkDeviceMaster() {
    return updateLinkDeviceMaster;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_DEVICE_MASTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkDeviceMaster(List<UpdateNodeTypeUpdateLinkDeviceMasterRequestData> updateLinkDeviceMaster) {
    this.updateLinkDeviceMaster = updateLinkDeviceMaster;
  }


  public UpdateNodeTypeRequestData updateLinkOrganization(List<UpdateNodeTypeUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateNodeTypeRequestData addUpdateLinkOrganizationItem(UpdateNodeTypeUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateNodeTypeUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateNodeTypeRequestData updateLinkPerson(List<UpdateNodeTypeUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateNodeTypeRequestData addUpdateLinkPersonItem(UpdateNodeTypeUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateNodeTypeUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateNodeTypeRequestData updateLinkPersonGroup(List<UpdateNodeTypeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateNodeTypeRequestData addUpdateLinkPersonGroupItem(UpdateNodeTypeUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateNodeTypeUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  public UpdateNodeTypeRequestData updateSide(List<UpdateNodeTypeUpdateSideRequestData> updateSide) {
    
    this.updateSide = updateSide;
    return this;
  }

  public UpdateNodeTypeRequestData addUpdateSideItem(UpdateNodeTypeUpdateSideRequestData updateSideItem) {
    if (this.updateSide == null) {
      this.updateSide = new ArrayList<>();
    }
    this.updateSide.add(updateSideItem);
    return this;
  }

   /**
   * Get updateSide
   * @return updateSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateNodeTypeUpdateSideRequestData> getUpdateSide() {
    return updateSide;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateSide(List<UpdateNodeTypeUpdateSideRequestData> updateSide) {
    this.updateSide = updateSide;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNodeTypeRequestData updateNodeTypeRequestData = (UpdateNodeTypeRequestData) o;
    return Objects.equals(this.sourceId, updateNodeTypeRequestData.sourceId) &&
        Objects.equals(this.displayInNavigator, updateNodeTypeRequestData.displayInNavigator) &&
        Objects.equals(this.isStandard, updateNodeTypeRequestData.isStandard) &&
        Objects.equals(this.sourceSystem, updateNodeTypeRequestData.sourceSystem) &&
        Objects.equals(this.description, updateNodeTypeRequestData.description) &&
        Objects.equals(this.idPrefix, updateNodeTypeRequestData.idPrefix) &&
        Objects.equals(this.contextId, updateNodeTypeRequestData.contextId) &&
        Objects.equals(this.slackCorrection, updateNodeTypeRequestData.slackCorrection) &&
        Objects.equals(this.placeObjects, updateNodeTypeRequestData.placeObjects) &&
        Objects.equals(this.manufacturer, updateNodeTypeRequestData.manufacturer) &&
        Objects.equals(this.addSide, updateNodeTypeRequestData.addSide) &&
        Objects.equals(this.createLinkContract, updateNodeTypeRequestData.createLinkContract) &&
        Objects.equals(this.createLinkDeviceMaster, updateNodeTypeRequestData.createLinkDeviceMaster) &&
        Objects.equals(this.createLinkFrameContract, updateNodeTypeRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateNodeTypeRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateNodeTypeRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateNodeTypeRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateNodeTypeRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateNodeTypeRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkDeviceMaster, updateNodeTypeRequestData.deleteLinkDeviceMaster) &&
        Objects.equals(this.deleteLinkFrameContract, updateNodeTypeRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateNodeTypeRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateNodeTypeRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateNodeTypeRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateNodeTypeRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteSide, updateNodeTypeRequestData.deleteSide) &&
        Objects.equals(this.updateLinkDeviceMaster, updateNodeTypeRequestData.updateLinkDeviceMaster) &&
        Objects.equals(this.updateLinkOrganization, updateNodeTypeRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateNodeTypeRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateNodeTypeRequestData.updateLinkPersonGroup) &&
        Objects.equals(this.updateSide, updateNodeTypeRequestData.updateSide);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, displayInNavigator, isStandard, sourceSystem, description, idPrefix, contextId, slackCorrection, placeObjects, manufacturer, addSide, createLinkContract, createLinkDeviceMaster, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkDeviceMaster, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteSide, updateLinkDeviceMaster, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup, updateSide);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNodeTypeRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    displayInNavigator: ").append(toIndentedString(displayInNavigator)).append("\n");
    sb.append("    isStandard: ").append(toIndentedString(isStandard)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    idPrefix: ").append(toIndentedString(idPrefix)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    slackCorrection: ").append(toIndentedString(slackCorrection)).append("\n");
    sb.append("    placeObjects: ").append(toIndentedString(placeObjects)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    addSide: ").append(toIndentedString(addSide)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkDeviceMaster: ").append(toIndentedString(createLinkDeviceMaster)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkDeviceMaster: ").append(toIndentedString(deleteLinkDeviceMaster)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteSide: ").append(toIndentedString(deleteSide)).append("\n");
    sb.append("    updateLinkDeviceMaster: ").append(toIndentedString(updateLinkDeviceMaster)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("    updateSide: ").append(toIndentedString(updateSide)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

