/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SpliceFiber1To1JunctionBoxFistRequestData
 */
@JsonPropertyOrder({
  SpliceFiber1To1JunctionBoxFistRequestData.JSON_PROPERTY_CASSETTE_ELID,
  SpliceFiber1To1JunctionBoxFistRequestData.JSON_PROPERTY_FIBERS,
  SpliceFiber1To1JunctionBoxFistRequestData.JSON_PROPERTY_MAX_CONNECTIONS_PER_CASSETTE,
  SpliceFiber1To1JunctionBoxFistRequestData.JSON_PROPERTY_CABLE_ELID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class SpliceFiber1To1JunctionBoxFistRequestData {
  public static final String JSON_PROPERTY_CASSETTE_ELID = "cassetteElid";
  private String cassetteElid;

  public static final String JSON_PROPERTY_FIBERS = "fibers";
  private String fibers;

  public static final String JSON_PROPERTY_MAX_CONNECTIONS_PER_CASSETTE = "maxConnectionsPerCassette";
  private BigDecimal maxConnectionsPerCassette;

  public static final String JSON_PROPERTY_CABLE_ELID = "cableElid";
  private String cableElid;

  public SpliceFiber1To1JunctionBoxFistRequestData() {
  }

  public SpliceFiber1To1JunctionBoxFistRequestData cassetteElid(String cassetteElid) {
    
    this.cassetteElid = cassetteElid;
    return this;
  }

   /**
   * Get cassetteElid
   * @return cassetteElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASSETTE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCassetteElid() {
    return cassetteElid;
  }


  @JsonProperty(JSON_PROPERTY_CASSETTE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCassetteElid(String cassetteElid) {
    this.cassetteElid = cassetteElid;
  }


  public SpliceFiber1To1JunctionBoxFistRequestData fibers(String fibers) {
    
    this.fibers = fibers;
    return this;
  }

   /**
   * Get fibers
   * @return fibers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFibers() {
    return fibers;
  }


  @JsonProperty(JSON_PROPERTY_FIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFibers(String fibers) {
    this.fibers = fibers;
  }


  public SpliceFiber1To1JunctionBoxFistRequestData maxConnectionsPerCassette(BigDecimal maxConnectionsPerCassette) {
    
    this.maxConnectionsPerCassette = maxConnectionsPerCassette;
    return this;
  }

   /**
   * Get maxConnectionsPerCassette
   * @return maxConnectionsPerCassette
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_CONNECTIONS_PER_CASSETTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxConnectionsPerCassette() {
    return maxConnectionsPerCassette;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CONNECTIONS_PER_CASSETTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxConnectionsPerCassette(BigDecimal maxConnectionsPerCassette) {
    this.maxConnectionsPerCassette = maxConnectionsPerCassette;
  }


  public SpliceFiber1To1JunctionBoxFistRequestData cableElid(String cableElid) {
    
    this.cableElid = cableElid;
    return this;
  }

   /**
   * Get cableElid
   * @return cableElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCableElid() {
    return cableElid;
  }


  @JsonProperty(JSON_PROPERTY_CABLE_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCableElid(String cableElid) {
    this.cableElid = cableElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpliceFiber1To1JunctionBoxFistRequestData spliceFiber1To1JunctionBoxFistRequestData = (SpliceFiber1To1JunctionBoxFistRequestData) o;
    return Objects.equals(this.cassetteElid, spliceFiber1To1JunctionBoxFistRequestData.cassetteElid) &&
        Objects.equals(this.fibers, spliceFiber1To1JunctionBoxFistRequestData.fibers) &&
        Objects.equals(this.maxConnectionsPerCassette, spliceFiber1To1JunctionBoxFistRequestData.maxConnectionsPerCassette) &&
        Objects.equals(this.cableElid, spliceFiber1To1JunctionBoxFistRequestData.cableElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cassetteElid, fibers, maxConnectionsPerCassette, cableElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpliceFiber1To1JunctionBoxFistRequestData {\n");
    sb.append("    cassetteElid: ").append(toIndentedString(cassetteElid)).append("\n");
    sb.append("    fibers: ").append(toIndentedString(fibers)).append("\n");
    sb.append("    maxConnectionsPerCassette: ").append(toIndentedString(maxConnectionsPerCassette)).append("\n");
    sb.append("    cableElid: ").append(toIndentedString(cableElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

