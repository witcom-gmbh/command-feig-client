/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240226111547
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceMasterJunctionBoxFistjunctionBoxSideType
 */
@JsonPropertyOrder({
  DeviceMasterJunctionBoxFistjunctionBoxSideType.JSON_PROPERTY_GRID,
  DeviceMasterJunctionBoxFistjunctionBoxSideType.JSON_PROPERTY_NAME,
  DeviceMasterJunctionBoxFistjunctionBoxSideType.JSON_PROPERTY_ID
})
@JsonTypeName("deviceMasterJunctionBoxFistjunctionBoxSideType")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-26T11:20:24.990023935Z[Etc/UTC]")
public class DeviceMasterJunctionBoxFistjunctionBoxSideType {
  public static final String JSON_PROPERTY_GRID = "grid";
  private BigDecimal grid;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private BigDecimal id;

  public DeviceMasterJunctionBoxFistjunctionBoxSideType() {
  }

  public DeviceMasterJunctionBoxFistjunctionBoxSideType grid(BigDecimal grid) {
    
    this.grid = grid;
    return this;
  }

   /**
   * Get grid
   * @return grid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGrid() {
    return grid;
  }


  @JsonProperty(JSON_PROPERTY_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrid(BigDecimal grid) {
    this.grid = grid;
  }


  public DeviceMasterJunctionBoxFistjunctionBoxSideType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DeviceMasterJunctionBoxFistjunctionBoxSideType id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(BigDecimal id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMasterJunctionBoxFistjunctionBoxSideType deviceMasterJunctionBoxFistjunctionBoxSideType = (DeviceMasterJunctionBoxFistjunctionBoxSideType) o;
    return Objects.equals(this.grid, deviceMasterJunctionBoxFistjunctionBoxSideType.grid) &&
        Objects.equals(this.name, deviceMasterJunctionBoxFistjunctionBoxSideType.name) &&
        Objects.equals(this.id, deviceMasterJunctionBoxFistjunctionBoxSideType.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(grid, name, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMasterJunctionBoxFistjunctionBoxSideType {\n");
    sb.append("    grid: ").append(toIndentedString(grid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

