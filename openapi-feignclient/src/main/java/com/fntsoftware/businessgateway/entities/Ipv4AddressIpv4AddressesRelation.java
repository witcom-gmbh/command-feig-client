/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ipv4AddressIpv4AddressesRelation
 */
@JsonPropertyOrder({
  Ipv4AddressIpv4AddressesRelation.JSON_PROPERTY_PROTOCOL,
  Ipv4AddressIpv4AddressesRelation.JSON_PROPERTY_FROM_PORT,
  Ipv4AddressIpv4AddressesRelation.JSON_PROPERTY_LINK_DESCRIPTION,
  Ipv4AddressIpv4AddressesRelation.JSON_PROPERTY_TO_PORT,
  Ipv4AddressIpv4AddressesRelation.JSON_PROPERTY_LINK_ELID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class Ipv4AddressIpv4AddressesRelation {
  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private String protocol;

  public static final String JSON_PROPERTY_FROM_PORT = "fromPort";
  private BigDecimal fromPort;

  public static final String JSON_PROPERTY_LINK_DESCRIPTION = "linkDescription";
  private String linkDescription;

  public static final String JSON_PROPERTY_TO_PORT = "toPort";
  private BigDecimal toPort;

  public static final String JSON_PROPERTY_LINK_ELID = "linkElid";
  private String linkElid;

  public Ipv4AddressIpv4AddressesRelation() {
  }

  public Ipv4AddressIpv4AddressesRelation protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public Ipv4AddressIpv4AddressesRelation fromPort(BigDecimal fromPort) {
    
    this.fromPort = fromPort;
    return this;
  }

   /**
   * Get fromPort
   * @return fromPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFromPort() {
    return fromPort;
  }


  @JsonProperty(JSON_PROPERTY_FROM_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromPort(BigDecimal fromPort) {
    this.fromPort = fromPort;
  }


  public Ipv4AddressIpv4AddressesRelation linkDescription(String linkDescription) {
    
    this.linkDescription = linkDescription;
    return this;
  }

   /**
   * Get linkDescription
   * @return linkDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkDescription() {
    return linkDescription;
  }


  @JsonProperty(JSON_PROPERTY_LINK_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkDescription(String linkDescription) {
    this.linkDescription = linkDescription;
  }


  public Ipv4AddressIpv4AddressesRelation toPort(BigDecimal toPort) {
    
    this.toPort = toPort;
    return this;
  }

   /**
   * Get toPort
   * @return toPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getToPort() {
    return toPort;
  }


  @JsonProperty(JSON_PROPERTY_TO_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToPort(BigDecimal toPort) {
    this.toPort = toPort;
  }


  public Ipv4AddressIpv4AddressesRelation linkElid(String linkElid) {
    
    this.linkElid = linkElid;
    return this;
  }

   /**
   * Get linkElid
   * @return linkElid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkElid() {
    return linkElid;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkElid(String linkElid) {
    this.linkElid = linkElid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ipv4AddressIpv4AddressesRelation ipv4AddressIpv4AddressesRelation = (Ipv4AddressIpv4AddressesRelation) o;
    return Objects.equals(this.protocol, ipv4AddressIpv4AddressesRelation.protocol) &&
        Objects.equals(this.fromPort, ipv4AddressIpv4AddressesRelation.fromPort) &&
        Objects.equals(this.linkDescription, ipv4AddressIpv4AddressesRelation.linkDescription) &&
        Objects.equals(this.toPort, ipv4AddressIpv4AddressesRelation.toPort) &&
        Objects.equals(this.linkElid, ipv4AddressIpv4AddressesRelation.linkElid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protocol, fromPort, linkDescription, toPort, linkElid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ipv4AddressIpv4AddressesRelation {\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    fromPort: ").append(toIndentedString(fromPort)).append("\n");
    sb.append("    linkDescription: ").append(toIndentedString(linkDescription)).append("\n");
    sb.append("    toPort: ").append(toIndentedString(toPort)).append("\n");
    sb.append("    linkElid: ").append(toIndentedString(linkElid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

