/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240304133000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateCableMasterDataCableCreateConductorRequestData
 */
@JsonPropertyOrder({
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_BUNDLE_ID,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_LENGTH,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_REMARK,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_MEDIUM,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_CATEGORY,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_CONDUCTOR_COLOR,
  CreateCableMasterDataCableCreateConductorRequestData.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T13:31:32.601557352Z[Etc/UTC]")
public class CreateCableMasterDataCableCreateConductorRequestData {
  public static final String JSON_PROPERTY_BUNDLE_ID = "bundleId";
  private BigDecimal bundleId;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private BigDecimal length;

  public static final String JSON_PROPERTY_REMARK = "remark";
  private String remark;

  public static final String JSON_PROPERTY_MEDIUM = "medium";
  private String medium;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_CONDUCTOR_COLOR = "conductorColor";
  private String conductorColor;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public CreateCableMasterDataCableCreateConductorRequestData() {
  }

  public CreateCableMasterDataCableCreateConductorRequestData bundleId(BigDecimal bundleId) {
    
    this.bundleId = bundleId;
    return this;
  }

   /**
   * Get bundleId
   * @return bundleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUNDLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBundleId() {
    return bundleId;
  }


  @JsonProperty(JSON_PROPERTY_BUNDLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBundleId(BigDecimal bundleId) {
    this.bundleId = bundleId;
  }


  public CreateCableMasterDataCableCreateConductorRequestData length(BigDecimal length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public CreateCableMasterDataCableCreateConductorRequestData remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemark() {
    return remark;
  }


  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemark(String remark) {
    this.remark = remark;
  }


  public CreateCableMasterDataCableCreateConductorRequestData medium(String medium) {
    
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMedium() {
    return medium;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedium(String medium) {
    this.medium = medium;
  }


  public CreateCableMasterDataCableCreateConductorRequestData category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public CreateCableMasterDataCableCreateConductorRequestData conductorColor(String conductorColor) {
    
    this.conductorColor = conductorColor;
    return this;
  }

   /**
   * Get conductorColor
   * @return conductorColor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONDUCTOR_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConductorColor() {
    return conductorColor;
  }


  @JsonProperty(JSON_PROPERTY_CONDUCTOR_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConductorColor(String conductorColor) {
    this.conductorColor = conductorColor;
  }


  public CreateCableMasterDataCableCreateConductorRequestData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCableMasterDataCableCreateConductorRequestData createCableMasterDataCableCreateConductorRequestData = (CreateCableMasterDataCableCreateConductorRequestData) o;
    return Objects.equals(this.bundleId, createCableMasterDataCableCreateConductorRequestData.bundleId) &&
        Objects.equals(this.length, createCableMasterDataCableCreateConductorRequestData.length) &&
        Objects.equals(this.remark, createCableMasterDataCableCreateConductorRequestData.remark) &&
        Objects.equals(this.medium, createCableMasterDataCableCreateConductorRequestData.medium) &&
        Objects.equals(this.category, createCableMasterDataCableCreateConductorRequestData.category) &&
        Objects.equals(this.conductorColor, createCableMasterDataCableCreateConductorRequestData.conductorColor) &&
        Objects.equals(this.type, createCableMasterDataCableCreateConductorRequestData.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bundleId, length, remark, medium, category, conductorColor, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCableMasterDataCableCreateConductorRequestData {\n");
    sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    conductorColor: ").append(toIndentedString(conductorColor)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

