/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateMultiDuctUpdateLinkNodeRequestData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateMultiDuctRequestData
 */
@JsonPropertyOrder({
  UpdateMultiDuctRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateMultiDuctRequestData.JSON_PROPERTY_COLOR,
  UpdateMultiDuctRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DESCRIPTION,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateMultiDuctRequestData.JSON_PROPERTY_VISIBLE_ID,
  UpdateMultiDuctRequestData.JSON_PROPERTY_ID,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateMultiDuctRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateMultiDuctRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateMultiDuctRequestData.JSON_PROPERTY_UPDATE_LINK_NODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class UpdateMultiDuctRequestData {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_VISIBLE_ID = "visibleId";
  private String visibleId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateMultiDuctCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateMultiDuctCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateMultiDuctDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateMultiDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateMultiDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateMultiDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateMultiDuctDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateMultiDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_UPDATE_LINK_NODE = "updateLinkNode";
  private UpdateMultiDuctUpdateLinkNodeRequestData updateLinkNode;

  public UpdateMultiDuctRequestData() {
  }

  public UpdateMultiDuctRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateMultiDuctRequestData color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }


  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColor(String color) {
    this.color = color;
  }


  public UpdateMultiDuctRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateMultiDuctRequestData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateMultiDuctRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateMultiDuctRequestData visibleId(String visibleId) {
    
    this.visibleId = visibleId;
    return this;
  }

   /**
   * Get visibleId
   * @return visibleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVisibleId() {
    return visibleId;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleId(String visibleId) {
    this.visibleId = visibleId;
  }


  public UpdateMultiDuctRequestData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateMultiDuctRequestData createLinkContract(List<UpdateMultiDuctCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkContractItem(UpdateMultiDuctCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateMultiDuctCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateMultiDuctRequestData createLinkFrameContract(List<UpdateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkFrameContractItem(UpdateMultiDuctCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateMultiDuctCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateMultiDuctRequestData createLinkMaintenanceContract(List<UpdateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkMaintenanceContractItem(UpdateMultiDuctCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateMultiDuctCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateMultiDuctRequestData createLinkOrganization(List<UpdateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkOrganizationItem(UpdateMultiDuctCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateMultiDuctCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateMultiDuctRequestData createLinkPerson(List<UpdateMultiDuctCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkPersonItem(UpdateMultiDuctCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateMultiDuctCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateMultiDuctRequestData createLinkPersonGroup(List<UpdateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateMultiDuctRequestData addCreateLinkPersonGroupItem(UpdateMultiDuctCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateMultiDuctCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateMultiDuctRequestData deleteLinkContract(List<UpdateMultiDuctDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkContractItem(UpdateMultiDuctDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateMultiDuctDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateMultiDuctRequestData deleteLinkFrameContract(List<UpdateMultiDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkFrameContractItem(UpdateMultiDuctDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateMultiDuctDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateMultiDuctRequestData deleteLinkMaintenanceContract(List<UpdateMultiDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkMaintenanceContractItem(UpdateMultiDuctDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateMultiDuctDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateMultiDuctRequestData deleteLinkOrganization(List<UpdateMultiDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkOrganizationItem(UpdateMultiDuctDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateMultiDuctDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateMultiDuctRequestData deleteLinkPerson(List<UpdateMultiDuctDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkPersonItem(UpdateMultiDuctDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateMultiDuctDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateMultiDuctRequestData deleteLinkPersonGroup(List<UpdateMultiDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateMultiDuctRequestData addDeleteLinkPersonGroupItem(UpdateMultiDuctDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateMultiDuctDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateMultiDuctDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateMultiDuctRequestData updateLinkNode(UpdateMultiDuctUpdateLinkNodeRequestData updateLinkNode) {
    
    this.updateLinkNode = updateLinkNode;
    return this;
  }

   /**
   * Get updateLinkNode
   * @return updateLinkNode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateMultiDuctUpdateLinkNodeRequestData getUpdateLinkNode() {
    return updateLinkNode;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkNode(UpdateMultiDuctUpdateLinkNodeRequestData updateLinkNode) {
    this.updateLinkNode = updateLinkNode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateMultiDuctRequestData updateMultiDuctRequestData = (UpdateMultiDuctRequestData) o;
    return Objects.equals(this.sourceId, updateMultiDuctRequestData.sourceId) &&
        Objects.equals(this.color, updateMultiDuctRequestData.color) &&
        Objects.equals(this.sourceSystem, updateMultiDuctRequestData.sourceSystem) &&
        Objects.equals(this.description, updateMultiDuctRequestData.description) &&
        Objects.equals(this.contextId, updateMultiDuctRequestData.contextId) &&
        Objects.equals(this.visibleId, updateMultiDuctRequestData.visibleId) &&
        Objects.equals(this.id, updateMultiDuctRequestData.id) &&
        Objects.equals(this.createLinkContract, updateMultiDuctRequestData.createLinkContract) &&
        Objects.equals(this.createLinkFrameContract, updateMultiDuctRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkMaintenanceContract, updateMultiDuctRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateMultiDuctRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateMultiDuctRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateMultiDuctRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateMultiDuctRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateMultiDuctRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateMultiDuctRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateMultiDuctRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateMultiDuctRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateMultiDuctRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.updateLinkNode, updateMultiDuctRequestData.updateLinkNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, color, sourceSystem, description, contextId, visibleId, id, createLinkContract, createLinkFrameContract, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkFrameContract, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, updateLinkNode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateMultiDuctRequestData {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    visibleId: ").append(toIndentedString(visibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    updateLinkNode: ").append(toIndentedString(updateLinkNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

