/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkCustomIpaccessSvcRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkCustomSvidRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortCreateLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkPersonRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortUpdateLinkCustomTcoInterconnectRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData;
import com.fntsoftware.businessgateway.entities.UpdateSupportType3LogicalPortUpdateLinkPersonRequestData;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateSupportType3LogicalPortRequestData
 */
@JsonPropertyOrder({
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_NOMINAL_UTILIZATION,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_SOURCE_ID,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_DELETED,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_C_SERVICE_SIDE,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_OVERLOAD_WARNING,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_RX_BLOCK_FLAG,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_BANDWIDTH,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_SOURCE_SYSTEM,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_LOCK_SUB_PORT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE_ID,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CONTEXT_ID,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_CATEGORY,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_STATUS,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_TX_BLOCK_FLAG,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_TYPE,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_NO,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_C_DATA_SOURCE,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_ATM,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_FUNCTION,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_PORT_NAME_ORG,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_IMA,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_SIGNAL_RATE,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_ACTIVE_FROM,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_ACTIVE_UNTIL,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_ORGANIZATION,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_CREATE_LINK_PERSON_GROUP,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_ORGANIZATION,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_PERSON_GROUP,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_ORGANIZATION,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON,
  UpdateSupportType3LogicalPortRequestData.JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class UpdateSupportType3LogicalPortRequestData {
  public static final String JSON_PROPERTY_NOMINAL_UTILIZATION = "nominalUtilization";
  private BigDecimal nominalUtilization;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_DELETED = "cDataSourceDeleted";
  private String cDataSourceDeleted;

  public static final String JSON_PROPERTY_C_SERVICE_SIDE = "cServiceSide";
  private String cServiceSide;

  public static final String JSON_PROPERTY_OVERLOAD_WARNING = "overloadWarning";
  private String overloadWarning;

  public static final String JSON_PROPERTY_RX_BLOCK_FLAG = "rxBlockFlag";
  private Boolean rxBlockFlag;

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private BigDecimal bandwidth;

  public static final String JSON_PROPERTY_SOURCE_SYSTEM = "sourceSystem";
  private String sourceSystem;

  public static final String JSON_PROPERTY_LOCK_SUB_PORT = "lockSubPort";
  private Boolean lockSubPort;

  public static final String JSON_PROPERTY_C_DATA_SOURCE_ID = "cDataSourceId";
  private String cDataSourceId;

  public static final String JSON_PROPERTY_CONTEXT_ID = "contextId";
  private String contextId;

  public static final String JSON_PROPERTY_PORT_CATEGORY = "portCategory";
  private String portCategory;

  public static final String JSON_PROPERTY_PORT_STATUS = "portStatus";
  private String portStatus;

  public static final String JSON_PROPERTY_TX_BLOCK_FLAG = "txBlockFlag";
  private Boolean txBlockFlag;

  public static final String JSON_PROPERTY_PORT_TYPE = "portType";
  private String portType;

  public static final String JSON_PROPERTY_PORT_NO = "portNo";
  private BigDecimal portNo;

  public static final String JSON_PROPERTY_C_DATA_SOURCE = "cDataSource";
  private String cDataSource;

  public static final String JSON_PROPERTY_ATM = "atm";
  private Boolean atm;

  public static final String JSON_PROPERTY_PORT_FUNCTION = "portFunction";
  private String portFunction;

  public static final String JSON_PROPERTY_PORT_NAME_ORG = "portNameOrg";
  private String portNameOrg;

  public static final String JSON_PROPERTY_IMA = "ima";
  private Boolean ima;

  public static final String JSON_PROPERTY_SIGNAL_RATE = "signalRate";
  private String signalRate;

  public static final String JSON_PROPERTY_ACTIVE_FROM = "activeFrom";
  private DateTime activeFrom;

  public static final String JSON_PROPERTY_ACTIVE_UNTIL = "activeUntil";
  private DateTime activeUntil;

  public static final String JSON_PROPERTY_CREATE_LINK_CONTRACT = "createLinkContract";
  private List<UpdateSupportType3LogicalPortCreateLinkContractRequestData> createLinkContract;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC = "createLinkCustomIpaccessSvc";
  private UpdateSupportType3LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID = "createLinkCustomSvid";
  private UpdateSupportType3LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid;

  public static final String JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT = "createLinkCustomTcoInterconnect";
  private UpdateSupportType3LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT = "createLinkFrameContract";
  private List<UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract;

  public static final String JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT = "createLinkLogicalPort";
  private List<UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort;

  public static final String JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT = "createLinkMaintenanceContract";
  private List<UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract;

  public static final String JSON_PROPERTY_CREATE_LINK_ORGANIZATION = "createLinkOrganization";
  private List<UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON = "createLinkPerson";
  private List<UpdateSupportType3LogicalPortCreateLinkPersonRequestData> createLinkPerson;

  public static final String JSON_PROPERTY_CREATE_LINK_PERSON_GROUP = "createLinkPersonGroup";
  private List<UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_CONTRACT = "deleteLinkContract";
  private List<UpdateSupportType3LogicalPortDeleteLinkContractRequestData> deleteLinkContract;

  public static final String JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT = "deleteLinkFrameContract";
  private List<UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract;

  public static final String JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT = "deleteLinkLogicalPort";
  private List<UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort;

  public static final String JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT = "deleteLinkMaintenanceContract";
  private List<UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract;

  public static final String JSON_PROPERTY_DELETE_LINK_ORGANIZATION = "deleteLinkOrganization";
  private List<UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON = "deleteLinkPerson";
  private List<UpdateSupportType3LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson;

  public static final String JSON_PROPERTY_DELETE_LINK_PERSON_GROUP = "deleteLinkPersonGroup";
  private List<UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup;

  public static final String JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS = "deleteLinkSubdividedPorts";
  private List<UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts;

  public static final String JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT = "updateLinkCustomTcoInterconnect";
  private UpdateSupportType3LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect;

  public static final String JSON_PROPERTY_UPDATE_LINK_ORGANIZATION = "updateLinkOrganization";
  private List<UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON = "updateLinkPerson";
  private List<UpdateSupportType3LogicalPortUpdateLinkPersonRequestData> updateLinkPerson;

  public static final String JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP = "updateLinkPersonGroup";
  private List<UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup;

  public UpdateSupportType3LogicalPortRequestData() {
  }

  public UpdateSupportType3LogicalPortRequestData nominalUtilization(BigDecimal nominalUtilization) {
    
    this.nominalUtilization = nominalUtilization;
    return this;
  }

   /**
   * Get nominalUtilization
   * @return nominalUtilization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalUtilization() {
    return nominalUtilization;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_UTILIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalUtilization(BigDecimal nominalUtilization) {
    this.nominalUtilization = nominalUtilization;
  }


  public UpdateSupportType3LogicalPortRequestData sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public UpdateSupportType3LogicalPortRequestData cDataSourceDeleted(String cDataSourceDeleted) {
    
    this.cDataSourceDeleted = cDataSourceDeleted;
    return this;
  }

   /**
   * Get cDataSourceDeleted
   * @return cDataSourceDeleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceDeleted() {
    return cDataSourceDeleted;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceDeleted(String cDataSourceDeleted) {
    this.cDataSourceDeleted = cDataSourceDeleted;
  }


  public UpdateSupportType3LogicalPortRequestData cServiceSide(String cServiceSide) {
    
    this.cServiceSide = cServiceSide;
    return this;
  }

   /**
   * Get cServiceSide
   * @return cServiceSide
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcServiceSide() {
    return cServiceSide;
  }


  @JsonProperty(JSON_PROPERTY_C_SERVICE_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcServiceSide(String cServiceSide) {
    this.cServiceSide = cServiceSide;
  }


  public UpdateSupportType3LogicalPortRequestData overloadWarning(String overloadWarning) {
    
    this.overloadWarning = overloadWarning;
    return this;
  }

   /**
   * Get overloadWarning
   * @return overloadWarning
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOverloadWarning() {
    return overloadWarning;
  }


  @JsonProperty(JSON_PROPERTY_OVERLOAD_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverloadWarning(String overloadWarning) {
    this.overloadWarning = overloadWarning;
  }


  public UpdateSupportType3LogicalPortRequestData rxBlockFlag(Boolean rxBlockFlag) {
    
    this.rxBlockFlag = rxBlockFlag;
    return this;
  }

   /**
   * Get rxBlockFlag
   * @return rxBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRxBlockFlag() {
    return rxBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_RX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRxBlockFlag(Boolean rxBlockFlag) {
    this.rxBlockFlag = rxBlockFlag;
  }


  public UpdateSupportType3LogicalPortRequestData bandwidth(BigDecimal bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }


  public UpdateSupportType3LogicalPortRequestData sourceSystem(String sourceSystem) {
    
    this.sourceSystem = sourceSystem;
    return this;
  }

   /**
   * Get sourceSystem
   * @return sourceSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceSystem() {
    return sourceSystem;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
  }


  public UpdateSupportType3LogicalPortRequestData lockSubPort(Boolean lockSubPort) {
    
    this.lockSubPort = lockSubPort;
    return this;
  }

   /**
   * Get lockSubPort
   * @return lockSubPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCK_SUB_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLockSubPort() {
    return lockSubPort;
  }


  @JsonProperty(JSON_PROPERTY_LOCK_SUB_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockSubPort(Boolean lockSubPort) {
    this.lockSubPort = lockSubPort;
  }


  public UpdateSupportType3LogicalPortRequestData cDataSourceId(String cDataSourceId) {
    
    this.cDataSourceId = cDataSourceId;
    return this;
  }

   /**
   * Get cDataSourceId
   * @return cDataSourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSourceId() {
    return cDataSourceId;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSourceId(String cDataSourceId) {
    this.cDataSourceId = cDataSourceId;
  }


  public UpdateSupportType3LogicalPortRequestData contextId(String contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextId() {
    return contextId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextId(String contextId) {
    this.contextId = contextId;
  }


  public UpdateSupportType3LogicalPortRequestData portCategory(String portCategory) {
    
    this.portCategory = portCategory;
    return this;
  }

   /**
   * Get portCategory
   * @return portCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortCategory() {
    return portCategory;
  }


  @JsonProperty(JSON_PROPERTY_PORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortCategory(String portCategory) {
    this.portCategory = portCategory;
  }


  public UpdateSupportType3LogicalPortRequestData portStatus(String portStatus) {
    
    this.portStatus = portStatus;
    return this;
  }

   /**
   * Get portStatus
   * @return portStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortStatus() {
    return portStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortStatus(String portStatus) {
    this.portStatus = portStatus;
  }


  public UpdateSupportType3LogicalPortRequestData txBlockFlag(Boolean txBlockFlag) {
    
    this.txBlockFlag = txBlockFlag;
    return this;
  }

   /**
   * Get txBlockFlag
   * @return txBlockFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTxBlockFlag() {
    return txBlockFlag;
  }


  @JsonProperty(JSON_PROPERTY_TX_BLOCK_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxBlockFlag(Boolean txBlockFlag) {
    this.txBlockFlag = txBlockFlag;
  }


  public UpdateSupportType3LogicalPortRequestData portType(String portType) {
    
    this.portType = portType;
    return this;
  }

   /**
   * Get portType
   * @return portType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortType() {
    return portType;
  }


  @JsonProperty(JSON_PROPERTY_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortType(String portType) {
    this.portType = portType;
  }


  public UpdateSupportType3LogicalPortRequestData portNo(BigDecimal portNo) {
    
    this.portNo = portNo;
    return this;
  }

   /**
   * Get portNo
   * @return portNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPortNo() {
    return portNo;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNo(BigDecimal portNo) {
    this.portNo = portNo;
  }


  public UpdateSupportType3LogicalPortRequestData cDataSource(String cDataSource) {
    
    this.cDataSource = cDataSource;
    return this;
  }

   /**
   * Get cDataSource
   * @return cDataSource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getcDataSource() {
    return cDataSource;
  }


  @JsonProperty(JSON_PROPERTY_C_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcDataSource(String cDataSource) {
    this.cDataSource = cDataSource;
  }


  public UpdateSupportType3LogicalPortRequestData atm(Boolean atm) {
    
    this.atm = atm;
    return this;
  }

   /**
   * Get atm
   * @return atm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAtm() {
    return atm;
  }


  @JsonProperty(JSON_PROPERTY_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtm(Boolean atm) {
    this.atm = atm;
  }


  public UpdateSupportType3LogicalPortRequestData portFunction(String portFunction) {
    
    this.portFunction = portFunction;
    return this;
  }

   /**
   * Get portFunction
   * @return portFunction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortFunction() {
    return portFunction;
  }


  @JsonProperty(JSON_PROPERTY_PORT_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortFunction(String portFunction) {
    this.portFunction = portFunction;
  }


  public UpdateSupportType3LogicalPortRequestData portNameOrg(String portNameOrg) {
    
    this.portNameOrg = portNameOrg;
    return this;
  }

   /**
   * Get portNameOrg
   * @return portNameOrg
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortNameOrg() {
    return portNameOrg;
  }


  @JsonProperty(JSON_PROPERTY_PORT_NAME_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortNameOrg(String portNameOrg) {
    this.portNameOrg = portNameOrg;
  }


  public UpdateSupportType3LogicalPortRequestData ima(Boolean ima) {
    
    this.ima = ima;
    return this;
  }

   /**
   * Get ima
   * @return ima
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIma() {
    return ima;
  }


  @JsonProperty(JSON_PROPERTY_IMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIma(Boolean ima) {
    this.ima = ima;
  }


  public UpdateSupportType3LogicalPortRequestData signalRate(String signalRate) {
    
    this.signalRate = signalRate;
    return this;
  }

   /**
   * Get signalRate
   * @return signalRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignalRate() {
    return signalRate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignalRate(String signalRate) {
    this.signalRate = signalRate;
  }


  public UpdateSupportType3LogicalPortRequestData activeFrom(DateTime activeFrom) {
    
    this.activeFrom = activeFrom;
    return this;
  }

   /**
   * Get activeFrom
   * @return activeFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveFrom() {
    return activeFrom;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFrom(DateTime activeFrom) {
    this.activeFrom = activeFrom;
  }


  public UpdateSupportType3LogicalPortRequestData activeUntil(DateTime activeUntil) {
    
    this.activeUntil = activeUntil;
    return this;
  }

   /**
   * Get activeUntil
   * @return activeUntil
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTime getActiveUntil() {
    return activeUntil;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveUntil(DateTime activeUntil) {
    this.activeUntil = activeUntil;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkContract(List<UpdateSupportType3LogicalPortCreateLinkContractRequestData> createLinkContract) {
    
    this.createLinkContract = createLinkContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkContractItem(UpdateSupportType3LogicalPortCreateLinkContractRequestData createLinkContractItem) {
    if (this.createLinkContract == null) {
      this.createLinkContract = new ArrayList<>();
    }
    this.createLinkContract.add(createLinkContractItem);
    return this;
  }

   /**
   * Get createLinkContract
   * @return createLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkContractRequestData> getCreateLinkContract() {
    return createLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkContract(List<UpdateSupportType3LogicalPortCreateLinkContractRequestData> createLinkContract) {
    this.createLinkContract = createLinkContract;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkCustomIpaccessSvc(UpdateSupportType3LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
    return this;
  }

   /**
   * Get createLinkCustomIpaccessSvc
   * @return createLinkCustomIpaccessSvc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType3LogicalPortCreateLinkCustomIpaccessSvcRequestData getCreateLinkCustomIpaccessSvc() {
    return createLinkCustomIpaccessSvc;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_IPACCESS_SVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomIpaccessSvc(UpdateSupportType3LogicalPortCreateLinkCustomIpaccessSvcRequestData createLinkCustomIpaccessSvc) {
    this.createLinkCustomIpaccessSvc = createLinkCustomIpaccessSvc;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkCustomSvid(UpdateSupportType3LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid) {
    
    this.createLinkCustomSvid = createLinkCustomSvid;
    return this;
  }

   /**
   * Get createLinkCustomSvid
   * @return createLinkCustomSvid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType3LogicalPortCreateLinkCustomSvidRequestData getCreateLinkCustomSvid() {
    return createLinkCustomSvid;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_SVID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomSvid(UpdateSupportType3LogicalPortCreateLinkCustomSvidRequestData createLinkCustomSvid) {
    this.createLinkCustomSvid = createLinkCustomSvid;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkCustomTcoInterconnect(UpdateSupportType3LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get createLinkCustomTcoInterconnect
   * @return createLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType3LogicalPortCreateLinkCustomTcoInterconnectRequestData getCreateLinkCustomTcoInterconnect() {
    return createLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkCustomTcoInterconnect(UpdateSupportType3LogicalPortCreateLinkCustomTcoInterconnectRequestData createLinkCustomTcoInterconnect) {
    this.createLinkCustomTcoInterconnect = createLinkCustomTcoInterconnect;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkFrameContract(List<UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    
    this.createLinkFrameContract = createLinkFrameContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkFrameContractItem(UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData createLinkFrameContractItem) {
    if (this.createLinkFrameContract == null) {
      this.createLinkFrameContract = new ArrayList<>();
    }
    this.createLinkFrameContract.add(createLinkFrameContractItem);
    return this;
  }

   /**
   * Get createLinkFrameContract
   * @return createLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData> getCreateLinkFrameContract() {
    return createLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkFrameContract(List<UpdateSupportType3LogicalPortCreateLinkFrameContractRequestData> createLinkFrameContract) {
    this.createLinkFrameContract = createLinkFrameContract;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkLogicalPort(List<UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort) {
    
    this.createLinkLogicalPort = createLinkLogicalPort;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkLogicalPortItem(UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData createLinkLogicalPortItem) {
    if (this.createLinkLogicalPort == null) {
      this.createLinkLogicalPort = new ArrayList<>();
    }
    this.createLinkLogicalPort.add(createLinkLogicalPortItem);
    return this;
  }

   /**
   * Get createLinkLogicalPort
   * @return createLinkLogicalPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData> getCreateLinkLogicalPort() {
    return createLinkLogicalPort;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkLogicalPort(List<UpdateSupportType3LogicalPortCreateLinkLogicalPortRequestData> createLinkLogicalPort) {
    this.createLinkLogicalPort = createLinkLogicalPort;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkMaintenanceContract(List<UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkMaintenanceContractItem(UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData createLinkMaintenanceContractItem) {
    if (this.createLinkMaintenanceContract == null) {
      this.createLinkMaintenanceContract = new ArrayList<>();
    }
    this.createLinkMaintenanceContract.add(createLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get createLinkMaintenanceContract
   * @return createLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData> getCreateLinkMaintenanceContract() {
    return createLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkMaintenanceContract(List<UpdateSupportType3LogicalPortCreateLinkMaintenanceContractRequestData> createLinkMaintenanceContract) {
    this.createLinkMaintenanceContract = createLinkMaintenanceContract;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkOrganization(List<UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    
    this.createLinkOrganization = createLinkOrganization;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkOrganizationItem(UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData createLinkOrganizationItem) {
    if (this.createLinkOrganization == null) {
      this.createLinkOrganization = new ArrayList<>();
    }
    this.createLinkOrganization.add(createLinkOrganizationItem);
    return this;
  }

   /**
   * Get createLinkOrganization
   * @return createLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData> getCreateLinkOrganization() {
    return createLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkOrganization(List<UpdateSupportType3LogicalPortCreateLinkOrganizationRequestData> createLinkOrganization) {
    this.createLinkOrganization = createLinkOrganization;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkPerson(List<UpdateSupportType3LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    
    this.createLinkPerson = createLinkPerson;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkPersonItem(UpdateSupportType3LogicalPortCreateLinkPersonRequestData createLinkPersonItem) {
    if (this.createLinkPerson == null) {
      this.createLinkPerson = new ArrayList<>();
    }
    this.createLinkPerson.add(createLinkPersonItem);
    return this;
  }

   /**
   * Get createLinkPerson
   * @return createLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkPersonRequestData> getCreateLinkPerson() {
    return createLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPerson(List<UpdateSupportType3LogicalPortCreateLinkPersonRequestData> createLinkPerson) {
    this.createLinkPerson = createLinkPerson;
  }


  public UpdateSupportType3LogicalPortRequestData createLinkPersonGroup(List<UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    
    this.createLinkPersonGroup = createLinkPersonGroup;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addCreateLinkPersonGroupItem(UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData createLinkPersonGroupItem) {
    if (this.createLinkPersonGroup == null) {
      this.createLinkPersonGroup = new ArrayList<>();
    }
    this.createLinkPersonGroup.add(createLinkPersonGroupItem);
    return this;
  }

   /**
   * Get createLinkPersonGroup
   * @return createLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData> getCreateLinkPersonGroup() {
    return createLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateLinkPersonGroup(List<UpdateSupportType3LogicalPortCreateLinkPersonGroupRequestData> createLinkPersonGroup) {
    this.createLinkPersonGroup = createLinkPersonGroup;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkContract(List<UpdateSupportType3LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    
    this.deleteLinkContract = deleteLinkContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkContractItem(UpdateSupportType3LogicalPortDeleteLinkContractRequestData deleteLinkContractItem) {
    if (this.deleteLinkContract == null) {
      this.deleteLinkContract = new ArrayList<>();
    }
    this.deleteLinkContract.add(deleteLinkContractItem);
    return this;
  }

   /**
   * Get deleteLinkContract
   * @return deleteLinkContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkContractRequestData> getDeleteLinkContract() {
    return deleteLinkContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkContract(List<UpdateSupportType3LogicalPortDeleteLinkContractRequestData> deleteLinkContract) {
    this.deleteLinkContract = deleteLinkContract;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkFrameContract(List<UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    
    this.deleteLinkFrameContract = deleteLinkFrameContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkFrameContractItem(UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData deleteLinkFrameContractItem) {
    if (this.deleteLinkFrameContract == null) {
      this.deleteLinkFrameContract = new ArrayList<>();
    }
    this.deleteLinkFrameContract.add(deleteLinkFrameContractItem);
    return this;
  }

   /**
   * Get deleteLinkFrameContract
   * @return deleteLinkFrameContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData> getDeleteLinkFrameContract() {
    return deleteLinkFrameContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_FRAME_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkFrameContract(List<UpdateSupportType3LogicalPortDeleteLinkFrameContractRequestData> deleteLinkFrameContract) {
    this.deleteLinkFrameContract = deleteLinkFrameContract;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkLogicalPort(List<UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort) {
    
    this.deleteLinkLogicalPort = deleteLinkLogicalPort;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkLogicalPortItem(UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData deleteLinkLogicalPortItem) {
    if (this.deleteLinkLogicalPort == null) {
      this.deleteLinkLogicalPort = new ArrayList<>();
    }
    this.deleteLinkLogicalPort.add(deleteLinkLogicalPortItem);
    return this;
  }

   /**
   * Get deleteLinkLogicalPort
   * @return deleteLinkLogicalPort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData> getDeleteLinkLogicalPort() {
    return deleteLinkLogicalPort;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_LOGICAL_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkLogicalPort(List<UpdateSupportType3LogicalPortDeleteLinkLogicalPortRequestData> deleteLinkLogicalPort) {
    this.deleteLinkLogicalPort = deleteLinkLogicalPort;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkMaintenanceContract(List<UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkMaintenanceContractItem(UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData deleteLinkMaintenanceContractItem) {
    if (this.deleteLinkMaintenanceContract == null) {
      this.deleteLinkMaintenanceContract = new ArrayList<>();
    }
    this.deleteLinkMaintenanceContract.add(deleteLinkMaintenanceContractItem);
    return this;
  }

   /**
   * Get deleteLinkMaintenanceContract
   * @return deleteLinkMaintenanceContract
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData> getDeleteLinkMaintenanceContract() {
    return deleteLinkMaintenanceContract;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_MAINTENANCE_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkMaintenanceContract(List<UpdateSupportType3LogicalPortDeleteLinkMaintenanceContractRequestData> deleteLinkMaintenanceContract) {
    this.deleteLinkMaintenanceContract = deleteLinkMaintenanceContract;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkOrganization(List<UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    
    this.deleteLinkOrganization = deleteLinkOrganization;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkOrganizationItem(UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData deleteLinkOrganizationItem) {
    if (this.deleteLinkOrganization == null) {
      this.deleteLinkOrganization = new ArrayList<>();
    }
    this.deleteLinkOrganization.add(deleteLinkOrganizationItem);
    return this;
  }

   /**
   * Get deleteLinkOrganization
   * @return deleteLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData> getDeleteLinkOrganization() {
    return deleteLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkOrganization(List<UpdateSupportType3LogicalPortDeleteLinkOrganizationRequestData> deleteLinkOrganization) {
    this.deleteLinkOrganization = deleteLinkOrganization;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkPerson(List<UpdateSupportType3LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    
    this.deleteLinkPerson = deleteLinkPerson;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkPersonItem(UpdateSupportType3LogicalPortDeleteLinkPersonRequestData deleteLinkPersonItem) {
    if (this.deleteLinkPerson == null) {
      this.deleteLinkPerson = new ArrayList<>();
    }
    this.deleteLinkPerson.add(deleteLinkPersonItem);
    return this;
  }

   /**
   * Get deleteLinkPerson
   * @return deleteLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkPersonRequestData> getDeleteLinkPerson() {
    return deleteLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPerson(List<UpdateSupportType3LogicalPortDeleteLinkPersonRequestData> deleteLinkPerson) {
    this.deleteLinkPerson = deleteLinkPerson;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkPersonGroup(List<UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkPersonGroupItem(UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData deleteLinkPersonGroupItem) {
    if (this.deleteLinkPersonGroup == null) {
      this.deleteLinkPersonGroup = new ArrayList<>();
    }
    this.deleteLinkPersonGroup.add(deleteLinkPersonGroupItem);
    return this;
  }

   /**
   * Get deleteLinkPersonGroup
   * @return deleteLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData> getDeleteLinkPersonGroup() {
    return deleteLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkPersonGroup(List<UpdateSupportType3LogicalPortDeleteLinkPersonGroupRequestData> deleteLinkPersonGroup) {
    this.deleteLinkPersonGroup = deleteLinkPersonGroup;
  }


  public UpdateSupportType3LogicalPortRequestData deleteLinkSubdividedPorts(List<UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addDeleteLinkSubdividedPortsItem(UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData deleteLinkSubdividedPortsItem) {
    if (this.deleteLinkSubdividedPorts == null) {
      this.deleteLinkSubdividedPorts = new ArrayList<>();
    }
    this.deleteLinkSubdividedPorts.add(deleteLinkSubdividedPortsItem);
    return this;
  }

   /**
   * Get deleteLinkSubdividedPorts
   * @return deleteLinkSubdividedPorts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData> getDeleteLinkSubdividedPorts() {
    return deleteLinkSubdividedPorts;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_LINK_SUBDIVIDED_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteLinkSubdividedPorts(List<UpdateSupportType3LogicalPortDeleteLinkSubdividedPortsRequestData> deleteLinkSubdividedPorts) {
    this.deleteLinkSubdividedPorts = deleteLinkSubdividedPorts;
  }


  public UpdateSupportType3LogicalPortRequestData updateLinkCustomTcoInterconnect(UpdateSupportType3LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
    return this;
  }

   /**
   * Get updateLinkCustomTcoInterconnect
   * @return updateLinkCustomTcoInterconnect
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateSupportType3LogicalPortUpdateLinkCustomTcoInterconnectRequestData getUpdateLinkCustomTcoInterconnect() {
    return updateLinkCustomTcoInterconnect;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_CUSTOM_TCO_INTERCONNECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkCustomTcoInterconnect(UpdateSupportType3LogicalPortUpdateLinkCustomTcoInterconnectRequestData updateLinkCustomTcoInterconnect) {
    this.updateLinkCustomTcoInterconnect = updateLinkCustomTcoInterconnect;
  }


  public UpdateSupportType3LogicalPortRequestData updateLinkOrganization(List<UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    
    this.updateLinkOrganization = updateLinkOrganization;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addUpdateLinkOrganizationItem(UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData updateLinkOrganizationItem) {
    if (this.updateLinkOrganization == null) {
      this.updateLinkOrganization = new ArrayList<>();
    }
    this.updateLinkOrganization.add(updateLinkOrganizationItem);
    return this;
  }

   /**
   * Get updateLinkOrganization
   * @return updateLinkOrganization
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData> getUpdateLinkOrganization() {
    return updateLinkOrganization;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkOrganization(List<UpdateSupportType3LogicalPortUpdateLinkOrganizationRequestData> updateLinkOrganization) {
    this.updateLinkOrganization = updateLinkOrganization;
  }


  public UpdateSupportType3LogicalPortRequestData updateLinkPerson(List<UpdateSupportType3LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    
    this.updateLinkPerson = updateLinkPerson;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addUpdateLinkPersonItem(UpdateSupportType3LogicalPortUpdateLinkPersonRequestData updateLinkPersonItem) {
    if (this.updateLinkPerson == null) {
      this.updateLinkPerson = new ArrayList<>();
    }
    this.updateLinkPerson.add(updateLinkPersonItem);
    return this;
  }

   /**
   * Get updateLinkPerson
   * @return updateLinkPerson
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortUpdateLinkPersonRequestData> getUpdateLinkPerson() {
    return updateLinkPerson;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPerson(List<UpdateSupportType3LogicalPortUpdateLinkPersonRequestData> updateLinkPerson) {
    this.updateLinkPerson = updateLinkPerson;
  }


  public UpdateSupportType3LogicalPortRequestData updateLinkPersonGroup(List<UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    
    this.updateLinkPersonGroup = updateLinkPersonGroup;
    return this;
  }

  public UpdateSupportType3LogicalPortRequestData addUpdateLinkPersonGroupItem(UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData updateLinkPersonGroupItem) {
    if (this.updateLinkPersonGroup == null) {
      this.updateLinkPersonGroup = new ArrayList<>();
    }
    this.updateLinkPersonGroup.add(updateLinkPersonGroupItem);
    return this;
  }

   /**
   * Get updateLinkPersonGroup
   * @return updateLinkPersonGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData> getUpdateLinkPersonGroup() {
    return updateLinkPersonGroup;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_LINK_PERSON_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateLinkPersonGroup(List<UpdateSupportType3LogicalPortUpdateLinkPersonGroupRequestData> updateLinkPersonGroup) {
    this.updateLinkPersonGroup = updateLinkPersonGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSupportType3LogicalPortRequestData updateSupportType3LogicalPortRequestData = (UpdateSupportType3LogicalPortRequestData) o;
    return Objects.equals(this.nominalUtilization, updateSupportType3LogicalPortRequestData.nominalUtilization) &&
        Objects.equals(this.sourceId, updateSupportType3LogicalPortRequestData.sourceId) &&
        Objects.equals(this.cDataSourceDeleted, updateSupportType3LogicalPortRequestData.cDataSourceDeleted) &&
        Objects.equals(this.cServiceSide, updateSupportType3LogicalPortRequestData.cServiceSide) &&
        Objects.equals(this.overloadWarning, updateSupportType3LogicalPortRequestData.overloadWarning) &&
        Objects.equals(this.rxBlockFlag, updateSupportType3LogicalPortRequestData.rxBlockFlag) &&
        Objects.equals(this.bandwidth, updateSupportType3LogicalPortRequestData.bandwidth) &&
        Objects.equals(this.sourceSystem, updateSupportType3LogicalPortRequestData.sourceSystem) &&
        Objects.equals(this.lockSubPort, updateSupportType3LogicalPortRequestData.lockSubPort) &&
        Objects.equals(this.cDataSourceId, updateSupportType3LogicalPortRequestData.cDataSourceId) &&
        Objects.equals(this.contextId, updateSupportType3LogicalPortRequestData.contextId) &&
        Objects.equals(this.portCategory, updateSupportType3LogicalPortRequestData.portCategory) &&
        Objects.equals(this.portStatus, updateSupportType3LogicalPortRequestData.portStatus) &&
        Objects.equals(this.txBlockFlag, updateSupportType3LogicalPortRequestData.txBlockFlag) &&
        Objects.equals(this.portType, updateSupportType3LogicalPortRequestData.portType) &&
        Objects.equals(this.portNo, updateSupportType3LogicalPortRequestData.portNo) &&
        Objects.equals(this.cDataSource, updateSupportType3LogicalPortRequestData.cDataSource) &&
        Objects.equals(this.atm, updateSupportType3LogicalPortRequestData.atm) &&
        Objects.equals(this.portFunction, updateSupportType3LogicalPortRequestData.portFunction) &&
        Objects.equals(this.portNameOrg, updateSupportType3LogicalPortRequestData.portNameOrg) &&
        Objects.equals(this.ima, updateSupportType3LogicalPortRequestData.ima) &&
        Objects.equals(this.signalRate, updateSupportType3LogicalPortRequestData.signalRate) &&
        Objects.equals(this.activeFrom, updateSupportType3LogicalPortRequestData.activeFrom) &&
        Objects.equals(this.activeUntil, updateSupportType3LogicalPortRequestData.activeUntil) &&
        Objects.equals(this.createLinkContract, updateSupportType3LogicalPortRequestData.createLinkContract) &&
        Objects.equals(this.createLinkCustomIpaccessSvc, updateSupportType3LogicalPortRequestData.createLinkCustomIpaccessSvc) &&
        Objects.equals(this.createLinkCustomSvid, updateSupportType3LogicalPortRequestData.createLinkCustomSvid) &&
        Objects.equals(this.createLinkCustomTcoInterconnect, updateSupportType3LogicalPortRequestData.createLinkCustomTcoInterconnect) &&
        Objects.equals(this.createLinkFrameContract, updateSupportType3LogicalPortRequestData.createLinkFrameContract) &&
        Objects.equals(this.createLinkLogicalPort, updateSupportType3LogicalPortRequestData.createLinkLogicalPort) &&
        Objects.equals(this.createLinkMaintenanceContract, updateSupportType3LogicalPortRequestData.createLinkMaintenanceContract) &&
        Objects.equals(this.createLinkOrganization, updateSupportType3LogicalPortRequestData.createLinkOrganization) &&
        Objects.equals(this.createLinkPerson, updateSupportType3LogicalPortRequestData.createLinkPerson) &&
        Objects.equals(this.createLinkPersonGroup, updateSupportType3LogicalPortRequestData.createLinkPersonGroup) &&
        Objects.equals(this.deleteLinkContract, updateSupportType3LogicalPortRequestData.deleteLinkContract) &&
        Objects.equals(this.deleteLinkFrameContract, updateSupportType3LogicalPortRequestData.deleteLinkFrameContract) &&
        Objects.equals(this.deleteLinkLogicalPort, updateSupportType3LogicalPortRequestData.deleteLinkLogicalPort) &&
        Objects.equals(this.deleteLinkMaintenanceContract, updateSupportType3LogicalPortRequestData.deleteLinkMaintenanceContract) &&
        Objects.equals(this.deleteLinkOrganization, updateSupportType3LogicalPortRequestData.deleteLinkOrganization) &&
        Objects.equals(this.deleteLinkPerson, updateSupportType3LogicalPortRequestData.deleteLinkPerson) &&
        Objects.equals(this.deleteLinkPersonGroup, updateSupportType3LogicalPortRequestData.deleteLinkPersonGroup) &&
        Objects.equals(this.deleteLinkSubdividedPorts, updateSupportType3LogicalPortRequestData.deleteLinkSubdividedPorts) &&
        Objects.equals(this.updateLinkCustomTcoInterconnect, updateSupportType3LogicalPortRequestData.updateLinkCustomTcoInterconnect) &&
        Objects.equals(this.updateLinkOrganization, updateSupportType3LogicalPortRequestData.updateLinkOrganization) &&
        Objects.equals(this.updateLinkPerson, updateSupportType3LogicalPortRequestData.updateLinkPerson) &&
        Objects.equals(this.updateLinkPersonGroup, updateSupportType3LogicalPortRequestData.updateLinkPersonGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nominalUtilization, sourceId, cDataSourceDeleted, cServiceSide, overloadWarning, rxBlockFlag, bandwidth, sourceSystem, lockSubPort, cDataSourceId, contextId, portCategory, portStatus, txBlockFlag, portType, portNo, cDataSource, atm, portFunction, portNameOrg, ima, signalRate, activeFrom, activeUntil, createLinkContract, createLinkCustomIpaccessSvc, createLinkCustomSvid, createLinkCustomTcoInterconnect, createLinkFrameContract, createLinkLogicalPort, createLinkMaintenanceContract, createLinkOrganization, createLinkPerson, createLinkPersonGroup, deleteLinkContract, deleteLinkFrameContract, deleteLinkLogicalPort, deleteLinkMaintenanceContract, deleteLinkOrganization, deleteLinkPerson, deleteLinkPersonGroup, deleteLinkSubdividedPorts, updateLinkCustomTcoInterconnect, updateLinkOrganization, updateLinkPerson, updateLinkPersonGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSupportType3LogicalPortRequestData {\n");
    sb.append("    nominalUtilization: ").append(toIndentedString(nominalUtilization)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    cDataSourceDeleted: ").append(toIndentedString(cDataSourceDeleted)).append("\n");
    sb.append("    cServiceSide: ").append(toIndentedString(cServiceSide)).append("\n");
    sb.append("    overloadWarning: ").append(toIndentedString(overloadWarning)).append("\n");
    sb.append("    rxBlockFlag: ").append(toIndentedString(rxBlockFlag)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    sourceSystem: ").append(toIndentedString(sourceSystem)).append("\n");
    sb.append("    lockSubPort: ").append(toIndentedString(lockSubPort)).append("\n");
    sb.append("    cDataSourceId: ").append(toIndentedString(cDataSourceId)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    portCategory: ").append(toIndentedString(portCategory)).append("\n");
    sb.append("    portStatus: ").append(toIndentedString(portStatus)).append("\n");
    sb.append("    txBlockFlag: ").append(toIndentedString(txBlockFlag)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    portNo: ").append(toIndentedString(portNo)).append("\n");
    sb.append("    cDataSource: ").append(toIndentedString(cDataSource)).append("\n");
    sb.append("    atm: ").append(toIndentedString(atm)).append("\n");
    sb.append("    portFunction: ").append(toIndentedString(portFunction)).append("\n");
    sb.append("    portNameOrg: ").append(toIndentedString(portNameOrg)).append("\n");
    sb.append("    ima: ").append(toIndentedString(ima)).append("\n");
    sb.append("    signalRate: ").append(toIndentedString(signalRate)).append("\n");
    sb.append("    activeFrom: ").append(toIndentedString(activeFrom)).append("\n");
    sb.append("    activeUntil: ").append(toIndentedString(activeUntil)).append("\n");
    sb.append("    createLinkContract: ").append(toIndentedString(createLinkContract)).append("\n");
    sb.append("    createLinkCustomIpaccessSvc: ").append(toIndentedString(createLinkCustomIpaccessSvc)).append("\n");
    sb.append("    createLinkCustomSvid: ").append(toIndentedString(createLinkCustomSvid)).append("\n");
    sb.append("    createLinkCustomTcoInterconnect: ").append(toIndentedString(createLinkCustomTcoInterconnect)).append("\n");
    sb.append("    createLinkFrameContract: ").append(toIndentedString(createLinkFrameContract)).append("\n");
    sb.append("    createLinkLogicalPort: ").append(toIndentedString(createLinkLogicalPort)).append("\n");
    sb.append("    createLinkMaintenanceContract: ").append(toIndentedString(createLinkMaintenanceContract)).append("\n");
    sb.append("    createLinkOrganization: ").append(toIndentedString(createLinkOrganization)).append("\n");
    sb.append("    createLinkPerson: ").append(toIndentedString(createLinkPerson)).append("\n");
    sb.append("    createLinkPersonGroup: ").append(toIndentedString(createLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkContract: ").append(toIndentedString(deleteLinkContract)).append("\n");
    sb.append("    deleteLinkFrameContract: ").append(toIndentedString(deleteLinkFrameContract)).append("\n");
    sb.append("    deleteLinkLogicalPort: ").append(toIndentedString(deleteLinkLogicalPort)).append("\n");
    sb.append("    deleteLinkMaintenanceContract: ").append(toIndentedString(deleteLinkMaintenanceContract)).append("\n");
    sb.append("    deleteLinkOrganization: ").append(toIndentedString(deleteLinkOrganization)).append("\n");
    sb.append("    deleteLinkPerson: ").append(toIndentedString(deleteLinkPerson)).append("\n");
    sb.append("    deleteLinkPersonGroup: ").append(toIndentedString(deleteLinkPersonGroup)).append("\n");
    sb.append("    deleteLinkSubdividedPorts: ").append(toIndentedString(deleteLinkSubdividedPorts)).append("\n");
    sb.append("    updateLinkCustomTcoInterconnect: ").append(toIndentedString(updateLinkCustomTcoInterconnect)).append("\n");
    sb.append("    updateLinkOrganization: ").append(toIndentedString(updateLinkOrganization)).append("\n");
    sb.append("    updateLinkPerson: ").append(toIndentedString(updateLinkPerson)).append("\n");
    sb.append("    updateLinkPersonGroup: ").append(toIndentedString(updateLinkPersonGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

