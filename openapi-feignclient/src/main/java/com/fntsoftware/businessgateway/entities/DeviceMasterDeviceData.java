/*
 * Swagger for Command BGE
 * Swagger API for FNT Command Business Gateway
 *
 * The version of the OpenAPI document: 20240131110751
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fntsoftware.businessgateway.entities;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeviceMasterDeviceData
 */
@JsonPropertyOrder({
  DeviceMasterDeviceData.JSON_PROPERTY_NETWORK_DEVICE,
  DeviceMasterDeviceData.JSON_PROPERTY_HEAT_EMISSION_EXPERIENCE,
  DeviceMasterDeviceData.JSON_PROPERTY_DIRECTOR_TYPE,
  DeviceMasterDeviceData.JSON_PROPERTY_ID_PREFIX,
  DeviceMasterDeviceData.JSON_PROPERTY_USED,
  DeviceMasterDeviceData.JSON_PROPERTY_EXPLANATION,
  DeviceMasterDeviceData.JSON_PROPERTY_TYPE,
  DeviceMasterDeviceData.JSON_PROPERTY_MANUFACTURER,
  DeviceMasterDeviceData.JSON_PROPERTY_NOMINAL_CURRENT,
  DeviceMasterDeviceData.JSON_PROPERTY_DEVICE_FROM_WAREHOUSE,
  DeviceMasterDeviceData.JSON_PROPERTY_DEVICE_TO_WAREHOUSE,
  DeviceMasterDeviceData.JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD,
  DeviceMasterDeviceData.JSON_PROPERTY_POWER_EFFICIENCY,
  DeviceMasterDeviceData.JSON_PROPERTY_FUNCTION,
  DeviceMasterDeviceData.JSON_PROPERTY_CLIMATE_CATEGORY,
  DeviceMasterDeviceData.JSON_PROPERTY_POWER_CATEGORY,
  DeviceMasterDeviceData.JSON_PROPERTY_NETWORK_CATEGORY,
  DeviceMasterDeviceData.JSON_PROPERTY_GRAPHIC,
  DeviceMasterDeviceData.JSON_PROPERTY_CLIMATE_RELEVANT,
  DeviceMasterDeviceData.JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER,
  DeviceMasterDeviceData.JSON_PROPERTY_DIMENSION_DEPTH,
  DeviceMasterDeviceData.JSON_PROPERTY_DIMENSION_HEIGHT,
  DeviceMasterDeviceData.JSON_PROPERTY_POWER_CONSUMPTION,
  DeviceMasterDeviceData.JSON_PROPERTY_WEIGHT,
  DeviceMasterDeviceData.JSON_PROPERTY_DIMENSION_WIDTH,
  DeviceMasterDeviceData.JSON_PROPERTY_TC_SYMBOLIC,
  DeviceMasterDeviceData.JSON_PROPERTY_DATA_CENTER_DEVICE,
  DeviceMasterDeviceData.JSON_PROPERTY_ELID,
  DeviceMasterDeviceData.JSON_PROPERTY_POWER_CONSUMPTION_EXPERIENCE,
  DeviceMasterDeviceData.JSON_PROPERTY_IS_SPLITTER,
  DeviceMasterDeviceData.JSON_PROPERTY_IS_STANDARD,
  DeviceMasterDeviceData.JSON_PROPERTY_CLIMATE_CAPACITY,
  DeviceMasterDeviceData.JSON_PROPERTY_COUNT_START_NO,
  DeviceMasterDeviceData.JSON_PROPERTY_COOLER,
  DeviceMasterDeviceData.JSON_PROPERTY_COAX_DEVICE,
  DeviceMasterDeviceData.JSON_PROPERTY_CLIMATE_CAPACITY_EXPERIENCE,
  DeviceMasterDeviceData.JSON_PROPERTY_COUNT_TYPE,
  DeviceMasterDeviceData.JSON_PROPERTY_IS_CARD,
  DeviceMasterDeviceData.JSON_PROPERTY_HEAT_EMISSION,
  DeviceMasterDeviceData.JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC,
  DeviceMasterDeviceData.JSON_PROPERTY_OBJMGMT_ON_CREATE
})
@JsonTypeName("deviceMasterDeviceData")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T11:10:37.320689708Z[Etc/UTC]")
public class DeviceMasterDeviceData {
  public static final String JSON_PROPERTY_NETWORK_DEVICE = "networkDevice";
  private String networkDevice;

  public static final String JSON_PROPERTY_HEAT_EMISSION_EXPERIENCE = "heatEmissionExperience";
  private BigDecimal heatEmissionExperience;

  public static final String JSON_PROPERTY_DIRECTOR_TYPE = "directorType";
  private String directorType;

  public static final String JSON_PROPERTY_ID_PREFIX = "idPrefix";
  private String idPrefix;

  public static final String JSON_PROPERTY_USED = "used";
  private Boolean used;

  public static final String JSON_PROPERTY_EXPLANATION = "explanation";
  private String explanation;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  public static final String JSON_PROPERTY_NOMINAL_CURRENT = "nominalCurrent";
  private BigDecimal nominalCurrent;

  public static final String JSON_PROPERTY_DEVICE_FROM_WAREHOUSE = "deviceFromWarehouse";
  private Boolean deviceFromWarehouse;

  public static final String JSON_PROPERTY_DEVICE_TO_WAREHOUSE = "deviceToWarehouse";
  private Boolean deviceToWarehouse;

  public static final String JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD = "nominalCurrentThreshold";
  private BigDecimal nominalCurrentThreshold;

  public static final String JSON_PROPERTY_POWER_EFFICIENCY = "powerEfficiency";
  private BigDecimal powerEfficiency;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_CLIMATE_CATEGORY = "climateCategory";
  private String climateCategory;

  public static final String JSON_PROPERTY_POWER_CATEGORY = "powerCategory";
  private String powerCategory;

  public static final String JSON_PROPERTY_NETWORK_CATEGORY = "networkCategory";
  private String networkCategory;

  public static final String JSON_PROPERTY_GRAPHIC = "graphic";
  private Boolean graphic;

  public static final String JSON_PROPERTY_CLIMATE_RELEVANT = "climateRelevant";
  private Boolean climateRelevant;

  public static final String JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER = "manufacturerArticleNumber";
  private String manufacturerArticleNumber;

  public static final String JSON_PROPERTY_DIMENSION_DEPTH = "dimensionDepth";
  private BigDecimal dimensionDepth;

  public static final String JSON_PROPERTY_DIMENSION_HEIGHT = "dimensionHeight";
  private BigDecimal dimensionHeight;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION = "powerConsumption";
  private BigDecimal powerConsumption;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private BigDecimal weight;

  public static final String JSON_PROPERTY_DIMENSION_WIDTH = "dimensionWidth";
  private BigDecimal dimensionWidth;

  public static final String JSON_PROPERTY_TC_SYMBOLIC = "tcSymbolic";
  private Boolean tcSymbolic;

  public static final String JSON_PROPERTY_DATA_CENTER_DEVICE = "dataCenterDevice";
  private Boolean dataCenterDevice;

  public static final String JSON_PROPERTY_ELID = "elid";
  private String elid;

  public static final String JSON_PROPERTY_POWER_CONSUMPTION_EXPERIENCE = "powerConsumptionExperience";
  private BigDecimal powerConsumptionExperience;

  public static final String JSON_PROPERTY_IS_SPLITTER = "isSplitter";
  private Boolean isSplitter;

  public static final String JSON_PROPERTY_IS_STANDARD = "isStandard";
  private Boolean isStandard;

  public static final String JSON_PROPERTY_CLIMATE_CAPACITY = "climateCapacity";
  private BigDecimal climateCapacity;

  public static final String JSON_PROPERTY_COUNT_START_NO = "countStartNo";
  private BigDecimal countStartNo;

  public static final String JSON_PROPERTY_COOLER = "cooler";
  private Boolean cooler;

  public static final String JSON_PROPERTY_COAX_DEVICE = "coaxDevice";
  private Boolean coaxDevice;

  public static final String JSON_PROPERTY_CLIMATE_CAPACITY_EXPERIENCE = "climateCapacityExperience";
  private BigDecimal climateCapacityExperience;

  public static final String JSON_PROPERTY_COUNT_TYPE = "countType";
  private String countType;

  public static final String JSON_PROPERTY_IS_CARD = "isCard";
  private Boolean isCard;

  public static final String JSON_PROPERTY_HEAT_EMISSION = "heatEmission";
  private BigDecimal heatEmission;

  public static final String JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC = "nominalCurrentThresholdPc";
  private BigDecimal nominalCurrentThresholdPc;

  public static final String JSON_PROPERTY_OBJMGMT_ON_CREATE = "objmgmtOnCreate";
  private Boolean objmgmtOnCreate;

  public DeviceMasterDeviceData() {
  }

  public DeviceMasterDeviceData networkDevice(String networkDevice) {
    
    this.networkDevice = networkDevice;
    return this;
  }

   /**
   * Get networkDevice
   * @return networkDevice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkDevice() {
    return networkDevice;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkDevice(String networkDevice) {
    this.networkDevice = networkDevice;
  }


  public DeviceMasterDeviceData heatEmissionExperience(BigDecimal heatEmissionExperience) {
    
    this.heatEmissionExperience = heatEmissionExperience;
    return this;
  }

   /**
   * Get heatEmissionExperience
   * @return heatEmissionExperience
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEAT_EMISSION_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHeatEmissionExperience() {
    return heatEmissionExperience;
  }


  @JsonProperty(JSON_PROPERTY_HEAT_EMISSION_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeatEmissionExperience(BigDecimal heatEmissionExperience) {
    this.heatEmissionExperience = heatEmissionExperience;
  }


  public DeviceMasterDeviceData directorType(String directorType) {
    
    this.directorType = directorType;
    return this;
  }

   /**
   * Get directorType
   * @return directorType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectorType() {
    return directorType;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectorType(String directorType) {
    this.directorType = directorType;
  }


  public DeviceMasterDeviceData idPrefix(String idPrefix) {
    
    this.idPrefix = idPrefix;
    return this;
  }

   /**
   * Get idPrefix
   * @return idPrefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdPrefix() {
    return idPrefix;
  }


  @JsonProperty(JSON_PROPERTY_ID_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdPrefix(String idPrefix) {
    this.idPrefix = idPrefix;
  }


  public DeviceMasterDeviceData used(Boolean used) {
    
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUsed() {
    return used;
  }


  @JsonProperty(JSON_PROPERTY_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsed(Boolean used) {
    this.used = used;
  }


  public DeviceMasterDeviceData explanation(String explanation) {
    
    this.explanation = explanation;
    return this;
  }

   /**
   * Get explanation
   * @return explanation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExplanation() {
    return explanation;
  }


  @JsonProperty(JSON_PROPERTY_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplanation(String explanation) {
    this.explanation = explanation;
  }


  public DeviceMasterDeviceData type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public DeviceMasterDeviceData manufacturer(String manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public DeviceMasterDeviceData nominalCurrent(BigDecimal nominalCurrent) {
    
    this.nominalCurrent = nominalCurrent;
    return this;
  }

   /**
   * Get nominalCurrent
   * @return nominalCurrent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCurrent() {
    return nominalCurrent;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCurrent(BigDecimal nominalCurrent) {
    this.nominalCurrent = nominalCurrent;
  }


  public DeviceMasterDeviceData deviceFromWarehouse(Boolean deviceFromWarehouse) {
    
    this.deviceFromWarehouse = deviceFromWarehouse;
    return this;
  }

   /**
   * Get deviceFromWarehouse
   * @return deviceFromWarehouse
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_FROM_WAREHOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeviceFromWarehouse() {
    return deviceFromWarehouse;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_FROM_WAREHOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceFromWarehouse(Boolean deviceFromWarehouse) {
    this.deviceFromWarehouse = deviceFromWarehouse;
  }


  public DeviceMasterDeviceData deviceToWarehouse(Boolean deviceToWarehouse) {
    
    this.deviceToWarehouse = deviceToWarehouse;
    return this;
  }

   /**
   * Get deviceToWarehouse
   * @return deviceToWarehouse
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_TO_WAREHOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeviceToWarehouse() {
    return deviceToWarehouse;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_TO_WAREHOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceToWarehouse(Boolean deviceToWarehouse) {
    this.deviceToWarehouse = deviceToWarehouse;
  }


  public DeviceMasterDeviceData nominalCurrentThreshold(BigDecimal nominalCurrentThreshold) {
    
    this.nominalCurrentThreshold = nominalCurrentThreshold;
    return this;
  }

   /**
   * Get nominalCurrentThreshold
   * @return nominalCurrentThreshold
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCurrentThreshold() {
    return nominalCurrentThreshold;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCurrentThreshold(BigDecimal nominalCurrentThreshold) {
    this.nominalCurrentThreshold = nominalCurrentThreshold;
  }


  public DeviceMasterDeviceData powerEfficiency(BigDecimal powerEfficiency) {
    
    this.powerEfficiency = powerEfficiency;
    return this;
  }

   /**
   * Get powerEfficiency
   * @return powerEfficiency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_EFFICIENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerEfficiency() {
    return powerEfficiency;
  }


  @JsonProperty(JSON_PROPERTY_POWER_EFFICIENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerEfficiency(BigDecimal powerEfficiency) {
    this.powerEfficiency = powerEfficiency;
  }


  public DeviceMasterDeviceData function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public DeviceMasterDeviceData climateCategory(String climateCategory) {
    
    this.climateCategory = climateCategory;
    return this;
  }

   /**
   * Get climateCategory
   * @return climateCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIMATE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClimateCategory() {
    return climateCategory;
  }


  @JsonProperty(JSON_PROPERTY_CLIMATE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClimateCategory(String climateCategory) {
    this.climateCategory = climateCategory;
  }


  public DeviceMasterDeviceData powerCategory(String powerCategory) {
    
    this.powerCategory = powerCategory;
    return this;
  }

   /**
   * Get powerCategory
   * @return powerCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPowerCategory() {
    return powerCategory;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerCategory(String powerCategory) {
    this.powerCategory = powerCategory;
  }


  public DeviceMasterDeviceData networkCategory(String networkCategory) {
    
    this.networkCategory = networkCategory;
    return this;
  }

   /**
   * Get networkCategory
   * @return networkCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkCategory() {
    return networkCategory;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkCategory(String networkCategory) {
    this.networkCategory = networkCategory;
  }


  public DeviceMasterDeviceData graphic(Boolean graphic) {
    
    this.graphic = graphic;
    return this;
  }

   /**
   * Get graphic
   * @return graphic
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRAPHIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGraphic() {
    return graphic;
  }


  @JsonProperty(JSON_PROPERTY_GRAPHIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGraphic(Boolean graphic) {
    this.graphic = graphic;
  }


  public DeviceMasterDeviceData climateRelevant(Boolean climateRelevant) {
    
    this.climateRelevant = climateRelevant;
    return this;
  }

   /**
   * Get climateRelevant
   * @return climateRelevant
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIMATE_RELEVANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getClimateRelevant() {
    return climateRelevant;
  }


  @JsonProperty(JSON_PROPERTY_CLIMATE_RELEVANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClimateRelevant(Boolean climateRelevant) {
    this.climateRelevant = climateRelevant;
  }


  public DeviceMasterDeviceData manufacturerArticleNumber(String manufacturerArticleNumber) {
    
    this.manufacturerArticleNumber = manufacturerArticleNumber;
    return this;
  }

   /**
   * Get manufacturerArticleNumber
   * @return manufacturerArticleNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturerArticleNumber() {
    return manufacturerArticleNumber;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ARTICLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturerArticleNumber(String manufacturerArticleNumber) {
    this.manufacturerArticleNumber = manufacturerArticleNumber;
  }


  public DeviceMasterDeviceData dimensionDepth(BigDecimal dimensionDepth) {
    
    this.dimensionDepth = dimensionDepth;
    return this;
  }

   /**
   * Get dimensionDepth
   * @return dimensionDepth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDimensionDepth() {
    return dimensionDepth;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionDepth(BigDecimal dimensionDepth) {
    this.dimensionDepth = dimensionDepth;
  }


  public DeviceMasterDeviceData dimensionHeight(BigDecimal dimensionHeight) {
    
    this.dimensionHeight = dimensionHeight;
    return this;
  }

   /**
   * Get dimensionHeight
   * @return dimensionHeight
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDimensionHeight() {
    return dimensionHeight;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionHeight(BigDecimal dimensionHeight) {
    this.dimensionHeight = dimensionHeight;
  }


  public DeviceMasterDeviceData powerConsumption(BigDecimal powerConsumption) {
    
    this.powerConsumption = powerConsumption;
    return this;
  }

   /**
   * Get powerConsumption
   * @return powerConsumption
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumption() {
    return powerConsumption;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumption(BigDecimal powerConsumption) {
    this.powerConsumption = powerConsumption;
  }


  public DeviceMasterDeviceData weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public DeviceMasterDeviceData dimensionWidth(BigDecimal dimensionWidth) {
    
    this.dimensionWidth = dimensionWidth;
    return this;
  }

   /**
   * Get dimensionWidth
   * @return dimensionWidth
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDimensionWidth() {
    return dimensionWidth;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionWidth(BigDecimal dimensionWidth) {
    this.dimensionWidth = dimensionWidth;
  }


  public DeviceMasterDeviceData tcSymbolic(Boolean tcSymbolic) {
    
    this.tcSymbolic = tcSymbolic;
    return this;
  }

   /**
   * Get tcSymbolic
   * @return tcSymbolic
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TC_SYMBOLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTcSymbolic() {
    return tcSymbolic;
  }


  @JsonProperty(JSON_PROPERTY_TC_SYMBOLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTcSymbolic(Boolean tcSymbolic) {
    this.tcSymbolic = tcSymbolic;
  }


  public DeviceMasterDeviceData dataCenterDevice(Boolean dataCenterDevice) {
    
    this.dataCenterDevice = dataCenterDevice;
    return this;
  }

   /**
   * Get dataCenterDevice
   * @return dataCenterDevice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_CENTER_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDataCenterDevice() {
    return dataCenterDevice;
  }


  @JsonProperty(JSON_PROPERTY_DATA_CENTER_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataCenterDevice(Boolean dataCenterDevice) {
    this.dataCenterDevice = dataCenterDevice;
  }


  public DeviceMasterDeviceData elid(String elid) {
    
    this.elid = elid;
    return this;
  }

   /**
   * Get elid
   * @return elid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElid() {
    return elid;
  }


  @JsonProperty(JSON_PROPERTY_ELID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElid(String elid) {
    this.elid = elid;
  }


  public DeviceMasterDeviceData powerConsumptionExperience(BigDecimal powerConsumptionExperience) {
    
    this.powerConsumptionExperience = powerConsumptionExperience;
    return this;
  }

   /**
   * Get powerConsumptionExperience
   * @return powerConsumptionExperience
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPowerConsumptionExperience() {
    return powerConsumptionExperience;
  }


  @JsonProperty(JSON_PROPERTY_POWER_CONSUMPTION_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPowerConsumptionExperience(BigDecimal powerConsumptionExperience) {
    this.powerConsumptionExperience = powerConsumptionExperience;
  }


  public DeviceMasterDeviceData isSplitter(Boolean isSplitter) {
    
    this.isSplitter = isSplitter;
    return this;
  }

   /**
   * Get isSplitter
   * @return isSplitter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SPLITTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSplitter() {
    return isSplitter;
  }


  @JsonProperty(JSON_PROPERTY_IS_SPLITTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSplitter(Boolean isSplitter) {
    this.isSplitter = isSplitter;
  }


  public DeviceMasterDeviceData isStandard(Boolean isStandard) {
    
    this.isStandard = isStandard;
    return this;
  }

   /**
   * Get isStandard
   * @return isStandard
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsStandard() {
    return isStandard;
  }


  @JsonProperty(JSON_PROPERTY_IS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsStandard(Boolean isStandard) {
    this.isStandard = isStandard;
  }


  public DeviceMasterDeviceData climateCapacity(BigDecimal climateCapacity) {
    
    this.climateCapacity = climateCapacity;
    return this;
  }

   /**
   * Get climateCapacity
   * @return climateCapacity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIMATE_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClimateCapacity() {
    return climateCapacity;
  }


  @JsonProperty(JSON_PROPERTY_CLIMATE_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClimateCapacity(BigDecimal climateCapacity) {
    this.climateCapacity = climateCapacity;
  }


  public DeviceMasterDeviceData countStartNo(BigDecimal countStartNo) {
    
    this.countStartNo = countStartNo;
    return this;
  }

   /**
   * Get countStartNo
   * @return countStartNo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT_START_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCountStartNo() {
    return countStartNo;
  }


  @JsonProperty(JSON_PROPERTY_COUNT_START_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountStartNo(BigDecimal countStartNo) {
    this.countStartNo = countStartNo;
  }


  public DeviceMasterDeviceData cooler(Boolean cooler) {
    
    this.cooler = cooler;
    return this;
  }

   /**
   * Get cooler
   * @return cooler
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COOLER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCooler() {
    return cooler;
  }


  @JsonProperty(JSON_PROPERTY_COOLER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCooler(Boolean cooler) {
    this.cooler = cooler;
  }


  public DeviceMasterDeviceData coaxDevice(Boolean coaxDevice) {
    
    this.coaxDevice = coaxDevice;
    return this;
  }

   /**
   * Get coaxDevice
   * @return coaxDevice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COAX_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCoaxDevice() {
    return coaxDevice;
  }


  @JsonProperty(JSON_PROPERTY_COAX_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoaxDevice(Boolean coaxDevice) {
    this.coaxDevice = coaxDevice;
  }


  public DeviceMasterDeviceData climateCapacityExperience(BigDecimal climateCapacityExperience) {
    
    this.climateCapacityExperience = climateCapacityExperience;
    return this;
  }

   /**
   * Get climateCapacityExperience
   * @return climateCapacityExperience
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIMATE_CAPACITY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClimateCapacityExperience() {
    return climateCapacityExperience;
  }


  @JsonProperty(JSON_PROPERTY_CLIMATE_CAPACITY_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClimateCapacityExperience(BigDecimal climateCapacityExperience) {
    this.climateCapacityExperience = climateCapacityExperience;
  }


  public DeviceMasterDeviceData countType(String countType) {
    
    this.countType = countType;
    return this;
  }

   /**
   * Get countType
   * @return countType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountType() {
    return countType;
  }


  @JsonProperty(JSON_PROPERTY_COUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountType(String countType) {
    this.countType = countType;
  }


  public DeviceMasterDeviceData isCard(Boolean isCard) {
    
    this.isCard = isCard;
    return this;
  }

   /**
   * Get isCard
   * @return isCard
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCard() {
    return isCard;
  }


  @JsonProperty(JSON_PROPERTY_IS_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCard(Boolean isCard) {
    this.isCard = isCard;
  }


  public DeviceMasterDeviceData heatEmission(BigDecimal heatEmission) {
    
    this.heatEmission = heatEmission;
    return this;
  }

   /**
   * Get heatEmission
   * @return heatEmission
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEAT_EMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHeatEmission() {
    return heatEmission;
  }


  @JsonProperty(JSON_PROPERTY_HEAT_EMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeatEmission(BigDecimal heatEmission) {
    this.heatEmission = heatEmission;
  }


  public DeviceMasterDeviceData nominalCurrentThresholdPc(BigDecimal nominalCurrentThresholdPc) {
    
    this.nominalCurrentThresholdPc = nominalCurrentThresholdPc;
    return this;
  }

   /**
   * Get nominalCurrentThresholdPc
   * @return nominalCurrentThresholdPc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNominalCurrentThresholdPc() {
    return nominalCurrentThresholdPc;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL_CURRENT_THRESHOLD_PC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominalCurrentThresholdPc(BigDecimal nominalCurrentThresholdPc) {
    this.nominalCurrentThresholdPc = nominalCurrentThresholdPc;
  }


  public DeviceMasterDeviceData objmgmtOnCreate(Boolean objmgmtOnCreate) {
    
    this.objmgmtOnCreate = objmgmtOnCreate;
    return this;
  }

   /**
   * Get objmgmtOnCreate
   * @return objmgmtOnCreate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJMGMT_ON_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getObjmgmtOnCreate() {
    return objmgmtOnCreate;
  }


  @JsonProperty(JSON_PROPERTY_OBJMGMT_ON_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjmgmtOnCreate(Boolean objmgmtOnCreate) {
    this.objmgmtOnCreate = objmgmtOnCreate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMasterDeviceData deviceMasterDeviceData = (DeviceMasterDeviceData) o;
    return Objects.equals(this.networkDevice, deviceMasterDeviceData.networkDevice) &&
        Objects.equals(this.heatEmissionExperience, deviceMasterDeviceData.heatEmissionExperience) &&
        Objects.equals(this.directorType, deviceMasterDeviceData.directorType) &&
        Objects.equals(this.idPrefix, deviceMasterDeviceData.idPrefix) &&
        Objects.equals(this.used, deviceMasterDeviceData.used) &&
        Objects.equals(this.explanation, deviceMasterDeviceData.explanation) &&
        Objects.equals(this.type, deviceMasterDeviceData.type) &&
        Objects.equals(this.manufacturer, deviceMasterDeviceData.manufacturer) &&
        Objects.equals(this.nominalCurrent, deviceMasterDeviceData.nominalCurrent) &&
        Objects.equals(this.deviceFromWarehouse, deviceMasterDeviceData.deviceFromWarehouse) &&
        Objects.equals(this.deviceToWarehouse, deviceMasterDeviceData.deviceToWarehouse) &&
        Objects.equals(this.nominalCurrentThreshold, deviceMasterDeviceData.nominalCurrentThreshold) &&
        Objects.equals(this.powerEfficiency, deviceMasterDeviceData.powerEfficiency) &&
        Objects.equals(this.function, deviceMasterDeviceData.function) &&
        Objects.equals(this.climateCategory, deviceMasterDeviceData.climateCategory) &&
        Objects.equals(this.powerCategory, deviceMasterDeviceData.powerCategory) &&
        Objects.equals(this.networkCategory, deviceMasterDeviceData.networkCategory) &&
        Objects.equals(this.graphic, deviceMasterDeviceData.graphic) &&
        Objects.equals(this.climateRelevant, deviceMasterDeviceData.climateRelevant) &&
        Objects.equals(this.manufacturerArticleNumber, deviceMasterDeviceData.manufacturerArticleNumber) &&
        Objects.equals(this.dimensionDepth, deviceMasterDeviceData.dimensionDepth) &&
        Objects.equals(this.dimensionHeight, deviceMasterDeviceData.dimensionHeight) &&
        Objects.equals(this.powerConsumption, deviceMasterDeviceData.powerConsumption) &&
        Objects.equals(this.weight, deviceMasterDeviceData.weight) &&
        Objects.equals(this.dimensionWidth, deviceMasterDeviceData.dimensionWidth) &&
        Objects.equals(this.tcSymbolic, deviceMasterDeviceData.tcSymbolic) &&
        Objects.equals(this.dataCenterDevice, deviceMasterDeviceData.dataCenterDevice) &&
        Objects.equals(this.elid, deviceMasterDeviceData.elid) &&
        Objects.equals(this.powerConsumptionExperience, deviceMasterDeviceData.powerConsumptionExperience) &&
        Objects.equals(this.isSplitter, deviceMasterDeviceData.isSplitter) &&
        Objects.equals(this.isStandard, deviceMasterDeviceData.isStandard) &&
        Objects.equals(this.climateCapacity, deviceMasterDeviceData.climateCapacity) &&
        Objects.equals(this.countStartNo, deviceMasterDeviceData.countStartNo) &&
        Objects.equals(this.cooler, deviceMasterDeviceData.cooler) &&
        Objects.equals(this.coaxDevice, deviceMasterDeviceData.coaxDevice) &&
        Objects.equals(this.climateCapacityExperience, deviceMasterDeviceData.climateCapacityExperience) &&
        Objects.equals(this.countType, deviceMasterDeviceData.countType) &&
        Objects.equals(this.isCard, deviceMasterDeviceData.isCard) &&
        Objects.equals(this.heatEmission, deviceMasterDeviceData.heatEmission) &&
        Objects.equals(this.nominalCurrentThresholdPc, deviceMasterDeviceData.nominalCurrentThresholdPc) &&
        Objects.equals(this.objmgmtOnCreate, deviceMasterDeviceData.objmgmtOnCreate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkDevice, heatEmissionExperience, directorType, idPrefix, used, explanation, type, manufacturer, nominalCurrent, deviceFromWarehouse, deviceToWarehouse, nominalCurrentThreshold, powerEfficiency, function, climateCategory, powerCategory, networkCategory, graphic, climateRelevant, manufacturerArticleNumber, dimensionDepth, dimensionHeight, powerConsumption, weight, dimensionWidth, tcSymbolic, dataCenterDevice, elid, powerConsumptionExperience, isSplitter, isStandard, climateCapacity, countStartNo, cooler, coaxDevice, climateCapacityExperience, countType, isCard, heatEmission, nominalCurrentThresholdPc, objmgmtOnCreate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMasterDeviceData {\n");
    sb.append("    networkDevice: ").append(toIndentedString(networkDevice)).append("\n");
    sb.append("    heatEmissionExperience: ").append(toIndentedString(heatEmissionExperience)).append("\n");
    sb.append("    directorType: ").append(toIndentedString(directorType)).append("\n");
    sb.append("    idPrefix: ").append(toIndentedString(idPrefix)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    explanation: ").append(toIndentedString(explanation)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    nominalCurrent: ").append(toIndentedString(nominalCurrent)).append("\n");
    sb.append("    deviceFromWarehouse: ").append(toIndentedString(deviceFromWarehouse)).append("\n");
    sb.append("    deviceToWarehouse: ").append(toIndentedString(deviceToWarehouse)).append("\n");
    sb.append("    nominalCurrentThreshold: ").append(toIndentedString(nominalCurrentThreshold)).append("\n");
    sb.append("    powerEfficiency: ").append(toIndentedString(powerEfficiency)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    climateCategory: ").append(toIndentedString(climateCategory)).append("\n");
    sb.append("    powerCategory: ").append(toIndentedString(powerCategory)).append("\n");
    sb.append("    networkCategory: ").append(toIndentedString(networkCategory)).append("\n");
    sb.append("    graphic: ").append(toIndentedString(graphic)).append("\n");
    sb.append("    climateRelevant: ").append(toIndentedString(climateRelevant)).append("\n");
    sb.append("    manufacturerArticleNumber: ").append(toIndentedString(manufacturerArticleNumber)).append("\n");
    sb.append("    dimensionDepth: ").append(toIndentedString(dimensionDepth)).append("\n");
    sb.append("    dimensionHeight: ").append(toIndentedString(dimensionHeight)).append("\n");
    sb.append("    powerConsumption: ").append(toIndentedString(powerConsumption)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    dimensionWidth: ").append(toIndentedString(dimensionWidth)).append("\n");
    sb.append("    tcSymbolic: ").append(toIndentedString(tcSymbolic)).append("\n");
    sb.append("    dataCenterDevice: ").append(toIndentedString(dataCenterDevice)).append("\n");
    sb.append("    elid: ").append(toIndentedString(elid)).append("\n");
    sb.append("    powerConsumptionExperience: ").append(toIndentedString(powerConsumptionExperience)).append("\n");
    sb.append("    isSplitter: ").append(toIndentedString(isSplitter)).append("\n");
    sb.append("    isStandard: ").append(toIndentedString(isStandard)).append("\n");
    sb.append("    climateCapacity: ").append(toIndentedString(climateCapacity)).append("\n");
    sb.append("    countStartNo: ").append(toIndentedString(countStartNo)).append("\n");
    sb.append("    cooler: ").append(toIndentedString(cooler)).append("\n");
    sb.append("    coaxDevice: ").append(toIndentedString(coaxDevice)).append("\n");
    sb.append("    climateCapacityExperience: ").append(toIndentedString(climateCapacityExperience)).append("\n");
    sb.append("    countType: ").append(toIndentedString(countType)).append("\n");
    sb.append("    isCard: ").append(toIndentedString(isCard)).append("\n");
    sb.append("    heatEmission: ").append(toIndentedString(heatEmission)).append("\n");
    sb.append("    nominalCurrentThresholdPc: ").append(toIndentedString(nominalCurrentThresholdPc)).append("\n");
    sb.append("    objmgmtOnCreate: ").append(toIndentedString(objmgmtOnCreate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

